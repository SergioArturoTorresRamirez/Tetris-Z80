                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.0 #9253 (Jun 20 2015) (Linux)
                              4 ; This file was generated Thu Jun 22 16:57:47 2017
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _revizaRenglon
                             14 	.globl _mueveAbajo
                             15 	.globl _revizaPerdio
                             16 	.globl _iniciaJuego
                             17 	.globl _mueveIzquierda
                             18 	.globl _mueveDerecha
                             19 	.globl _giraIzquierda
                             20 	.globl _giraDerecha
                             21 	.globl _dibujaCara
                             22 	.globl _llenaFigura
                             23 	.globl _borraFigura
                             24 	.globl _dibujaFigura
                             25 	.globl _system_init
                             26 	.globl _isr_vector38
                             27 	.globl _isr_vector66
                             28 	.globl _max7219DrawPixel
                             29 	.globl _max7219Clear
                             30 	.globl _isprint
                             31 	.globl __displayBuffer
                             32 	.globl _cont
                             33 	.globl _io_write
                             34 	.globl _io_read
                             35 	.globl _io_write_buffer
                             36 	.globl _io_read_buffer
                             37 	.globl _uart_init
                             38 	.globl _uart_set_baudrate
                             39 	.globl _uart_write
                             40 	.globl _uart_read
                             41 	.globl _uart_available
                             42 	.globl _uart_print
                             43 	.globl _uart_read_line
                             44 	.globl _uart_disable_interrupts
                             45 	.globl _uart_enable_interrupts
                             46 	.globl _ppi_init
                             47 	.globl _ppi_set_portc_bit
                             48 	.globl _ppi_clear_portc_bit
                             49 	.globl _delay_10us
                             50 	.globl _delay_100us
                             51 	.globl _delay_ms
                             52 	.globl _putchar
                             53 	.globl _getchar
                             54 	.globl _spiInit
                             55 	.globl _spiWrite8
                             56 	.globl _spiWrite16
                             57 	.globl _spiWriteBuffer8
                             58 	.globl _spiWriteBuffer16
                             59 	.globl _max7219WriteRegister
                             60 	.globl _max7219Init
                             61 	.globl _max7219Test
                             62 	.globl _max7219SetBright
                             63 	.globl _max7219WriteDisplayBuffer
                             64 	.globl _max7219ReadDisplayBuffer
                             65 	.globl _max7219DrawRow
                             66 	.globl _max7219DrawColumn
                             67 	.globl _max7219ReadPixel
                             68 	.globl _max7219ReadRow
                             69 	.globl _max7219ReadColumn
                             70 ;--------------------------------------------------------
                             71 ; special function registers
                             72 ;--------------------------------------------------------
                     0000    73 _PPI_PORTA	=	0x0000
                     0001    74 _PPI_PORTB	=	0x0001
                     0002    75 _PPI_PORTC	=	0x0002
                     0003    76 _PPI_CTRL	=	0x0003
                     0070    77 _URRBR	=	0x0070
                     0070    78 _URTHR	=	0x0070
                     0071    79 _URIER	=	0x0071
                     0072    80 _URIIR	=	0x0072
                     0073    81 _URLCR	=	0x0073
                     0075    82 _URLSR	=	0x0075
                     0074    83 _URMCR	=	0x0074
                     0076    84 _URMSR	=	0x0076
                     0070    85 _URDLL	=	0x0070
                     0071    86 _URDLM	=	0x0071
                             87 ;--------------------------------------------------------
                             88 ; ram data
                             89 ;--------------------------------------------------------
                             90 	.area _DATA
   0000                      91 ___ret_aux:
   0000                      92 	.ds 1
   0001                      93 _cont::
   0001                      94 	.ds 2
                             95 ;--------------------------------------------------------
                             96 ; ram data
                             97 ;--------------------------------------------------------
                             98 	.area _INITIALIZED
   0000                      99 __displayBuffer::
   0000                     100 	.ds 8
                            101 ;--------------------------------------------------------
                            102 ; absolute external ram data
                            103 ;--------------------------------------------------------
                            104 	.area _DABS (ABS)
                            105 ;--------------------------------------------------------
                            106 ; global & static initialisations
                            107 ;--------------------------------------------------------
                            108 	.area _HOME
                            109 	.area _GSINIT
                            110 	.area _GSFINAL
                            111 	.area _GSINIT
                            112 ;--------------------------------------------------------
                            113 ; Home
                            114 ;--------------------------------------------------------
                            115 	.area _HOME
                            116 	.area _HOME
                            117 ;--------------------------------------------------------
                            118 ; code
                            119 ;--------------------------------------------------------
                            120 	.area _CODE
                            121 ;../SMZ80_SDK/V1/include/smz80.h:238: void io_write(char port_addr, char data) {
                            122 ;	---------------------------------
                            123 ; Function io_write
                            124 ; ---------------------------------
   0000                     125 _io_write::
                            126 ;../SMZ80_SDK/V1/include/smz80.h:248: __endasm;
   0000 DD 21 02 00   [14]  127 	ld ix, #2
   0004 DD 39         [15]  128 	add ix,sp
   0006 DD 4E 00      [19]  129 	ld c, (ix)
   0009 DD 23         [10]  130 	inc ix
   000B DD 7E 00      [19]  131 	ld a,(ix)
   000E ED 79         [12]  132 	out (c), a
   0010 C9            [10]  133 	ret
                            134 ;../SMZ80_SDK/V1/include/smz80.h:251: char io_read(char port_addr) {
                            135 ;	---------------------------------
                            136 ; Function io_read
                            137 ; ---------------------------------
   0011                     138 _io_read::
                            139 ;../SMZ80_SDK/V1/include/smz80.h:259: __endasm;
   0011 DD 21 02 00   [14]  140 	LD IX, #2
   0015 DD 39         [15]  141 	ADD IX,SP
   0017 DD 4E 00      [19]  142 	LD C, (IX)
   001A ED 78         [12]  143 	IN A,(C)
   001C 32r00r00      [13]  144 	LD (___ret_aux),A
                            145 ;../SMZ80_SDK/V1/include/smz80.h:260: return __ret_aux;
   001F FD 21r00r00   [14]  146 	ld	iy,#___ret_aux
   0023 FD 6E 00      [19]  147 	ld	l,0 (iy)
   0026 C9            [10]  148 	ret
                            149 ;../SMZ80_SDK/V1/include/smz80.h:262: void io_write_buffer(char port_addr, char* buffer_out, char count) {
                            150 ;	---------------------------------
                            151 ; Function io_write_buffer
                            152 ; ---------------------------------
   0027                     153 _io_write_buffer::
                            154 ;../SMZ80_SDK/V1/include/smz80.h:277: __endasm;
   0027 DD 21 02 00   [14]  155 	LD IX, #2
   002B DD 39         [15]  156 	ADD IX,SP
   002D DD 4E 00      [19]  157 	LD C, (IX)
   0030 DD 23         [10]  158 	INC IX
   0032 DD 6E 00      [19]  159 	LD L,(IX)
   0035 DD 23         [10]  160 	INC IX
   0037 DD 66 00      [19]  161 	LD H,(IX)
   003A DD 23         [10]  162 	INC IX
   003C DD 46 00      [19]  163 	LD B,(IX)
   003F ED B3         [21]  164 	OTIR
   0041 C9            [10]  165 	ret
                            166 ;../SMZ80_SDK/V1/include/smz80.h:279: void io_read_buffer(char port_addr, char* buffer_in, char count) {
                            167 ;	---------------------------------
                            168 ; Function io_read_buffer
                            169 ; ---------------------------------
   0042                     170 _io_read_buffer::
                            171 ;../SMZ80_SDK/V1/include/smz80.h:294: __endasm;
   0042 DD 21 02 00   [14]  172 	LD IX, #2
   0046 DD 39         [15]  173 	ADD IX,SP
   0048 DD 4E 00      [19]  174 	LD C, (IX)
   004B DD 23         [10]  175 	INC IX
   004D DD 6E 00      [19]  176 	LD L,(IX)
   0050 DD 23         [10]  177 	INC IX
   0052 DD 66 00      [19]  178 	LD H,(IX)
   0055 DD 23         [10]  179 	INC IX
   0057 DD 46 00      [19]  180 	LD B,(IX)
   005A ED B2         [21]  181 	INIR
   005C C9            [10]  182 	ret
                            183 ;../SMZ80_SDK/V1/include/smz80.h:297: void uart_init(const uart_cfg_t *uart_config) {
                            184 ;	---------------------------------
                            185 ; Function uart_init
                            186 ; ---------------------------------
   005D                     187 _uart_init::
   005D DD E5         [15]  188 	push	ix
   005F DD 21 00 00   [14]  189 	ld	ix,#0
   0063 DD 39         [15]  190 	add	ix,sp
                            191 ;../SMZ80_SDK/V1/include/smz80.h:299: uart_set_baudrate(uart_config->baudrate);
   0065 DD 5E 04      [19]  192 	ld	e,4 (ix)
   0068 DD 56 05      [19]  193 	ld	d,5 (ix)
   006B 1A            [ 7]  194 	ld	a,(de)
   006C D5            [11]  195 	push	de
   006D F5            [11]  196 	push	af
   006E 33            [ 6]  197 	inc	sp
   006F CDr93r00      [17]  198 	call	_uart_set_baudrate
   0072 33            [ 6]  199 	inc	sp
   0073 D1            [10]  200 	pop	de
                            201 ;../SMZ80_SDK/V1/include/smz80.h:300: URIER = uart_config->interrupt;
   0074 6B            [ 4]  202 	ld	l, e
   0075 62            [ 4]  203 	ld	h, d
   0076 01 04 00      [10]  204 	ld	bc, #0x0004
   0079 09            [11]  205 	add	hl, bc
   007A 7E            [ 7]  206 	ld	a,(hl)
   007B D3 71         [11]  207 	out	(_URIER),a
                            208 ;../SMZ80_SDK/V1/include/smz80.h:301: URLCR = (uart_config->stop_bits) | (uart_config->parity) | (uart_config->word_length);
   007D 6B            [ 4]  209 	ld	l, e
   007E 62            [ 4]  210 	ld	h, d
   007F 23            [ 6]  211 	inc	hl
   0080 46            [ 7]  212 	ld	b,(hl)
   0081 6B            [ 4]  213 	ld	l, e
   0082 62            [ 4]  214 	ld	h, d
   0083 23            [ 6]  215 	inc	hl
   0084 23            [ 6]  216 	inc	hl
   0085 7E            [ 7]  217 	ld	a,(hl)
   0086 B0            [ 4]  218 	or	a, b
   0087 62            [ 4]  219 	ld	h,d
   0088 6B            [ 4]  220 	ld	l, e
   0089 23            [ 6]  221 	inc	hl
   008A 23            [ 6]  222 	inc	hl
   008B 23            [ 6]  223 	inc	hl
   008C 56            [ 7]  224 	ld	d,(hl)
   008D B2            [ 4]  225 	or	a, d
   008E D3 73         [11]  226 	out	(_URLCR),a
   0090 DD E1         [14]  227 	pop	ix
   0092 C9            [10]  228 	ret
                            229 ;../SMZ80_SDK/V1/include/smz80.h:303: void uart_set_baudrate(const uart_baudrate_t baudrate) {
                            230 ;	---------------------------------
                            231 ; Function uart_set_baudrate
                            232 ; ---------------------------------
   0093                     233 _uart_set_baudrate::
                            234 ;../SMZ80_SDK/V1/include/smz80.h:304: URLCR |= BV(UDLAB);
   0093 DB 73         [11]  235 	in	a,(_URLCR)
   0095 CB FF         [ 8]  236 	set	7, a
   0097 D3 73         [11]  237 	out	(_URLCR),a
                            238 ;../SMZ80_SDK/V1/include/smz80.h:305: URDLL = baudrate;
   0099 21 02 00      [10]  239 	ld	hl, #2+0
   009C 39            [11]  240 	add	hl, sp
   009D 7E            [ 7]  241 	ld	a, (hl)
   009E D3 70         [11]  242 	out	(_URDLL),a
                            243 ;../SMZ80_SDK/V1/include/smz80.h:306: URDLM = ((uint16_t)baudrate)>>8;
   00A0 3E 00         [ 7]  244 	ld	a, #0x00
   00A2 D3 71         [11]  245 	out	(_URDLM),a
                            246 ;../SMZ80_SDK/V1/include/smz80.h:307: URLCR &= ~BV(UDLAB);
   00A4 DB 73         [11]  247 	in	a,(_URLCR)
   00A6 E6 7F         [ 7]  248 	and	a, #0x7F
   00A8 D3 73         [11]  249 	out	(_URLCR),a
   00AA C9            [10]  250 	ret
                            251 ;../SMZ80_SDK/V1/include/smz80.h:309: void uart_write(char c) {
                            252 ;	---------------------------------
                            253 ; Function uart_write
                            254 ; ---------------------------------
   00AB                     255 _uart_write::
                            256 ;../SMZ80_SDK/V1/include/smz80.h:310: while( !(URLSR & BV(UTHRE)))
   00AB                     257 00101$:
   00AB DB 75         [11]  258 	in	a,(_URLSR)
   00AD E6 20         [ 7]  259 	and	a, #0x20
   00AF 20 03         [12]  260 	jr	NZ,00103$
                            261 ;../SMZ80_SDK/V1/include/smz80.h:311: NOP();    
   00B1 00            [ 4]  262 	NOP
   00B2 18 F7         [12]  263 	jr	00101$
   00B4                     264 00103$:
                            265 ;../SMZ80_SDK/V1/include/smz80.h:312: URTHR = c;
   00B4 21 02 00      [10]  266 	ld	hl, #2+0
   00B7 39            [11]  267 	add	hl, sp
   00B8 7E            [ 7]  268 	ld	a, (hl)
   00B9 D3 70         [11]  269 	out	(_URTHR),a
   00BB C9            [10]  270 	ret
                            271 ;../SMZ80_SDK/V1/include/smz80.h:314: char uart_read() {
                            272 ;	---------------------------------
                            273 ; Function uart_read
                            274 ; ---------------------------------
   00BC                     275 _uart_read::
                            276 ;../SMZ80_SDK/V1/include/smz80.h:315: while(!(URLSR & BV(UDR))) 
   00BC                     277 00101$:
   00BC DB 75         [11]  278 	in	a,(_URLSR)
   00BE 0F            [ 4]  279 	rrca
   00BF 38 03         [12]  280 	jr	C,00103$
                            281 ;../SMZ80_SDK/V1/include/smz80.h:316: NOP();
   00C1 00            [ 4]  282 	NOP
   00C2 18 F8         [12]  283 	jr	00101$
   00C4                     284 00103$:
                            285 ;../SMZ80_SDK/V1/include/smz80.h:317: return URRBR;
   00C4 DB 70         [11]  286 	in	a,(_URRBR)
   00C6 6F            [ 4]  287 	ld	l,a
   00C7 C9            [10]  288 	ret
                            289 ;../SMZ80_SDK/V1/include/smz80.h:319: int uart_available(){
                            290 ;	---------------------------------
                            291 ; Function uart_available
                            292 ; ---------------------------------
   00C8                     293 _uart_available::
                            294 ;../SMZ80_SDK/V1/include/smz80.h:320: return (URLSR & BV(UDR));
   00C8 DB 75         [11]  295 	in	a,(_URLSR)
   00CA E6 01         [ 7]  296 	and	a, #0x01
   00CC 6F            [ 4]  297 	ld	l,a
   00CD 26 00         [ 7]  298 	ld	h,#0x00
   00CF C9            [10]  299 	ret
                            300 ;../SMZ80_SDK/V1/include/smz80.h:322: void uart_print(const char* str) {
                            301 ;	---------------------------------
                            302 ; Function uart_print
                            303 ; ---------------------------------
   00D0                     304 _uart_print::
                            305 ;../SMZ80_SDK/V1/include/smz80.h:323: while(*str)       
   00D0 C1            [10]  306 	pop	bc
   00D1 E1            [10]  307 	pop	hl
   00D2 E5            [11]  308 	push	hl
   00D3 C5            [11]  309 	push	bc
   00D4                     310 00101$:
   00D4 7E            [ 7]  311 	ld	a,(hl)
   00D5 B7            [ 4]  312 	or	a, a
   00D6 C8            [11]  313 	ret	Z
                            314 ;../SMZ80_SDK/V1/include/smz80.h:324: putchar(*str++); // envía el siguiente caracter. 
   00D7 23            [ 6]  315 	inc	hl
   00D8 5F            [ 4]  316 	ld	e,a
   00D9 17            [ 4]  317 	rla
   00DA 9F            [ 4]  318 	sbc	a, a
   00DB 57            [ 4]  319 	ld	d,a
   00DC E5            [11]  320 	push	hl
   00DD D5            [11]  321 	push	de
   00DE CDr34r02      [17]  322 	call	_putchar
   00E1 F1            [10]  323 	pop	af
   00E2 E1            [10]  324 	pop	hl
   00E3 18 EF         [12]  325 	jr	00101$
                            326 ;../SMZ80_SDK/V1/include/smz80.h:326: int uart_read_line(char* str) {
                            327 ;	---------------------------------
                            328 ; Function uart_read_line
                            329 ; ---------------------------------
   00E5                     330 _uart_read_line::
   00E5 DD E5         [15]  331 	push	ix
   00E7 DD 21 00 00   [14]  332 	ld	ix,#0
   00EB DD 39         [15]  333 	add	ix,sp
   00ED F5            [11]  334 	push	af
                            335 ;../SMZ80_SDK/V1/include/smz80.h:327: int n=0;
   00EE 01 00 00      [10]  336 	ld	bc,#0x0000
                            337 ;../SMZ80_SDK/V1/include/smz80.h:329: while(n<MAXLINE-1 && (c=getchar()) != '\n' && c !='\r') {
   00F1                     338 00111$:
   00F1 79            [ 4]  339 	ld	a,c
   00F2 D6 FF         [ 7]  340 	sub	a, #0xFF
   00F4 78            [ 4]  341 	ld	a,b
   00F5 17            [ 4]  342 	rla
   00F6 3F            [ 4]  343 	ccf
   00F7 1F            [ 4]  344 	rra
   00F8 DE 83         [ 7]  345 	sbc	a, #0x83
   00FA D2r84r01      [10]  346 	jp	NC,00113$
   00FD C5            [11]  347 	push	bc
   00FE CDr63r02      [17]  348 	call	_getchar
   0101 7D            [ 4]  349 	ld	a,l
   0102 C1            [10]  350 	pop	bc
   0103 67            [ 4]  351 	ld	h,a
   0104 D6 0A         [ 7]  352 	sub	a, #0x0A
   0106 CAr84r01      [10]  353 	jp	Z,00113$
   0109 7C            [ 4]  354 	ld	a,h
   010A D6 0D         [ 7]  355 	sub	a, #0x0D
   010C 28 76         [12]  356 	jr	Z,00113$
                            357 ;../SMZ80_SDK/V1/include/smz80.h:333: putchar(c);
   010E DD 74 FE      [19]  358 	ld	-2 (ix),h
   0111 7C            [ 4]  359 	ld	a,h
   0112 17            [ 4]  360 	rla
   0113 9F            [ 4]  361 	sbc	a, a
   0114 DD 77 FF      [19]  362 	ld	-1 (ix),a
                            363 ;../SMZ80_SDK/V1/include/smz80.h:330: if(c == 0x7F || c==0x08) {
   0117 7C            [ 4]  364 	ld	a,h
   0118 FE 7F         [ 7]  365 	cp	a,#0x7F
   011A 28 04         [12]  366 	jr	Z,00105$
   011C D6 08         [ 7]  367 	sub	a, #0x08
   011E 20 32         [12]  368 	jr	NZ,00106$
   0120                     369 00105$:
                            370 ;../SMZ80_SDK/V1/include/smz80.h:331: if(n>0){
   0120 AF            [ 4]  371 	xor	a, a
   0121 B9            [ 4]  372 	cp	a, c
   0122 98            [ 4]  373 	sbc	a, b
   0123 E2r28r01      [10]  374 	jp	PO, 00149$
   0126 EE 80         [ 7]  375 	xor	a, #0x80
   0128                     376 00149$:
   0128 F2rF1r00      [10]  377 	jp	P,00111$
                            378 ;../SMZ80_SDK/V1/include/smz80.h:332: str[--n]='\0';
   012B 0B            [ 6]  379 	dec	bc
   012C DD 6E 04      [19]  380 	ld	l,4 (ix)
   012F DD 66 05      [19]  381 	ld	h,5 (ix)
   0132 09            [11]  382 	add	hl,bc
   0133 36 00         [10]  383 	ld	(hl),#0x00
                            384 ;../SMZ80_SDK/V1/include/smz80.h:333: putchar(c);
   0135 C5            [11]  385 	push	bc
   0136 D1            [10]  386 	pop	de
   0137 E1            [10]  387 	pop	hl
   0138 E5            [11]  388 	push	hl
   0139 D5            [11]  389 	push	de
   013A E5            [11]  390 	push	hl
   013B CDr34r02      [17]  391 	call	_putchar
   013E 21 20 00      [10]  392 	ld	hl, #0x0020
   0141 E3            [19]  393 	ex	(sp),hl
   0142 CDr34r02      [17]  394 	call	_putchar
   0145 F1            [10]  395 	pop	af
   0146 D1            [10]  396 	pop	de
   0147 E1            [10]  397 	pop	hl
   0148 E5            [11]  398 	push	hl
   0149 D5            [11]  399 	push	de
   014A E5            [11]  400 	push	hl
   014B CDr34r02      [17]  401 	call	_putchar
   014E F1            [10]  402 	pop	af
   014F C1            [10]  403 	pop	bc
   0150 18 9F         [12]  404 	jr	00111$
   0152                     405 00106$:
                            406 ;../SMZ80_SDK/V1/include/smz80.h:339: if(isprint(c)) {
   0152 E5            [11]  407 	push	hl
   0153 C5            [11]  408 	push	bc
   0154 DD 5E FE      [19]  409 	ld	e,-2 (ix)
   0157 DD 56 FF      [19]  410 	ld	d,-1 (ix)
   015A D5            [11]  411 	push	de
   015B CDr00r00      [17]  412 	call	_isprint
   015E F1            [10]  413 	pop	af
   015F 54            [ 4]  414 	ld	d,h
   0160 C1            [10]  415 	pop	bc
   0161 F1            [10]  416 	pop	af
   0162 67            [ 4]  417 	ld	h,a
   0163 7A            [ 4]  418 	ld	a,d
   0164 B5            [ 4]  419 	or	a,l
   0165 28 8A         [12]  420 	jr	Z,00111$
                            421 ;../SMZ80_SDK/V1/include/smz80.h:340: str[n++]=c;
   0167 C5            [11]  422 	push	bc
   0168 FD E1         [14]  423 	pop	iy
   016A 03            [ 6]  424 	inc	bc
   016B DD 5E 04      [19]  425 	ld	e,4 (ix)
   016E DD 56 05      [19]  426 	ld	d,5 (ix)
   0171 FD 19         [15]  427 	add	iy, de
   0173 FD 74 00      [19]  428 	ld	0 (iy), h
                            429 ;../SMZ80_SDK/V1/include/smz80.h:341: putchar(c);
   0176 C5            [11]  430 	push	bc
   0177 D1            [10]  431 	pop	de
   0178 E1            [10]  432 	pop	hl
   0179 E5            [11]  433 	push	hl
   017A D5            [11]  434 	push	de
   017B E5            [11]  435 	push	hl
   017C CDr34r02      [17]  436 	call	_putchar
   017F F1            [10]  437 	pop	af
   0180 C1            [10]  438 	pop	bc
   0181 C3rF1r00      [10]  439 	jp	00111$
   0184                     440 00113$:
                            441 ;../SMZ80_SDK/V1/include/smz80.h:344: str[n]='\0';     
   0184 DD 6E 04      [19]  442 	ld	l,4 (ix)
   0187 DD 66 05      [19]  443 	ld	h,5 (ix)
   018A 09            [11]  444 	add	hl,bc
   018B 36 00         [10]  445 	ld	(hl),#0x00
                            446 ;../SMZ80_SDK/V1/include/smz80.h:345: putchar('\n');
   018D C5            [11]  447 	push	bc
   018E 21 0A 00      [10]  448 	ld	hl,#0x000A
   0191 E5            [11]  449 	push	hl
   0192 CDr34r02      [17]  450 	call	_putchar
   0195 F1            [10]  451 	pop	af
                            452 ;../SMZ80_SDK/V1/include/smz80.h:346: return n;
   0196 E1            [10]  453 	pop	hl
   0197 DD F9         [10]  454 	ld	sp, ix
   0199 DD E1         [14]  455 	pop	ix
   019B C9            [10]  456 	ret
                            457 ;../SMZ80_SDK/V1/include/smz80.h:348: void uart_disable_interrupts() {
                            458 ;	---------------------------------
                            459 ; Function uart_disable_interrupts
                            460 ; ---------------------------------
   019C                     461 _uart_disable_interrupts::
                            462 ;../SMZ80_SDK/V1/include/smz80.h:349: URIER = 0;
   019C 3E 00         [ 7]  463 	ld	a,#0x00
   019E D3 71         [11]  464 	out	(_URIER),a
   01A0 C9            [10]  465 	ret
                            466 ;../SMZ80_SDK/V1/include/smz80.h:351: void uart_enable_interrupts(uart_interrupt_t int_cfg) {
                            467 ;	---------------------------------
                            468 ; Function uart_enable_interrupts
                            469 ; ---------------------------------
   01A1                     470 _uart_enable_interrupts::
                            471 ;../SMZ80_SDK/V1/include/smz80.h:352: URIER = int_cfg;
   01A1 21 02 00      [10]  472 	ld	hl, #2+0
   01A4 39            [11]  473 	add	hl, sp
   01A5 7E            [ 7]  474 	ld	a, (hl)
   01A6 D3 71         [11]  475 	out	(_URIER),a
   01A8 C9            [10]  476 	ret
                            477 ;../SMZ80_SDK/V1/include/smz80.h:356: void ppi_init(const ppi_cfg_t *ppi_config) {
                            478 ;	---------------------------------
                            479 ; Function ppi_init
                            480 ; ---------------------------------
   01A9                     481 _ppi_init::
   01A9 DD E5         [15]  482 	push	ix
   01AB DD 21 00 00   [14]  483 	ld	ix,#0
   01AF DD 39         [15]  484 	add	ix,sp
                            485 ;../SMZ80_SDK/V1/include/smz80.h:357: PPI_CTRL = 0x80 | ppi_config->mode | (ppi_config->pcl_dir << PCPCL) | (ppi_config->pch_dir << PCPCH) | (ppi_config->pa_dir << PCPA) | (ppi_config->pb_dir << PCPB);
   01B1 DD 4E 04      [19]  486 	ld	c,4 (ix)
   01B4 DD 46 05      [19]  487 	ld	b,5 (ix)
   01B7 0A            [ 7]  488 	ld	a,(bc)
   01B8 CB FF         [ 8]  489 	set	7, a
   01BA 5F            [ 4]  490 	ld	e,a
   01BB C5            [11]  491 	push	bc
   01BC FD E1         [14]  492 	pop	iy
   01BE FD 7E 03      [19]  493 	ld	a,3 (iy)
   01C1 B3            [ 4]  494 	or	a, e
   01C2 5F            [ 4]  495 	ld	e,a
   01C3 C5            [11]  496 	push	bc
   01C4 FD E1         [14]  497 	pop	iy
   01C6 FD 7E 04      [19]  498 	ld	a,4 (iy)
   01C9 07            [ 4]  499 	rlca
   01CA 07            [ 4]  500 	rlca
   01CB 07            [ 4]  501 	rlca
   01CC E6 F8         [ 7]  502 	and	a,#0xF8
   01CE B3            [ 4]  503 	or	a, e
   01CF 5F            [ 4]  504 	ld	e,a
   01D0 69            [ 4]  505 	ld	l, c
   01D1 60            [ 4]  506 	ld	h, b
   01D2 23            [ 6]  507 	inc	hl
   01D3 7E            [ 7]  508 	ld	a,(hl)
   01D4 07            [ 4]  509 	rlca
   01D5 07            [ 4]  510 	rlca
   01D6 07            [ 4]  511 	rlca
   01D7 07            [ 4]  512 	rlca
   01D8 E6 F0         [ 7]  513 	and	a,#0xF0
   01DA B3            [ 4]  514 	or	a, e
   01DB 57            [ 4]  515 	ld	d,a
   01DC 69            [ 4]  516 	ld	l, c
   01DD 60            [ 4]  517 	ld	h, b
   01DE 23            [ 6]  518 	inc	hl
   01DF 23            [ 6]  519 	inc	hl
   01E0 7E            [ 7]  520 	ld	a,(hl)
   01E1 87            [ 4]  521 	add	a, a
   01E2 B2            [ 4]  522 	or	a, d
   01E3 D3 03         [11]  523 	out	(_PPI_CTRL),a
   01E5 DD E1         [14]  524 	pop	ix
   01E7 C9            [10]  525 	ret
                            526 ;../SMZ80_SDK/V1/include/smz80.h:359: void ppi_set_portc_bit(const char bit) {
                            527 ;	---------------------------------
                            528 ; Function ppi_set_portc_bit
                            529 ; ---------------------------------
   01E8                     530 _ppi_set_portc_bit::
                            531 ;../SMZ80_SDK/V1/include/smz80.h:360: PPI_CTRL = 1 | bit << 1;
   01E8 21 02 00      [10]  532 	ld	hl, #2+0
   01EB 39            [11]  533 	add	hl, sp
   01EC 7E            [ 7]  534 	ld	a, (hl)
   01ED 87            [ 4]  535 	add	a, a
   01EE CB C7         [ 8]  536 	set	0, a
   01F0 D3 03         [11]  537 	out	(_PPI_CTRL),a
   01F2 C9            [10]  538 	ret
                            539 ;../SMZ80_SDK/V1/include/smz80.h:362: void ppi_clear_portc_bit(const char bit) {
                            540 ;	---------------------------------
                            541 ; Function ppi_clear_portc_bit
                            542 ; ---------------------------------
   01F3                     543 _ppi_clear_portc_bit::
                            544 ;../SMZ80_SDK/V1/include/smz80.h:363: PPI_CTRL = bit << 1;
   01F3 21 02 00      [10]  545 	ld	hl, #2+0
   01F6 39            [11]  546 	add	hl, sp
   01F7 7E            [ 7]  547 	ld	a, (hl)
   01F8 87            [ 4]  548 	add	a, a
   01F9 D3 03         [11]  549 	out	(_PPI_CTRL),a
   01FB C9            [10]  550 	ret
                            551 ;../SMZ80_SDK/V1/include/smz80.h:366: void delay_10us(){
                            552 ;	---------------------------------
                            553 ; Function delay_10us
                            554 ; ---------------------------------
   01FC                     555 _delay_10us::
                            556 ;../SMZ80_SDK/V1/include/smz80.h:375: __endasm;
   01FC D9            [ 4]  557 	EXX
   01FD 08            [ 4]  558 	EX AF,AF'
   01FE 06 02         [ 7]  559 	LD B,#0x2
   0200                     560 	    LOOP_10:
   0200 10 FE         [13]  561 	DJNZ LOOP_10
   0202 08            [ 4]  562 	EX AF,AF'
   0203 D9            [ 4]  563 	EXX
   0204 C9            [10]  564 	ret
                            565 ;../SMZ80_SDK/V1/include/smz80.h:377: void delay_100us(){
                            566 ;	---------------------------------
                            567 ; Function delay_100us
                            568 ; ---------------------------------
   0205                     569 _delay_100us::
                            570 ;../SMZ80_SDK/V1/include/smz80.h:386: __endasm;
   0205 D9            [ 4]  571 	EXX
   0206 08            [ 4]  572 	EX AF,AF'
   0207 06 3A         [ 7]  573 	LD B,#0x3A
   0209                     574 	    LOOP_100:
   0209 10 FE         [13]  575 	DJNZ LOOP_100
   020B 08            [ 4]  576 	EX AF,AF'
   020C D9            [ 4]  577 	EXX
   020D C9            [10]  578 	ret
                            579 ;../SMZ80_SDK/V1/include/smz80.h:388: void delay_ms(int ms) {
                            580 ;	---------------------------------
                            581 ; Function delay_ms
                            582 ; ---------------------------------
   020E                     583 _delay_ms::
   020E DD E5         [15]  584 	push	ix
   0210 DD 21 00 00   [14]  585 	ld	ix,#0
   0214 DD 39         [15]  586 	add	ix,sp
                            587 ;../SMZ80_SDK/V1/include/smz80.h:391: while(ms--)
   0216 DD 4E 04      [19]  588 	ld	c,4 (ix)
   0219 DD 46 05      [19]  589 	ld	b,5 (ix)
   021C                     590 00102$:
   021C 59            [ 4]  591 	ld	e, c
   021D 50            [ 4]  592 	ld	d, b
   021E 0B            [ 6]  593 	dec	bc
   021F 7A            [ 4]  594 	ld	a,d
   0220 B3            [ 4]  595 	or	a,e
   0221 28 0E         [12]  596 	jr	Z,00108$
                            597 ;../SMZ80_SDK/V1/include/smz80.h:392: for(i=0;i<0x106;i++)
   0223 21 06 01      [10]  598 	ld	hl,#0x0106
   0226                     599 00107$:
                            600 ;../SMZ80_SDK/V1/include/smz80.h:393: __asm__("nop");
   0226 00            [ 4]  601 	nop
   0227 EB            [ 4]  602 	ex	de,hl
   0228 1B            [ 6]  603 	dec	de
   0229 6B            [ 4]  604 	ld	l, e
                            605 ;../SMZ80_SDK/V1/include/smz80.h:392: for(i=0;i<0x106;i++)
   022A 7A            [ 4]  606 	ld	a,d
   022B 67            [ 4]  607 	ld	h,a
   022C B3            [ 4]  608 	or	a,e
   022D 20 F7         [12]  609 	jr	NZ,00107$
   022F 18 EB         [12]  610 	jr	00102$
   0231                     611 00108$:
   0231 DD E1         [14]  612 	pop	ix
   0233 C9            [10]  613 	ret
                            614 ;../SMZ80_SDK/V1/include/smz80.h:395: int putchar(int c) {
                            615 ;	---------------------------------
                            616 ; Function putchar
                            617 ; ---------------------------------
   0234                     618 _putchar::
                            619 ;../SMZ80_SDK/V1/include/smz80.h:397: if(c=='\n')
   0234 FD 21 02 00   [14]  620 	ld	iy,#2
   0238 FD 39         [15]  621 	add	iy,sp
   023A FD 7E 00      [19]  622 	ld	a,0 (iy)
   023D D6 0A         [ 7]  623 	sub	a, #0x0A
   023F 20 0E         [12]  624 	jr	NZ,00102$
   0241 FD 7E 01      [19]  625 	ld	a,1 (iy)
   0244 B7            [ 4]  626 	or	a, a
   0245 20 08         [12]  627 	jr	NZ,00102$
                            628 ;../SMZ80_SDK/V1/include/smz80.h:398: uart_write('\r');
   0247 3E 0D         [ 7]  629 	ld	a,#0x0D
   0249 F5            [11]  630 	push	af
   024A 33            [ 6]  631 	inc	sp
   024B CDrABr00      [17]  632 	call	_uart_write
   024E 33            [ 6]  633 	inc	sp
   024F                     634 00102$:
                            635 ;../SMZ80_SDK/V1/include/smz80.h:399: uart_write(c);
   024F FD 21 02 00   [14]  636 	ld	iy,#2
   0253 FD 39         [15]  637 	add	iy,sp
   0255 FD 66 00      [19]  638 	ld	h,0 (iy)
   0258 E5            [11]  639 	push	hl
   0259 33            [ 6]  640 	inc	sp
   025A CDrABr00      [17]  641 	call	_uart_write
   025D 33            [ 6]  642 	inc	sp
                            643 ;../SMZ80_SDK/V1/include/smz80.h:401: return c;
   025E C1            [10]  644 	pop	bc
   025F E1            [10]  645 	pop	hl
   0260 E5            [11]  646 	push	hl
   0261 C5            [11]  647 	push	bc
   0262 C9            [10]  648 	ret
                            649 ;../SMZ80_SDK/V1/include/smz80.h:403: char getchar() {
                            650 ;	---------------------------------
                            651 ; Function getchar
                            652 ; ---------------------------------
   0263                     653 _getchar::
                            654 ;../SMZ80_SDK/V1/include/smz80.h:406: return uart_read();
   0263 C3rBCr00      [10]  655 	jp	_uart_read
                            656 ;spi.h:17: void spiInit() {
                            657 ;	---------------------------------
                            658 ; Function spiInit
                            659 ; ---------------------------------
   0266                     660 _spiInit::
                            661 ;spi.h:19: PPI_CTRL = 0x81;
   0266 3E 81         [ 7]  662 	ld	a,#0x81
   0268 D3 03         [11]  663 	out	(_PPI_CTRL),a
                            664 ;spi.h:20: PPI_SPI_PORT = (1 << PPI_SPI_SS);
   026A 3E 02         [ 7]  665 	ld	a,#0x02
   026C D3 00         [11]  666 	out	(_PPI_PORTA),a
   026E C9            [10]  667 	ret
                            668 ;spi.h:23: void spiWrite8(uint8_t data) {
                            669 ;	---------------------------------
                            670 ; Function spiWrite8
                            671 ; ---------------------------------
   026F                     672 _spiWrite8::
                            673 ;spi.h:26: PPI_SPI_PORT = 0;  //Selecciona el chip y pone a cero la linea de datos y reloj
   026F 3E 00         [ 7]  674 	ld	a,#0x00
   0271 D3 00         [11]  675 	out	(_PPI_PORTA),a
                            676 ;spi.h:28: for (i = 0; i < 8; ++i)
   0273 16 00         [ 7]  677 	ld	d,#0x00
   0275                     678 00105$:
                            679 ;spi.h:30: if( (data << i) & 0x80 )                    // si el bit MSB es 1
   0275 FD 21 02 00   [14]  680 	ld	iy,#2
   0279 FD 39         [15]  681 	add	iy,sp
   027B FD 6E 00      [19]  682 	ld	l,0 (iy)
   027E 26 00         [ 7]  683 	ld	h,#0x00
   0280 42            [ 4]  684 	ld	b,d
   0281 04            [ 4]  685 	inc	b
   0282 18 01         [12]  686 	jr	00123$
   0284                     687 00122$:
   0284 29            [11]  688 	add	hl, hl
   0285                     689 00123$:
   0285 10 FD         [13]  690 	djnz	00122$
   0287 CB 7D         [ 8]  691 	bit	7, l
   0289 28 08         [12]  692 	jr	Z,00102$
                            693 ;spi.h:31: PPI_SPI_PORT |= (1 << PPI_SPI_MOSI);    // Pone en alto el pin de datos
   028B DB 00         [11]  694 	in	a,(_PPI_PORTA)
   028D CB C7         [ 8]  695 	set	0, a
   028F D3 00         [11]  696 	out	(_PPI_PORTA),a
   0291 18 06         [12]  697 	jr	00103$
   0293                     698 00102$:
                            699 ;spi.h:33: PPI_SPI_PORT &= ~(1 << PPI_SPI_MOSI);    // Pone en alto el pin de datos
   0293 DB 00         [11]  700 	in	a,(_PPI_PORTA)
   0295 E6 FE         [ 7]  701 	and	a, #0xFE
   0297 D3 00         [11]  702 	out	(_PPI_PORTA),a
   0299                     703 00103$:
                            704 ;spi.h:35: PPI_SPI_PORT |= (1 << PPI_SPI_SCK);         // Pone a 1 la linea del reloj
   0299 DB 00         [11]  705 	in	a,(_PPI_PORTA)
   029B CB D7         [ 8]  706 	set	2, a
   029D D3 00         [11]  707 	out	(_PPI_PORTA),a
                            708 ;spi.h:36: PPI_SPI_PORT &= ~(1 << PPI_SPI_SCK);        // pone a 0 la linea del reloj.
   029F DB 00         [11]  709 	in	a,(_PPI_PORTA)
   02A1 E6 FB         [ 7]  710 	and	a, #0xFB
   02A3 D3 00         [11]  711 	out	(_PPI_PORTA),a
                            712 ;spi.h:28: for (i = 0; i < 8; ++i)
   02A5 14            [ 4]  713 	inc	d
   02A6 7A            [ 4]  714 	ld	a,d
   02A7 D6 08         [ 7]  715 	sub	a, #0x08
   02A9 38 CA         [12]  716 	jr	C,00105$
                            717 ;spi.h:39: PPI_SPI_PORT = (1 << PPI_SPI_SS);               // Deshabilita el chip
   02AB 3E 02         [ 7]  718 	ld	a,#0x02
   02AD D3 00         [11]  719 	out	(_PPI_PORTA),a
   02AF C9            [10]  720 	ret
                            721 ;spi.h:42: void spiWrite16(uint16_t data) {
                            722 ;	---------------------------------
                            723 ; Function spiWrite16
                            724 ; ---------------------------------
   02B0                     725 _spiWrite16::
                            726 ;spi.h:45: PPI_SPI_PORT = 0;  //Selecciona el chip y pone a cero la linea de datos y reloj
   02B0 3E 00         [ 7]  727 	ld	a,#0x00
   02B2 D3 00         [11]  728 	out	(_PPI_PORTA),a
                            729 ;spi.h:47: for (i = 0; i < 16; ++i)
   02B4 16 00         [ 7]  730 	ld	d,#0x00
   02B6                     731 00105$:
                            732 ;spi.h:49: if( (data << i) & 0x8000 )                  // si el bit MSB es 1
   02B6 42            [ 4]  733 	ld	b,d
   02B7 F5            [11]  734 	push	af
   02B8 21 04 00      [10]  735 	ld	hl, #4
   02BB 39            [11]  736 	add	hl, sp
   02BC 7E            [ 7]  737 	ld	a, (hl)
   02BD 23            [ 6]  738 	inc	hl
   02BE 66            [ 7]  739 	ld	h, (hl)
   02BF 6F            [ 4]  740 	ld	l, a
   02C0 F1            [10]  741 	pop	af
   02C1 04            [ 4]  742 	inc	b
   02C2 18 01         [12]  743 	jr	00123$
   02C4                     744 00122$:
   02C4 29            [11]  745 	add	hl, hl
   02C5                     746 00123$:
   02C5 10 FD         [13]  747 	djnz	00122$
   02C7 29            [11]  748 	add	hl, hl
   02C8 30 08         [12]  749 	jr	NC,00102$
                            750 ;spi.h:50: PPI_SPI_PORT |= (1 << PPI_SPI_MOSI);    // Pone en alto el pin de datos
   02CA DB 00         [11]  751 	in	a,(_PPI_PORTA)
   02CC CB C7         [ 8]  752 	set	0, a
   02CE D3 00         [11]  753 	out	(_PPI_PORTA),a
   02D0 18 06         [12]  754 	jr	00103$
   02D2                     755 00102$:
                            756 ;spi.h:52: PPI_SPI_PORT &= ~(1 << PPI_SPI_MOSI);    // Pone en alto el pin de datos
   02D2 DB 00         [11]  757 	in	a,(_PPI_PORTA)
   02D4 E6 FE         [ 7]  758 	and	a, #0xFE
   02D6 D3 00         [11]  759 	out	(_PPI_PORTA),a
   02D8                     760 00103$:
                            761 ;spi.h:54: PPI_SPI_PORT |= (1 << PPI_SPI_SCK);         // Pone a 1 la linea del reloj.
   02D8 DB 00         [11]  762 	in	a,(_PPI_PORTA)
   02DA CB D7         [ 8]  763 	set	2, a
   02DC D3 00         [11]  764 	out	(_PPI_PORTA),a
                            765 ;spi.h:56: PPI_SPI_PORT &= ~(1 << PPI_SPI_SCK);        // pone a 0 la linea del reloj.
   02DE DB 00         [11]  766 	in	a,(_PPI_PORTA)
   02E0 E6 FB         [ 7]  767 	and	a, #0xFB
   02E2 D3 00         [11]  768 	out	(_PPI_PORTA),a
                            769 ;spi.h:47: for (i = 0; i < 16; ++i)
   02E4 14            [ 4]  770 	inc	d
   02E5 7A            [ 4]  771 	ld	a,d
   02E6 D6 10         [ 7]  772 	sub	a, #0x10
   02E8 38 CC         [12]  773 	jr	C,00105$
                            774 ;spi.h:60: PPI_SPI_PORT = (1 << PPI_SPI_SS);               // Deshabilita el chip
   02EA 3E 02         [ 7]  775 	ld	a,#0x02
   02EC D3 00         [11]  776 	out	(_PPI_PORTA),a
   02EE C9            [10]  777 	ret
                            778 ;spi.h:63: void spiWriteBuffer8(uint8_t* buffer, uint8_t bufferLen) {
                            779 ;	---------------------------------
                            780 ; Function spiWriteBuffer8
                            781 ; ---------------------------------
   02EF                     782 _spiWriteBuffer8::
                            783 ;spi.h:66: for (i = 0; i < bufferLen; ++i)
   02EF 1E 00         [ 7]  784 	ld	e,#0x00
   02F1                     785 00103$:
   02F1 21 04 00      [10]  786 	ld	hl,#4
   02F4 39            [11]  787 	add	hl,sp
   02F5 7B            [ 4]  788 	ld	a,e
   02F6 96            [ 7]  789 	sub	a, (hl)
   02F7 D0            [11]  790 	ret	NC
                            791 ;spi.h:67: spiWrite8(buffer[i]);
   02F8 21 02 00      [10]  792 	ld	hl, #2
   02FB 39            [11]  793 	add	hl, sp
   02FC 7E            [ 7]  794 	ld	a, (hl)
   02FD 23            [ 6]  795 	inc	hl
   02FE 66            [ 7]  796 	ld	h, (hl)
   02FF 6F            [ 4]  797 	ld	l, a
   0300 16 00         [ 7]  798 	ld	d,#0x00
   0302 19            [11]  799 	add	hl, de
   0303 66            [ 7]  800 	ld	h,(hl)
   0304 D5            [11]  801 	push	de
   0305 E5            [11]  802 	push	hl
   0306 33            [ 6]  803 	inc	sp
   0307 CDr6Fr02      [17]  804 	call	_spiWrite8
   030A 33            [ 6]  805 	inc	sp
   030B D1            [10]  806 	pop	de
                            807 ;spi.h:66: for (i = 0; i < bufferLen; ++i)
   030C 1C            [ 4]  808 	inc	e
   030D 18 E2         [12]  809 	jr	00103$
                            810 ;spi.h:71: void spiWriteBuffer16(uint16_t* buffer, uint8_t bufferLen) {
                            811 ;	---------------------------------
                            812 ; Function spiWriteBuffer16
                            813 ; ---------------------------------
   030F                     814 _spiWriteBuffer16::
                            815 ;spi.h:74: for (i = 0; i < bufferLen; ++i)
   030F 16 00         [ 7]  816 	ld	d,#0x00
   0311                     817 00103$:
   0311 21 04 00      [10]  818 	ld	hl,#4
   0314 39            [11]  819 	add	hl,sp
   0315 7A            [ 4]  820 	ld	a,d
   0316 96            [ 7]  821 	sub	a, (hl)
   0317 D0            [11]  822 	ret	NC
                            823 ;spi.h:75: spiWrite16(buffer[i]);
   0318 6A            [ 4]  824 	ld	l,d
   0319 26 00         [ 7]  825 	ld	h,#0x00
   031B 29            [11]  826 	add	hl, hl
   031C 5D            [ 4]  827 	ld	e,l
   031D 44            [ 4]  828 	ld	b,h
   031E FD 21 02 00   [14]  829 	ld	iy,#2
   0322 FD 39         [15]  830 	add	iy,sp
   0324 FD 7E 00      [19]  831 	ld	a,0 (iy)
   0327 83            [ 4]  832 	add	a, e
   0328 4F            [ 4]  833 	ld	c,a
   0329 FD 7E 01      [19]  834 	ld	a,1 (iy)
   032C 88            [ 4]  835 	adc	a, b
   032D 47            [ 4]  836 	ld	b,a
   032E 69            [ 4]  837 	ld	l, c
   032F 60            [ 4]  838 	ld	h, b
   0330 4E            [ 7]  839 	ld	c,(hl)
   0331 23            [ 6]  840 	inc	hl
   0332 46            [ 7]  841 	ld	b,(hl)
   0333 D5            [11]  842 	push	de
   0334 C5            [11]  843 	push	bc
   0335 CDrB0r02      [17]  844 	call	_spiWrite16
   0338 F1            [10]  845 	pop	af
   0339 D1            [10]  846 	pop	de
                            847 ;spi.h:74: for (i = 0; i < bufferLen; ++i)
   033A 14            [ 4]  848 	inc	d
   033B 18 D4         [12]  849 	jr	00103$
                            850 ;max7219.h:42: void max7219WriteRegister(unsigned char reg, unsigned char data) {
                            851 ;	---------------------------------
                            852 ; Function max7219WriteRegister
                            853 ; ---------------------------------
   033D                     854 _max7219WriteRegister::
   033D DD E5         [15]  855 	push	ix
   033F DD 21 00 00   [14]  856 	ld	ix,#0
   0343 DD 39         [15]  857 	add	ix,sp
                            858 ;max7219.h:45: max_data = (((uint16_t)(reg)) & (0x0F)) << 8;
   0345 DD 7E 04      [19]  859 	ld	a, 4 (ix)
   0348 E6 0F         [ 7]  860 	and	a, #0x0F
   034A 67            [ 4]  861 	ld	h,a
   034B 2E 00         [ 7]  862 	ld	l,#0x00
                            863 ;max7219.h:46: max_data |= data;
   034D DD 5E 05      [19]  864 	ld	e,5 (ix)
   0350 16 00         [ 7]  865 	ld	d,#0x00
   0352 7D            [ 4]  866 	ld	a,l
   0353 B3            [ 4]  867 	or	a, e
   0354 6F            [ 4]  868 	ld	l,a
   0355 7C            [ 4]  869 	ld	a,h
   0356 B2            [ 4]  870 	or	a, d
   0357 67            [ 4]  871 	ld	h,a
                            872 ;max7219.h:48: spiWrite16(max_data);
   0358 E5            [11]  873 	push	hl
   0359 CDrB0r02      [17]  874 	call	_spiWrite16
   035C F1            [10]  875 	pop	af
   035D DD E1         [14]  876 	pop	ix
   035F C9            [10]  877 	ret
                            878 ;max7219.h:52: void max7219Init() {
                            879 ;	---------------------------------
                            880 ; Function max7219Init
                            881 ; ---------------------------------
   0360                     882 _max7219Init::
                            883 ;max7219.h:53: spiInit();
   0360 CDr66r02      [17]  884 	call	_spiInit
                            885 ;max7219.h:56: delay_ms(10);
   0363 21 0A 00      [10]  886 	ld	hl,#0x000A
   0366 E5            [11]  887 	push	hl
   0367 CDr0Er02      [17]  888 	call	_delay_ms
                            889 ;max7219.h:57: max7219WriteRegister(SHUTDOWN_REG, 0x01);
   036A 21 0C 01      [10]  890 	ld	hl, #0x010C
   036D E3            [19]  891 	ex	(sp),hl
   036E CDr3Dr03      [17]  892 	call	_max7219WriteRegister
                            893 ;max7219.h:58: delay_ms(10);
   0371 21 0A 00      [10]  894 	ld	hl, #0x000A
   0374 E3            [19]  895 	ex	(sp),hl
   0375 CDr0Er02      [17]  896 	call	_delay_ms
                            897 ;max7219.h:59: max7219WriteRegister(MODE_REG, 0x00);
   0378 21 09 00      [10]  898 	ld	hl, #0x0009
   037B E3            [19]  899 	ex	(sp),hl
   037C CDr3Dr03      [17]  900 	call	_max7219WriteRegister
                            901 ;max7219.h:60: delay_ms(10);
   037F 21 0A 00      [10]  902 	ld	hl, #0x000A
   0382 E3            [19]  903 	ex	(sp),hl
   0383 CDr0Er02      [17]  904 	call	_delay_ms
                            905 ;max7219.h:61: max7219WriteRegister(SCANL_REG, 0x07);
   0386 21 0B 07      [10]  906 	ld	hl, #0x070B
   0389 E3            [19]  907 	ex	(sp),hl
   038A CDr3Dr03      [17]  908 	call	_max7219WriteRegister
                            909 ;max7219.h:62: delay_ms(10);
   038D 21 0A 00      [10]  910 	ld	hl, #0x000A
   0390 E3            [19]  911 	ex	(sp),hl
   0391 CDr0Er02      [17]  912 	call	_delay_ms
                            913 ;max7219.h:63: max7219WriteRegister(BRIGHT_REG, 0x01);
   0394 21 0A 01      [10]  914 	ld	hl, #0x010A
   0397 E3            [19]  915 	ex	(sp),hl
   0398 CDr3Dr03      [17]  916 	call	_max7219WriteRegister
                            917 ;max7219.h:64: delay_ms(10);
   039B 21 0A 00      [10]  918 	ld	hl, #0x000A
   039E E3            [19]  919 	ex	(sp),hl
   039F CDr0Er02      [17]  920 	call	_delay_ms
   03A2 F1            [10]  921 	pop	af
                            922 ;max7219.h:65: max7219Clear();
   03A3 CDrAFr03      [17]  923 	call	_max7219Clear
                            924 ;max7219.h:66: delay_ms(10);
   03A6 21 0A 00      [10]  925 	ld	hl,#0x000A
   03A9 E5            [11]  926 	push	hl
   03AA CDr0Er02      [17]  927 	call	_delay_ms
   03AD F1            [10]  928 	pop	af
   03AE C9            [10]  929 	ret
                            930 ;max7219.h:69: void max7219Clear() {
                            931 ;	---------------------------------
                            932 ; Function max7219Clear
                            933 ; ---------------------------------
   03AF                     934 _max7219Clear::
                            935 ;max7219.h:71: max7219WriteRegister(ROW1_REG, 0x00);
   03AF 21 01 00      [10]  936 	ld	hl,#0x0001
   03B2 E5            [11]  937 	push	hl
   03B3 CDr3Dr03      [17]  938 	call	_max7219WriteRegister
                            939 ;max7219.h:72: max7219WriteRegister(ROW2_REG, 0x00);
   03B6 21 02 00      [10]  940 	ld	hl, #0x0002
   03B9 E3            [19]  941 	ex	(sp),hl
   03BA CDr3Dr03      [17]  942 	call	_max7219WriteRegister
                            943 ;max7219.h:73: max7219WriteRegister(ROW3_REG, 0x00);
   03BD 21 03 00      [10]  944 	ld	hl, #0x0003
   03C0 E3            [19]  945 	ex	(sp),hl
   03C1 CDr3Dr03      [17]  946 	call	_max7219WriteRegister
                            947 ;max7219.h:74: max7219WriteRegister(ROW4_REG, 0x00);
   03C4 21 04 00      [10]  948 	ld	hl, #0x0004
   03C7 E3            [19]  949 	ex	(sp),hl
   03C8 CDr3Dr03      [17]  950 	call	_max7219WriteRegister
                            951 ;max7219.h:75: max7219WriteRegister(ROW5_REG, 0x00);
   03CB 21 05 00      [10]  952 	ld	hl, #0x0005
   03CE E3            [19]  953 	ex	(sp),hl
   03CF CDr3Dr03      [17]  954 	call	_max7219WriteRegister
                            955 ;max7219.h:76: max7219WriteRegister(ROW6_REG, 0x00);
   03D2 21 06 00      [10]  956 	ld	hl, #0x0006
   03D5 E3            [19]  957 	ex	(sp),hl
   03D6 CDr3Dr03      [17]  958 	call	_max7219WriteRegister
                            959 ;max7219.h:77: max7219WriteRegister(ROW7_REG, 0x00);
   03D9 21 07 00      [10]  960 	ld	hl, #0x0007
   03DC E3            [19]  961 	ex	(sp),hl
   03DD CDr3Dr03      [17]  962 	call	_max7219WriteRegister
                            963 ;max7219.h:78: max7219WriteRegister(ROW8_REG, 0x00);
   03E0 21 08 00      [10]  964 	ld	hl, #0x0008
   03E3 E3            [19]  965 	ex	(sp),hl
   03E4 CDr3Dr03      [17]  966 	call	_max7219WriteRegister
   03E7 F1            [10]  967 	pop	af
   03E8 C9            [10]  968 	ret
                            969 ;max7219.h:80: void max7219DrawPixel(unsigned char x, unsigned char y, unsigned char color) {
                            970 ;	---------------------------------
                            971 ; Function max7219DrawPixel
                            972 ; ---------------------------------
   03E9                     973 _max7219DrawPixel::
   03E9 DD E5         [15]  974 	push	ix
   03EB DD 21 00 00   [14]  975 	ld	ix,#0
   03EF DD 39         [15]  976 	add	ix,sp
                            977 ;max7219.h:84: if(x<1 || x > 8 || y < 1 || y > 8)
   03F1 DD 7E 04      [19]  978 	ld	a,4 (ix)
   03F4 D6 01         [ 7]  979 	sub	a, #0x01
   03F6 38 4D         [12]  980 	jr	C,00109$
   03F8 3E 08         [ 7]  981 	ld	a,#0x08
   03FA DD 96 04      [19]  982 	sub	a, 4 (ix)
   03FD 38 46         [12]  983 	jr	C,00109$
   03FF DD 7E 05      [19]  984 	ld	a,5 (ix)
   0402 D6 01         [ 7]  985 	sub	a, #0x01
   0404 38 3F         [12]  986 	jr	C,00109$
   0406 3E 08         [ 7]  987 	ld	a,#0x08
   0408 DD 96 05      [19]  988 	sub	a, 5 (ix)
                            989 ;max7219.h:85: return ;
   040B 38 38         [12]  990 	jr	C,00109$
                            991 ;max7219.h:87: ren = _displayBuffer[y];
   040D DD 7E 05      [19]  992 	ld	a,5 (ix)
   0410 C6r00         [ 7]  993 	add	a, #<(__displayBuffer)
   0412 4F            [ 4]  994 	ld	c,a
   0413 3E 00         [ 7]  995 	ld	a,#0x00
   0415 CEs00         [ 7]  996 	adc	a, #>(__displayBuffer)
   0417 47            [ 4]  997 	ld	b,a
   0418 0A            [ 7]  998 	ld	a,(bc)
   0419 57            [ 4]  999 	ld	d,a
                           1000 ;max7219.h:88: col = ( 1 << (x-1) );
   041A DD 66 04      [19] 1001 	ld	h,4 (ix)
   041D 25            [ 4] 1002 	dec	h
   041E F5            [11] 1003 	push	af
   041F 1E 01         [ 7] 1004 	ld	e,#0x01
   0421 F1            [10] 1005 	pop	af
   0422 24            [ 4] 1006 	inc	h
   0423 18 02         [12] 1007 	jr	00128$
   0425                    1008 00127$:
   0425 CB 23         [ 8] 1009 	sla	e
   0427                    1010 00128$:
   0427 25            [ 4] 1011 	dec	h
   0428 20 FB         [12] 1012 	jr	NZ,00127$
                           1013 ;max7219.h:90: if(color)
   042A DD 7E 06      [19] 1014 	ld	a,6 (ix)
   042D B7            [ 4] 1015 	or	a, a
   042E 28 04         [12] 1016 	jr	Z,00107$
                           1017 ;max7219.h:91: ren |= col;
   0430 7A            [ 4] 1018 	ld	a,d
   0431 B3            [ 4] 1019 	or	a, e
   0432 18 05         [12] 1020 	jr	00108$
   0434                    1021 00107$:
                           1022 ;max7219.h:93: ren &= ~col;
   0434 7B            [ 4] 1023 	ld	a,e
   0435 2F            [ 4] 1024 	cpl
   0436 5F            [ 4] 1025 	ld	e,a
   0437 7A            [ 4] 1026 	ld	a,d
   0438 A3            [ 4] 1027 	and	a, e
   0439                    1028 00108$:
                           1029 ;max7219.h:95: _displayBuffer[y] = ren;
   0439 02            [ 7] 1030 	ld	(bc),a
                           1031 ;max7219.h:96: max7219WriteRegister(y, _displayBuffer[y]);
   043A F5            [11] 1032 	push	af
   043B 33            [ 6] 1033 	inc	sp
   043C DD 7E 05      [19] 1034 	ld	a,5 (ix)
   043F F5            [11] 1035 	push	af
   0440 33            [ 6] 1036 	inc	sp
   0441 CDr3Dr03      [17] 1037 	call	_max7219WriteRegister
   0444 F1            [10] 1038 	pop	af
   0445                    1039 00109$:
   0445 DD E1         [14] 1040 	pop	ix
   0447 C9            [10] 1041 	ret
                           1042 ;max7219.h:99: void max7219Test() {
                           1043 ;	---------------------------------
                           1044 ; Function max7219Test
                           1045 ; ---------------------------------
   0448                    1046 _max7219Test::
                           1047 ;max7219.h:104: for( i=1;i<9;i++ )
   0448 16 01         [ 7] 1048 	ld	d,#0x01
                           1049 ;max7219.h:106: for( j=1;j<9;j++ )
   044A                    1050 00109$:
   044A 1E 01         [ 7] 1051 	ld	e,#0x01
   044C                    1052 00103$:
                           1053 ;max7219.h:108: max7219DrawPixel(i, j, (unsigned char)1);
   044C D5            [11] 1054 	push	de
   044D 3E 01         [ 7] 1055 	ld	a,#0x01
   044F F5            [11] 1056 	push	af
   0450 33            [ 6] 1057 	inc	sp
   0451 7B            [ 4] 1058 	ld	a,e
   0452 F5            [11] 1059 	push	af
   0453 33            [ 6] 1060 	inc	sp
   0454 D5            [11] 1061 	push	de
   0455 33            [ 6] 1062 	inc	sp
   0456 CDrE9r03      [17] 1063 	call	_max7219DrawPixel
   0459 33            [ 6] 1064 	inc	sp
   045A 21 2C 01      [10] 1065 	ld	hl,#0x012C
   045D E3            [19] 1066 	ex	(sp),hl
   045E CDr0Er02      [17] 1067 	call	_delay_ms
   0461 F1            [10] 1068 	pop	af
   0462 D1            [10] 1069 	pop	de
                           1070 ;max7219.h:110: max7219DrawPixel(i, j,(unsigned char)0);
   0463 D5            [11] 1071 	push	de
   0464 AF            [ 4] 1072 	xor	a, a
   0465 F5            [11] 1073 	push	af
   0466 33            [ 6] 1074 	inc	sp
   0467 7B            [ 4] 1075 	ld	a,e
   0468 F5            [11] 1076 	push	af
   0469 33            [ 6] 1077 	inc	sp
   046A D5            [11] 1078 	push	de
   046B 33            [ 6] 1079 	inc	sp
   046C CDrE9r03      [17] 1080 	call	_max7219DrawPixel
   046F F1            [10] 1081 	pop	af
   0470 33            [ 6] 1082 	inc	sp
   0471 D1            [10] 1083 	pop	de
                           1084 ;max7219.h:106: for( j=1;j<9;j++ )
   0472 1C            [ 4] 1085 	inc	e
   0473 7B            [ 4] 1086 	ld	a,e
   0474 D6 09         [ 7] 1087 	sub	a, #0x09
   0476 38 D4         [12] 1088 	jr	C,00103$
                           1089 ;max7219.h:104: for( i=1;i<9;i++ )
   0478 14            [ 4] 1090 	inc	d
   0479 7A            [ 4] 1091 	ld	a,d
   047A D6 09         [ 7] 1092 	sub	a, #0x09
   047C 38 CC         [12] 1093 	jr	C,00109$
   047E C9            [10] 1094 	ret
                           1095 ;max7219.h:116: void max7219SetBright(uint8_t bright) {
                           1096 ;	---------------------------------
                           1097 ; Function max7219SetBright
                           1098 ; ---------------------------------
   047F                    1099 _max7219SetBright::
                           1100 ;max7219.h:117: bright = bright & 0x0F;
   047F FD 21 02 00   [14] 1101 	ld	iy,#2
   0483 FD 39         [15] 1102 	add	iy,sp
   0485 FD 7E 00      [19] 1103 	ld	a,0 (iy)
   0488 E6 0F         [ 7] 1104 	and	a, #0x0F
   048A FD 77 00      [19] 1105 	ld	0 (iy),a
                           1106 ;max7219.h:118: max7219WriteRegister(BRIGHT_REG, bright);
   048D FD 56 00      [19] 1107 	ld	d, 0 (iy)
   0490 1E 0A         [ 7] 1108 	ld	e,#0x0A
   0492 D5            [11] 1109 	push	de
   0493 CDr3Dr03      [17] 1110 	call	_max7219WriteRegister
   0496 F1            [10] 1111 	pop	af
   0497 C9            [10] 1112 	ret
                           1113 ;max7219.h:121: void max7219WriteDisplayBuffer(unsigned char *buffer, unsigned char len) {
                           1114 ;	---------------------------------
                           1115 ; Function max7219WriteDisplayBuffer
                           1116 ; ---------------------------------
   0498                    1117 _max7219WriteDisplayBuffer::
                           1118 ;max7219.h:124: if(len >8)
   0498 3E 08         [ 7] 1119 	ld	a,#0x08
   049A FD 21 04 00   [14] 1120 	ld	iy,#4
   049E FD 39         [15] 1121 	add	iy,sp
   04A0 FD 96 00      [19] 1122 	sub	a, 0 (iy)
   04A3 30 04         [12] 1123 	jr	NC,00102$
                           1124 ;max7219.h:125: len = 8;
   04A5 FD 36 00 08   [19] 1125 	ld	0 (iy),#0x08
   04A9                    1126 00102$:
                           1127 ;max7219.h:127: for (i = 0; i < len; ++i)
   04A9 1E 00         [ 7] 1128 	ld	e,#0x00
   04AB                    1129 00105$:
   04AB 21 04 00      [10] 1130 	ld	hl,#4
   04AE 39            [11] 1131 	add	hl,sp
   04AF 7B            [ 4] 1132 	ld	a,e
   04B0 96            [ 7] 1133 	sub	a, (hl)
   04B1 D0            [11] 1134 	ret	NC
                           1135 ;max7219.h:128: max7219WriteRegister(ROW1_REG + i, buffer[i]);
   04B2 21 02 00      [10] 1136 	ld	hl, #2
   04B5 39            [11] 1137 	add	hl, sp
   04B6 7E            [ 7] 1138 	ld	a, (hl)
   04B7 23            [ 6] 1139 	inc	hl
   04B8 66            [ 7] 1140 	ld	h, (hl)
   04B9 6F            [ 4] 1141 	ld	l, a
   04BA 16 00         [ 7] 1142 	ld	d,#0x00
   04BC 19            [11] 1143 	add	hl, de
   04BD 66            [ 7] 1144 	ld	h,(hl)
   04BE 53            [ 4] 1145 	ld	d,e
   04BF 14            [ 4] 1146 	inc	d
   04C0 D5            [11] 1147 	push	de
   04C1 E5            [11] 1148 	push	hl
   04C2 33            [ 6] 1149 	inc	sp
   04C3 D5            [11] 1150 	push	de
   04C4 33            [ 6] 1151 	inc	sp
   04C5 CDr3Dr03      [17] 1152 	call	_max7219WriteRegister
   04C8 F1            [10] 1153 	pop	af
   04C9 D1            [10] 1154 	pop	de
                           1155 ;max7219.h:127: for (i = 0; i < len; ++i)
   04CA 5A            [ 4] 1156 	ld	e,d
   04CB 18 DE         [12] 1157 	jr	00105$
                           1158 ;max7219.h:132: void max7219ReadDisplayBuffer(unsigned char *buffer, unsigned char len) {
                           1159 ;	---------------------------------
                           1160 ; Function max7219ReadDisplayBuffer
                           1161 ; ---------------------------------
   04CD                    1162 _max7219ReadDisplayBuffer::
   04CD DD E5         [15] 1163 	push	ix
   04CF DD 21 00 00   [14] 1164 	ld	ix,#0
   04D3 DD 39         [15] 1165 	add	ix,sp
                           1166 ;max7219.h:135: if(len >8)
   04D5 3E 08         [ 7] 1167 	ld	a,#0x08
   04D7 DD 96 06      [19] 1168 	sub	a, 6 (ix)
   04DA 30 04         [12] 1169 	jr	NC,00111$
                           1170 ;max7219.h:136: len = 8;
   04DC DD 36 06 08   [19] 1171 	ld	6 (ix),#0x08
                           1172 ;max7219.h:138: for (i = 0; i < len; ++i)
   04E0                    1173 00111$:
   04E0 1E 00         [ 7] 1174 	ld	e,#0x00
   04E2                    1175 00105$:
   04E2 7B            [ 4] 1176 	ld	a,e
   04E3 DD 96 06      [19] 1177 	sub	a, 6 (ix)
   04E6 30 16         [12] 1178 	jr	NC,00107$
                           1179 ;max7219.h:139: buffer[i] = _displayBuffer[i];
   04E8 DD 7E 04      [19] 1180 	ld	a,4 (ix)
   04EB 83            [ 4] 1181 	add	a, e
   04EC 4F            [ 4] 1182 	ld	c,a
   04ED DD 7E 05      [19] 1183 	ld	a,5 (ix)
   04F0 CE 00         [ 7] 1184 	adc	a, #0x00
   04F2 47            [ 4] 1185 	ld	b,a
   04F3 21r00r00      [10] 1186 	ld	hl,#__displayBuffer
   04F6 16 00         [ 7] 1187 	ld	d,#0x00
   04F8 19            [11] 1188 	add	hl, de
   04F9 7E            [ 7] 1189 	ld	a,(hl)
   04FA 02            [ 7] 1190 	ld	(bc),a
                           1191 ;max7219.h:138: for (i = 0; i < len; ++i)
   04FB 1C            [ 4] 1192 	inc	e
   04FC 18 E4         [12] 1193 	jr	00105$
   04FE                    1194 00107$:
   04FE DD E1         [14] 1195 	pop	ix
   0500 C9            [10] 1196 	ret
                           1197 ;max7219.h:144: void max7219DrawRow(unsigned char row, unsigned char data) {
                           1198 ;	---------------------------------
                           1199 ; Function max7219DrawRow
                           1200 ; ---------------------------------
   0501                    1201 _max7219DrawRow::
   0501 DD E5         [15] 1202 	push	ix
   0503 DD 21 00 00   [14] 1203 	ld	ix,#0
   0507 DD 39         [15] 1204 	add	ix,sp
                           1205 ;max7219.h:145: if(row < 1 || row > 8)
   0509 DD 7E 04      [19] 1206 	ld	a,4 (ix)
   050C D6 01         [ 7] 1207 	sub	a, #0x01
   050E 38 1F         [12] 1208 	jr	C,00104$
   0510 3E 08         [ 7] 1209 	ld	a,#0x08
   0512 DD 96 04      [19] 1210 	sub	a, 4 (ix)
                           1211 ;max7219.h:146: return ;
   0515 38 18         [12] 1212 	jr	C,00104$
                           1213 ;max7219.h:147: _displayBuffer[row] = data;
   0517 11r00r00      [10] 1214 	ld	de,#__displayBuffer+0
   051A DD 6E 04      [19] 1215 	ld	l,4 (ix)
   051D 26 00         [ 7] 1216 	ld	h,#0x00
   051F 19            [11] 1217 	add	hl,de
   0520 DD 7E 05      [19] 1218 	ld	a,5 (ix)
   0523 77            [ 7] 1219 	ld	(hl),a
                           1220 ;max7219.h:148: max7219WriteRegister(row, data);
   0524 DD 66 05      [19] 1221 	ld	h,5 (ix)
   0527 DD 6E 04      [19] 1222 	ld	l,4 (ix)
   052A E5            [11] 1223 	push	hl
   052B CDr3Dr03      [17] 1224 	call	_max7219WriteRegister
   052E F1            [10] 1225 	pop	af
   052F                    1226 00104$:
   052F DD E1         [14] 1227 	pop	ix
   0531 C9            [10] 1228 	ret
                           1229 ;max7219.h:151: void max7219DrawColumn(unsigned char column, unsigned char data) {
                           1230 ;	---------------------------------
                           1231 ; Function max7219DrawColumn
                           1232 ; ---------------------------------
   0532                    1233 _max7219DrawColumn::
                           1234 ;max7219.h:154: for (i = 0; i < 8; ++i)
   0532 11 00 00      [10] 1235 	ld	de,#0x0000
   0535                    1236 00102$:
                           1237 ;max7219.h:156: color = (data>>i) & 0x01 ;
   0535 43            [ 4] 1238 	ld	b,e
   0536 F5            [11] 1239 	push	af
   0537 FD 21 05 00   [14] 1240 	ld	iy,#5
   053B FD 39         [15] 1241 	add	iy,sp
   053D FD 6E 00      [19] 1242 	ld	l,0 (iy)
   0540 F1            [10] 1243 	pop	af
   0541 04            [ 4] 1244 	inc	b
   0542 18 02         [12] 1245 	jr	00112$
   0544                    1246 00111$:
   0544 CB 3D         [ 8] 1247 	srl	l
   0546                    1248 00112$:
   0546 10 FC         [13] 1249 	djnz	00111$
   0548 7D            [ 4] 1250 	ld	a,l
   0549 E6 01         [ 7] 1251 	and	a, #0x01
   054B 67            [ 4] 1252 	ld	h,a
   054C 2E 00         [ 7] 1253 	ld	l,#0x00
                           1254 ;max7219.h:157: max7219DrawPixel(column, i, color);
   054E 43            [ 4] 1255 	ld	b,e
   054F D5            [11] 1256 	push	de
   0550 E5            [11] 1257 	push	hl
   0551 33            [ 6] 1258 	inc	sp
   0552 C5            [11] 1259 	push	bc
   0553 33            [ 6] 1260 	inc	sp
   0554 21 06 00      [10] 1261 	ld	hl, #6+0
   0557 39            [11] 1262 	add	hl, sp
   0558 7E            [ 7] 1263 	ld	a, (hl)
   0559 F5            [11] 1264 	push	af
   055A 33            [ 6] 1265 	inc	sp
   055B CDrE9r03      [17] 1266 	call	_max7219DrawPixel
   055E F1            [10] 1267 	pop	af
   055F 33            [ 6] 1268 	inc	sp
   0560 D1            [10] 1269 	pop	de
                           1270 ;max7219.h:154: for (i = 0; i < 8; ++i)
   0561 13            [ 6] 1271 	inc	de
   0562 7B            [ 4] 1272 	ld	a,e
   0563 D6 08         [ 7] 1273 	sub	a, #0x08
   0565 7A            [ 4] 1274 	ld	a,d
   0566 DE 00         [ 7] 1275 	sbc	a, #0x00
   0568 38 CB         [12] 1276 	jr	C,00102$
   056A C9            [10] 1277 	ret
                           1278 ;max7219.h:161: uint8_t max7219ReadPixel(unsigned char x, unsigned char y) {
                           1279 ;	---------------------------------
                           1280 ; Function max7219ReadPixel
                           1281 ; ---------------------------------
   056B                    1282 _max7219ReadPixel::
   056B DD E5         [15] 1283 	push	ix
   056D DD 21 00 00   [14] 1284 	ld	ix,#0
   0571 DD 39         [15] 1285 	add	ix,sp
                           1286 ;max7219.h:164: if(x<1 || x > 8 || y < 1 || y > 8)
   0573 DD 7E 04      [19] 1287 	ld	a,4 (ix)
   0576 D6 01         [ 7] 1288 	sub	a, #0x01
   0578 38 31         [12] 1289 	jr	C,00106$
   057A 3E 08         [ 7] 1290 	ld	a,#0x08
   057C DD 96 04      [19] 1291 	sub	a, 4 (ix)
   057F 38 2A         [12] 1292 	jr	C,00106$
   0581 DD 7E 05      [19] 1293 	ld	a,5 (ix)
   0584 D6 01         [ 7] 1294 	sub	a, #0x01
   0586 38 23         [12] 1295 	jr	C,00106$
   0588 3E 08         [ 7] 1296 	ld	a,#0x08
   058A DD 96 05      [19] 1297 	sub	a, 5 (ix)
                           1298 ;max7219.h:165: return ;
   058D 38 1C         [12] 1299 	jr	C,00106$
                           1300 ;max7219.h:167: return _displayBuffer[y] & ( 1 << (x-1) );
   058F 11r00r00      [10] 1301 	ld	de,#__displayBuffer+0
   0592 DD 6E 05      [19] 1302 	ld	l,5 (ix)
   0595 26 00         [ 7] 1303 	ld	h,#0x00
   0597 19            [11] 1304 	add	hl,de
   0598 66            [ 7] 1305 	ld	h,(hl)
   0599 DD 46 04      [19] 1306 	ld	b,4 (ix)
   059C 05            [ 4] 1307 	dec	b
   059D F5            [11] 1308 	push	af
   059E 2E 01         [ 7] 1309 	ld	l,#0x01
   05A0 F1            [10] 1310 	pop	af
   05A1 04            [ 4] 1311 	inc	b
   05A2 18 02         [12] 1312 	jr	00121$
   05A4                    1313 00120$:
   05A4 CB 25         [ 8] 1314 	sla	l
   05A6                    1315 00121$:
   05A6 10 FC         [13] 1316 	djnz	00120$
   05A8 7C            [ 4] 1317 	ld	a,h
   05A9 A5            [ 4] 1318 	and	a, l
   05AA 6F            [ 4] 1319 	ld	l,a
   05AB                    1320 00106$:
   05AB DD E1         [14] 1321 	pop	ix
   05AD C9            [10] 1322 	ret
                           1323 ;max7219.h:170: uint8_t max7219ReadRow(unsigned char row) {
                           1324 ;	---------------------------------
                           1325 ; Function max7219ReadRow
                           1326 ; ---------------------------------
   05AE                    1327 _max7219ReadRow::
                           1328 ;max7219.h:171: if(row < 1 || row > 8)
   05AE FD 21 02 00   [14] 1329 	ld	iy,#2
   05B2 FD 39         [15] 1330 	add	iy,sp
   05B4 FD 7E 00      [19] 1331 	ld	a,0 (iy)
   05B7 D6 01         [ 7] 1332 	sub	a, #0x01
   05B9 38 07         [12] 1333 	jr	C,00101$
   05BB 3E 08         [ 7] 1334 	ld	a,#0x08
   05BD FD 96 00      [19] 1335 	sub	a, 0 (iy)
   05C0 30 03         [12] 1336 	jr	NC,00102$
   05C2                    1337 00101$:
                           1338 ;max7219.h:172: return 0;
   05C2 2E 00         [ 7] 1339 	ld	l,#0x00
   05C4 C9            [10] 1340 	ret
   05C5                    1341 00102$:
                           1342 ;max7219.h:174: return _displayBuffer[row];
   05C5 3Er00         [ 7] 1343 	ld	a,#<(__displayBuffer)
   05C7 21 02 00      [10] 1344 	ld	hl,#2
   05CA 39            [11] 1345 	add	hl,sp
   05CB 86            [ 7] 1346 	add	a, (hl)
   05CC 6F            [ 4] 1347 	ld	l, a
   05CD 3Es00         [ 7] 1348 	ld	a, #>(__displayBuffer)
   05CF CE 00         [ 7] 1349 	adc	a, #0x00
   05D1 67            [ 4] 1350 	ld	h, a
   05D2 6E            [ 7] 1351 	ld	l,(hl)
   05D3 C9            [10] 1352 	ret
                           1353 ;max7219.h:177: uint8_t max7219ReadColumn(unsigned char column) {
                           1354 ;	---------------------------------
                           1355 ; Function max7219ReadColumn
                           1356 ; ---------------------------------
   05D4                    1357 _max7219ReadColumn::
                           1358 ;max7219.h:179: }
   05D4 C9            [10] 1359 	ret
                           1360 ;main.c:35: ISR_NMI(){
                           1361 ;	---------------------------------
                           1362 ; Function isr_vector66
                           1363 ; ---------------------------------
   05D5                    1364 _isr_vector66::
   05D5 F5            [11] 1365 	push	af
   05D6 C5            [11] 1366 	push	bc
   05D7 D5            [11] 1367 	push	de
   05D8 E5            [11] 1368 	push	hl
   05D9 FD E5         [15] 1369 	push	iy
                           1370 ;main.c:38: }
   05DB FD E1         [14] 1371 	pop	iy
   05DD E1            [10] 1372 	pop	hl
   05DE D1            [10] 1373 	pop	de
   05DF C1            [10] 1374 	pop	bc
   05E0 F1            [10] 1375 	pop	af
   05E1 ED 45         [14] 1376 	retn
                           1377 ;main.c:40: ISR_INT_38(){
                           1378 ;	---------------------------------
                           1379 ; Function isr_vector38
                           1380 ; ---------------------------------
   05E3                    1381 _isr_vector38::
   05E3 F5            [11] 1382 	push	af
   05E4 C5            [11] 1383 	push	bc
   05E5 D5            [11] 1384 	push	de
   05E6 E5            [11] 1385 	push	hl
   05E7 FD E5         [15] 1386 	push	iy
                           1387 ;main.c:41: }
   05E9 FD E1         [14] 1388 	pop	iy
   05EB E1            [10] 1389 	pop	hl
   05EC D1            [10] 1390 	pop	de
   05ED C1            [10] 1391 	pop	bc
   05EE F1            [10] 1392 	pop	af
   05EF ED 4D         [14] 1393 	reti
                           1394 ;main.c:51: void system_init(){
                           1395 ;	---------------------------------
                           1396 ; Function system_init
                           1397 ; ---------------------------------
   05F1                    1398 _system_init::
                           1399 ;main.c:53: max7219Init();
   05F1 CDr60r03      [17] 1400 	call	_max7219Init
                           1401 ;main.c:54: PPI_CTRL = 0x89;
   05F4 3E 89         [ 7] 1402 	ld	a,#0x89
   05F6 D3 03         [11] 1403 	out	(_PPI_CTRL),a
                           1404 ;main.c:55: cont =1;
   05F8 21 01 00      [10] 1405 	ld	hl,#0x0001
   05FB 22r01r00      [16] 1406 	ld	(_cont),hl
   05FE C9            [10] 1407 	ret
                           1408 ;main.c:63: void dibujaFigura(pixel f[3][3])
                           1409 ;	---------------------------------
                           1410 ; Function dibujaFigura
                           1411 ; ---------------------------------
   05FF                    1412 _dibujaFigura::
   05FF DD E5         [15] 1413 	push	ix
   0601 DD 21 00 00   [14] 1414 	ld	ix,#0
   0605 DD 39         [15] 1415 	add	ix,sp
   0607 21 F7 FF      [10] 1416 	ld	hl,#-9
   060A 39            [11] 1417 	add	hl,sp
   060B F9            [ 6] 1418 	ld	sp,hl
                           1419 ;main.c:68: for( i=0;i<3;i++ )
   060C DD 36 F9 00   [19] 1420 	ld	-7 (ix),#0x00
   0610 DD 36 FA 00   [19] 1421 	ld	-6 (ix),#0x00
   0614 11 00 00      [10] 1422 	ld	de,#0x0000
                           1423 ;main.c:70: for( j=0;j<3;j++ )
   0617                    1424 00112$:
   0617 DD 7E 04      [19] 1425 	ld	a,4 (ix)
   061A 83            [ 4] 1426 	add	a, e
   061B DD 77 FB      [19] 1427 	ld	-5 (ix),a
   061E DD 7E 05      [19] 1428 	ld	a,5 (ix)
   0621 8A            [ 4] 1429 	adc	a, d
   0622 DD 77 FC      [19] 1430 	ld	-4 (ix),a
   0625 21 00 00      [10] 1431 	ld	hl,#0x0000
   0628 E3            [19] 1432 	ex	(sp), hl
   0629 01 00 00      [10] 1433 	ld	bc,#0x0000
   062C                    1434 00105$:
                           1435 ;main.c:73: if(f[i][j].val==1)
   062C E5            [11] 1436 	push	hl
   062D DD 6E FB      [19] 1437 	ld	l,-5 (ix)
   0630 DD 66 FC      [19] 1438 	ld	h,-4 (ix)
   0633 E5            [11] 1439 	push	hl
   0634 FD E1         [14] 1440 	pop	iy
   0636 E1            [10] 1441 	pop	hl
   0637 FD 09         [15] 1442 	add	iy, bc
   0639 FD E5         [15] 1443 	push	iy
   063B E1            [10] 1444 	pop	hl
   063C 23            [ 6] 1445 	inc	hl
   063D 23            [ 6] 1446 	inc	hl
   063E 7E            [ 7] 1447 	ld	a,(hl)
   063F DD 77 FE      [19] 1448 	ld	-2 (ix), a
   0642 3D            [ 4] 1449 	dec	a
   0643 20 23         [12] 1450 	jr	NZ,00106$
                           1451 ;main.c:74: max7219DrawPixel(f[i][j].x,f[i][j].y,f[i][j].val);
   0645 FD E5         [15] 1452 	push	iy
   0647 E1            [10] 1453 	pop	hl
   0648 23            [ 6] 1454 	inc	hl
   0649 7E            [ 7] 1455 	ld	a,(hl)
   064A DD 77 FF      [19] 1456 	ld	-1 (ix),a
   064D FD 7E 00      [19] 1457 	ld	a, 0 (iy)
   0650 DD 77 FD      [19] 1458 	ld	-3 (ix),a
   0653 C5            [11] 1459 	push	bc
   0654 D5            [11] 1460 	push	de
   0655 DD 66 FE      [19] 1461 	ld	h,-2 (ix)
   0658 DD 6E FF      [19] 1462 	ld	l,-1 (ix)
   065B E5            [11] 1463 	push	hl
   065C DD 7E FD      [19] 1464 	ld	a,-3 (ix)
   065F F5            [11] 1465 	push	af
   0660 33            [ 6] 1466 	inc	sp
   0661 CDrE9r03      [17] 1467 	call	_max7219DrawPixel
   0664 F1            [10] 1468 	pop	af
   0665 33            [ 6] 1469 	inc	sp
   0666 D1            [10] 1470 	pop	de
   0667 C1            [10] 1471 	pop	bc
   0668                    1472 00106$:
                           1473 ;main.c:70: for( j=0;j<3;j++ )
   0668 03            [ 6] 1474 	inc	bc
   0669 03            [ 6] 1475 	inc	bc
   066A 03            [ 6] 1476 	inc	bc
   066B DD 34 F7      [23] 1477 	inc	-9 (ix)
   066E 20 03         [12] 1478 	jr	NZ,00131$
   0670 DD 34 F8      [23] 1479 	inc	-8 (ix)
   0673                    1480 00131$:
   0673 DD 7E F7      [19] 1481 	ld	a,-9 (ix)
   0676 D6 03         [ 7] 1482 	sub	a, #0x03
   0678 DD 7E F8      [19] 1483 	ld	a,-8 (ix)
   067B 17            [ 4] 1484 	rla
   067C 3F            [ 4] 1485 	ccf
   067D 1F            [ 4] 1486 	rra
   067E DE 80         [ 7] 1487 	sbc	a, #0x80
   0680 38 AA         [12] 1488 	jr	C,00105$
                           1489 ;main.c:68: for( i=0;i<3;i++ )
   0682 21 09 00      [10] 1490 	ld	hl,#0x0009
   0685 19            [11] 1491 	add	hl,de
   0686 EB            [ 4] 1492 	ex	de,hl
   0687 DD 34 F9      [23] 1493 	inc	-7 (ix)
   068A 20 03         [12] 1494 	jr	NZ,00132$
   068C DD 34 FA      [23] 1495 	inc	-6 (ix)
   068F                    1496 00132$:
   068F DD 7E F9      [19] 1497 	ld	a,-7 (ix)
   0692 D6 03         [ 7] 1498 	sub	a, #0x03
   0694 DD 7E FA      [19] 1499 	ld	a,-6 (ix)
   0697 17            [ 4] 1500 	rla
   0698 3F            [ 4] 1501 	ccf
   0699 1F            [ 4] 1502 	rra
   069A DE 80         [ 7] 1503 	sbc	a, #0x80
   069C DAr17r06      [10] 1504 	jp	C,00112$
   069F DD F9         [10] 1505 	ld	sp, ix
   06A1 DD E1         [14] 1506 	pop	ix
   06A3 C9            [10] 1507 	ret
                           1508 ;main.c:81: void borraFigura(pixel f[3][3])
                           1509 ;	---------------------------------
                           1510 ; Function borraFigura
                           1511 ; ---------------------------------
   06A4                    1512 _borraFigura::
   06A4 DD E5         [15] 1513 	push	ix
   06A6 DD 21 00 00   [14] 1514 	ld	ix,#0
   06AA DD 39         [15] 1515 	add	ix,sp
   06AC 21 F8 FF      [10] 1516 	ld	hl,#-8
   06AF 39            [11] 1517 	add	hl,sp
   06B0 F9            [ 6] 1518 	ld	sp,hl
                           1519 ;main.c:86: for( i=0;i<3;i++ )
   06B1 DD 36 FA 00   [19] 1520 	ld	-6 (ix),#0x00
   06B5 DD 36 FB 00   [19] 1521 	ld	-5 (ix),#0x00
   06B9 11 00 00      [10] 1522 	ld	de,#0x0000
                           1523 ;main.c:88: for( j=0;j<3;j++ )
   06BC                    1524 00112$:
   06BC DD 7E 04      [19] 1525 	ld	a,4 (ix)
   06BF 83            [ 4] 1526 	add	a, e
   06C0 DD 77 FE      [19] 1527 	ld	-2 (ix),a
   06C3 DD 7E 05      [19] 1528 	ld	a,5 (ix)
   06C6 8A            [ 4] 1529 	adc	a, d
   06C7 DD 77 FF      [19] 1530 	ld	-1 (ix),a
   06CA 21 00 00      [10] 1531 	ld	hl,#0x0000
   06CD E3            [19] 1532 	ex	(sp), hl
   06CE 01 00 00      [10] 1533 	ld	bc,#0x0000
   06D1                    1534 00105$:
                           1535 ;main.c:90: if(f[i][j].val==1)
   06D1 E5            [11] 1536 	push	hl
   06D2 DD 6E FE      [19] 1537 	ld	l,-2 (ix)
   06D5 DD 66 FF      [19] 1538 	ld	h,-1 (ix)
   06D8 E5            [11] 1539 	push	hl
   06D9 FD E1         [14] 1540 	pop	iy
   06DB E1            [10] 1541 	pop	hl
   06DC FD 09         [15] 1542 	add	iy, bc
   06DE FD E5         [15] 1543 	push	iy
   06E0 E1            [10] 1544 	pop	hl
   06E1 23            [ 6] 1545 	inc	hl
   06E2 23            [ 6] 1546 	inc	hl
   06E3 7E            [ 7] 1547 	ld	a,(hl)
   06E4 3D            [ 4] 1548 	dec	a
   06E5 20 21         [12] 1549 	jr	NZ,00106$
                           1550 ;main.c:91: max7219DrawPixel(f[i][j].x,f[i][j].y,0);
   06E7 FD E5         [15] 1551 	push	iy
   06E9 E1            [10] 1552 	pop	hl
   06EA 23            [ 6] 1553 	inc	hl
   06EB 7E            [ 7] 1554 	ld	a,(hl)
   06EC DD 77 FD      [19] 1555 	ld	-3 (ix),a
   06EF FD 7E 00      [19] 1556 	ld	a, 0 (iy)
   06F2 DD 77 FC      [19] 1557 	ld	-4 (ix),a
   06F5 C5            [11] 1558 	push	bc
   06F6 D5            [11] 1559 	push	de
   06F7 AF            [ 4] 1560 	xor	a, a
   06F8 F5            [11] 1561 	push	af
   06F9 33            [ 6] 1562 	inc	sp
   06FA DD 66 FD      [19] 1563 	ld	h,-3 (ix)
   06FD DD 6E FC      [19] 1564 	ld	l,-4 (ix)
   0700 E5            [11] 1565 	push	hl
   0701 CDrE9r03      [17] 1566 	call	_max7219DrawPixel
   0704 F1            [10] 1567 	pop	af
   0705 33            [ 6] 1568 	inc	sp
   0706 D1            [10] 1569 	pop	de
   0707 C1            [10] 1570 	pop	bc
   0708                    1571 00106$:
                           1572 ;main.c:88: for( j=0;j<3;j++ )
   0708 03            [ 6] 1573 	inc	bc
   0709 03            [ 6] 1574 	inc	bc
   070A 03            [ 6] 1575 	inc	bc
   070B DD 34 F8      [23] 1576 	inc	-8 (ix)
   070E 20 03         [12] 1577 	jr	NZ,00131$
   0710 DD 34 F9      [23] 1578 	inc	-7 (ix)
   0713                    1579 00131$:
   0713 DD 7E F8      [19] 1580 	ld	a,-8 (ix)
   0716 D6 03         [ 7] 1581 	sub	a, #0x03
   0718 DD 7E F9      [19] 1582 	ld	a,-7 (ix)
   071B 17            [ 4] 1583 	rla
   071C 3F            [ 4] 1584 	ccf
   071D 1F            [ 4] 1585 	rra
   071E DE 80         [ 7] 1586 	sbc	a, #0x80
   0720 38 AF         [12] 1587 	jr	C,00105$
                           1588 ;main.c:86: for( i=0;i<3;i++ )
   0722 21 09 00      [10] 1589 	ld	hl,#0x0009
   0725 19            [11] 1590 	add	hl,de
   0726 EB            [ 4] 1591 	ex	de,hl
   0727 DD 34 FA      [23] 1592 	inc	-6 (ix)
   072A 20 03         [12] 1593 	jr	NZ,00132$
   072C DD 34 FB      [23] 1594 	inc	-5 (ix)
   072F                    1595 00132$:
   072F DD 7E FA      [19] 1596 	ld	a,-6 (ix)
   0732 D6 03         [ 7] 1597 	sub	a, #0x03
   0734 DD 7E FB      [19] 1598 	ld	a,-5 (ix)
   0737 17            [ 4] 1599 	rla
   0738 3F            [ 4] 1600 	ccf
   0739 1F            [ 4] 1601 	rra
   073A DE 80         [ 7] 1602 	sbc	a, #0x80
   073C DArBCr06      [10] 1603 	jp	C,00112$
   073F DD F9         [10] 1604 	ld	sp, ix
   0741 DD E1         [14] 1605 	pop	ix
   0743 C9            [10] 1606 	ret
                           1607 ;main.c:106: void llenaFigura(pixel f[3][3] , int tipo)
                           1608 ;	---------------------------------
                           1609 ; Function llenaFigura
                           1610 ; ---------------------------------
   0744                    1611 _llenaFigura::
   0744 DD E5         [15] 1612 	push	ix
   0746 DD 21 00 00   [14] 1613 	ld	ix,#0
   074A DD 39         [15] 1614 	add	ix,sp
   074C 21 F1 FF      [10] 1615 	ld	hl,#-15
   074F 39            [11] 1616 	add	hl,sp
   0750 F9            [ 6] 1617 	ld	sp,hl
                           1618 ;main.c:108: f[0][0].x=1;
   0751 DD 5E 04      [19] 1619 	ld	e,4 (ix)
   0754 DD 56 05      [19] 1620 	ld	d,5 (ix)
   0757 3E 01         [ 7] 1621 	ld	a,#0x01
   0759 12            [ 7] 1622 	ld	(de),a
                           1623 ;main.c:109: f[0][1].x=1;
   075A 6B            [ 4] 1624 	ld	l, e
   075B 62            [ 4] 1625 	ld	h, d
   075C 23            [ 6] 1626 	inc	hl
   075D 23            [ 6] 1627 	inc	hl
   075E 23            [ 6] 1628 	inc	hl
   075F 36 01         [10] 1629 	ld	(hl),#0x01
                           1630 ;main.c:110: f[0][2].x=1;
   0761 21 06 00      [10] 1631 	ld	hl,#0x0006
   0764 19            [11] 1632 	add	hl,de
   0765 36 01         [10] 1633 	ld	(hl),#0x01
                           1634 ;main.c:112: f[1][0].x=2;
   0767 21 09 00      [10] 1635 	ld	hl,#0x0009
   076A 19            [11] 1636 	add	hl,de
   076B 36 02         [10] 1637 	ld	(hl),#0x02
                           1638 ;main.c:113: f[1][1].x=2;
   076D 21 0C 00      [10] 1639 	ld	hl,#0x000C
   0770 19            [11] 1640 	add	hl,de
   0771 36 02         [10] 1641 	ld	(hl),#0x02
                           1642 ;main.c:114: f[1][2].x=2;
   0773 21 0F 00      [10] 1643 	ld	hl,#0x000F
   0776 19            [11] 1644 	add	hl,de
   0777 36 02         [10] 1645 	ld	(hl),#0x02
                           1646 ;main.c:116: f[2][0].x=3;
   0779 21 12 00      [10] 1647 	ld	hl,#0x0012
   077C 19            [11] 1648 	add	hl,de
   077D 36 03         [10] 1649 	ld	(hl),#0x03
                           1650 ;main.c:117: f[2][1].x=3;
   077F 21 15 00      [10] 1651 	ld	hl,#0x0015
   0782 19            [11] 1652 	add	hl,de
   0783 36 03         [10] 1653 	ld	(hl),#0x03
                           1654 ;main.c:118: f[2][2].x=3;
   0785 21 18 00      [10] 1655 	ld	hl,#0x0018
   0788 19            [11] 1656 	add	hl,de
   0789 36 03         [10] 1657 	ld	(hl),#0x03
                           1658 ;main.c:120: f[0][0].y=1;
   078B 6B            [ 4] 1659 	ld	l, e
   078C 62            [ 4] 1660 	ld	h, d
   078D 23            [ 6] 1661 	inc	hl
   078E 36 01         [10] 1662 	ld	(hl),#0x01
                           1663 ;main.c:121: f[0][1].y=2;
   0790 21 04 00      [10] 1664 	ld	hl,#0x0004
   0793 19            [11] 1665 	add	hl,de
   0794 36 02         [10] 1666 	ld	(hl),#0x02
                           1667 ;main.c:122: f[0][2].y=3;
   0796 21 07 00      [10] 1668 	ld	hl,#0x0007
   0799 19            [11] 1669 	add	hl,de
   079A 36 03         [10] 1670 	ld	(hl),#0x03
                           1671 ;main.c:124: f[1][0].y=1;
   079C 21 0A 00      [10] 1672 	ld	hl,#0x000A
   079F 19            [11] 1673 	add	hl,de
   07A0 36 01         [10] 1674 	ld	(hl),#0x01
                           1675 ;main.c:125: f[1][1].y=2;
   07A2 21 0D 00      [10] 1676 	ld	hl,#0x000D
   07A5 19            [11] 1677 	add	hl,de
   07A6 36 02         [10] 1678 	ld	(hl),#0x02
                           1679 ;main.c:126: f[1][2].y=3;
   07A8 21 10 00      [10] 1680 	ld	hl,#0x0010
   07AB 19            [11] 1681 	add	hl,de
   07AC 36 03         [10] 1682 	ld	(hl),#0x03
                           1683 ;main.c:128: f[2][0].y=1;
   07AE 21 13 00      [10] 1684 	ld	hl,#0x0013
   07B1 19            [11] 1685 	add	hl,de
   07B2 36 01         [10] 1686 	ld	(hl),#0x01
                           1687 ;main.c:129: f[2][1].y=2;
   07B4 21 16 00      [10] 1688 	ld	hl,#0x0016
   07B7 19            [11] 1689 	add	hl,de
   07B8 36 02         [10] 1690 	ld	(hl),#0x02
                           1691 ;main.c:130: f[2][2].y=3;
   07BA 21 19 00      [10] 1692 	ld	hl,#0x0019
   07BD 19            [11] 1693 	add	hl,de
   07BE 36 03         [10] 1694 	ld	(hl),#0x03
                           1695 ;main.c:131: switch(tipo)
   07C0 DD 7E 06      [19] 1696 	ld	a,6 (ix)
   07C3 D6 01         [ 7] 1697 	sub	a, #0x01
   07C5 DD 7E 07      [19] 1698 	ld	a,7 (ix)
   07C8 17            [ 4] 1699 	rla
   07C9 3F            [ 4] 1700 	ccf
   07CA 1F            [ 4] 1701 	rra
   07CB DE 80         [ 7] 1702 	sbc	a, #0x80
   07CD DAr74r09      [10] 1703 	jp	C,00106$
   07D0 3E 05         [ 7] 1704 	ld	a,#0x05
   07D2 DD BE 06      [19] 1705 	cp	a, 6 (ix)
   07D5 3E 00         [ 7] 1706 	ld	a,#0x00
   07D7 DD 9E 07      [19] 1707 	sbc	a, 7 (ix)
   07DA E2rDFr07      [10] 1708 	jp	PO, 00123$
   07DD EE 80         [ 7] 1709 	xor	a, #0x80
   07DF                    1710 00123$:
   07DF FAr74r09      [10] 1711 	jp	M,00106$
   07E2 DD 7E 06      [19] 1712 	ld	a,6 (ix)
   07E5 C6 FF         [ 7] 1713 	add	a,#0xFF
   07E7 DD 77 F5      [19] 1714 	ld	-11 (ix),a
                           1715 ;main.c:135: f[0][0].val=0;    // [0][0][0]
   07EA 4B            [ 4] 1716 	ld	c, e
   07EB 42            [ 4] 1717 	ld	b, d
   07EC 03            [ 6] 1718 	inc	bc
   07ED 03            [ 6] 1719 	inc	bc
                           1720 ;main.c:136: f[0][1].val=1;
   07EE 21 05 00      [10] 1721 	ld	hl,#0x0005
   07F1 19            [11] 1722 	add	hl,de
   07F2 DD 75 F3      [19] 1723 	ld	-13 (ix),l
   07F5 DD 74 F4      [19] 1724 	ld	-12 (ix),h
                           1725 ;main.c:137: f[0][2].val=1;
   07F8 21 08 00      [10] 1726 	ld	hl,#0x0008
   07FB 19            [11] 1727 	add	hl,de
   07FC E3            [19] 1728 	ex	(sp), hl
                           1729 ;main.c:138: f[1][0].val=1;
   07FD 21 0B 00      [10] 1730 	ld	hl,#0x000B
   0800 19            [11] 1731 	add	hl,de
   0801 DD 75 FE      [19] 1732 	ld	-2 (ix),l
   0804 DD 74 FF      [19] 1733 	ld	-1 (ix),h
                           1734 ;main.c:139: f[1][1].val=1;
   0807 21 0E 00      [10] 1735 	ld	hl,#0x000E
   080A 19            [11] 1736 	add	hl,de
   080B DD 75 FC      [19] 1737 	ld	-4 (ix),l
   080E DD 74 FD      [19] 1738 	ld	-3 (ix),h
                           1739 ;main.c:140: f[1][2].val=0;
   0811 21 11 00      [10] 1740 	ld	hl,#0x0011
   0814 19            [11] 1741 	add	hl,de
   0815 DD 75 FA      [19] 1742 	ld	-6 (ix),l
   0818 DD 74 FB      [19] 1743 	ld	-5 (ix),h
                           1744 ;main.c:141: f[2][0].val=0;
   081B 21 14 00      [10] 1745 	ld	hl,#0x0014
   081E 19            [11] 1746 	add	hl,de
   081F DD 75 F8      [19] 1747 	ld	-8 (ix),l
   0822 DD 74 F9      [19] 1748 	ld	-7 (ix),h
                           1749 ;main.c:142: f[2][1].val=0;
   0825 21 17 00      [10] 1750 	ld	hl,#0x0017
   0828 19            [11] 1751 	add	hl,de
   0829 DD 75 F6      [19] 1752 	ld	-10 (ix),l
   082C DD 74 F7      [19] 1753 	ld	-9 (ix),h
                           1754 ;main.c:143: f[2][2].val=0;
   082F 21 1A 00      [10] 1755 	ld	hl,#0x001A
   0832 19            [11] 1756 	add	hl,de
                           1757 ;main.c:131: switch(tipo)
   0833 E5            [11] 1758 	push	hl
   0834 DD 5E F5      [19] 1759 	ld	e,-11 (ix)
   0837 16 00         [ 7] 1760 	ld	d,#0x00
   0839 21r41r08      [10] 1761 	ld	hl,#00124$
   083C 19            [11] 1762 	add	hl,de
   083D 19            [11] 1763 	add	hl,de
   083E 19            [11] 1764 	add	hl,de
   083F D1            [10] 1765 	pop	de
   0840 E9            [ 4] 1766 	jp	(hl)
   0841                    1767 00124$:
   0841 C3r50r08      [10] 1768 	jp	00101$
   0844 C3r8Br08      [10] 1769 	jp	00102$
   0847 C3rC7r08      [10] 1770 	jp	00103$
   084A C3r01r09      [10] 1771 	jp	00104$
   084D C3r3Cr09      [10] 1772 	jp	00105$
                           1773 ;main.c:133: case 1://Z            // [0][1][1]
   0850                    1774 00101$:
                           1775 ;main.c:135: f[0][0].val=0;    // [0][0][0]
   0850 AF            [ 4] 1776 	xor	a, a
   0851 02            [ 7] 1777 	ld	(bc),a
                           1778 ;main.c:136: f[0][1].val=1;
   0852 DD 6E F3      [19] 1779 	ld	l,-13 (ix)
   0855 DD 66 F4      [19] 1780 	ld	h,-12 (ix)
   0858 36 01         [10] 1781 	ld	(hl),#0x01
                           1782 ;main.c:137: f[0][2].val=1;
   085A E1            [10] 1783 	pop	hl
   085B E5            [11] 1784 	push	hl
   085C 36 01         [10] 1785 	ld	(hl),#0x01
                           1786 ;main.c:138: f[1][0].val=1;
   085E DD 6E FE      [19] 1787 	ld	l,-2 (ix)
   0861 DD 66 FF      [19] 1788 	ld	h,-1 (ix)
   0864 36 01         [10] 1789 	ld	(hl),#0x01
                           1790 ;main.c:139: f[1][1].val=1;
   0866 DD 6E FC      [19] 1791 	ld	l,-4 (ix)
   0869 DD 66 FD      [19] 1792 	ld	h,-3 (ix)
   086C 36 01         [10] 1793 	ld	(hl),#0x01
                           1794 ;main.c:140: f[1][2].val=0;
   086E DD 6E FA      [19] 1795 	ld	l,-6 (ix)
   0871 DD 66 FB      [19] 1796 	ld	h,-5 (ix)
   0874 36 00         [10] 1797 	ld	(hl),#0x00
                           1798 ;main.c:141: f[2][0].val=0;
   0876 DD 6E F8      [19] 1799 	ld	l,-8 (ix)
   0879 DD 66 F9      [19] 1800 	ld	h,-7 (ix)
   087C 36 00         [10] 1801 	ld	(hl),#0x00
                           1802 ;main.c:142: f[2][1].val=0;
   087E DD 6E F6      [19] 1803 	ld	l,-10 (ix)
   0881 DD 66 F7      [19] 1804 	ld	h,-9 (ix)
   0884 36 00         [10] 1805 	ld	(hl),#0x00
                           1806 ;main.c:143: f[2][2].val=0;
   0886 AF            [ 4] 1807 	xor	a, a
   0887 12            [ 7] 1808 	ld	(de),a
                           1809 ;main.c:144: break;
   0888 C3r74r09      [10] 1810 	jp	00106$
                           1811 ;main.c:145: case 2://T
   088B                    1812 00102$:
                           1813 ;main.c:147: f[0][0].val=1;   //[1][1][1]    
   088B 3E 01         [ 7] 1814 	ld	a,#0x01
   088D 02            [ 7] 1815 	ld	(bc),a
                           1816 ;main.c:148: f[0][1].val=1;   //[0][1][0]
   088E DD 6E F3      [19] 1817 	ld	l,-13 (ix)
   0891 DD 66 F4      [19] 1818 	ld	h,-12 (ix)
   0894 36 01         [10] 1819 	ld	(hl),#0x01
                           1820 ;main.c:149: f[0][2].val=1;   //[0][0][0]
   0896 E1            [10] 1821 	pop	hl
   0897 E5            [11] 1822 	push	hl
   0898 36 01         [10] 1823 	ld	(hl),#0x01
                           1824 ;main.c:150: f[1][0].val=0;
   089A DD 6E FE      [19] 1825 	ld	l,-2 (ix)
   089D DD 66 FF      [19] 1826 	ld	h,-1 (ix)
   08A0 36 00         [10] 1827 	ld	(hl),#0x00
                           1828 ;main.c:151: f[1][1].val=1;
   08A2 DD 6E FC      [19] 1829 	ld	l,-4 (ix)
   08A5 DD 66 FD      [19] 1830 	ld	h,-3 (ix)
   08A8 36 01         [10] 1831 	ld	(hl),#0x01
                           1832 ;main.c:152: f[1][2].val=0;
   08AA DD 6E FA      [19] 1833 	ld	l,-6 (ix)
   08AD DD 66 FB      [19] 1834 	ld	h,-5 (ix)
   08B0 36 00         [10] 1835 	ld	(hl),#0x00
                           1836 ;main.c:153: f[2][0].val=0;
   08B2 DD 6E F8      [19] 1837 	ld	l,-8 (ix)
   08B5 DD 66 F9      [19] 1838 	ld	h,-7 (ix)
   08B8 36 00         [10] 1839 	ld	(hl),#0x00
                           1840 ;main.c:154: f[2][1].val=0;
   08BA DD 6E F6      [19] 1841 	ld	l,-10 (ix)
   08BD DD 66 F7      [19] 1842 	ld	h,-9 (ix)
   08C0 36 00         [10] 1843 	ld	(hl),#0x00
                           1844 ;main.c:155: f[2][2].val=0;
   08C2 AF            [ 4] 1845 	xor	a, a
   08C3 12            [ 7] 1846 	ld	(de),a
                           1847 ;main.c:156: break;
   08C4 C3r74r09      [10] 1848 	jp	00106$
                           1849 ;main.c:157: case 3://L
   08C7                    1850 00103$:
                           1851 ;main.c:159: f[0][0].val=0;   //[0][0][1]
   08C7 AF            [ 4] 1852 	xor	a, a
   08C8 02            [ 7] 1853 	ld	(bc),a
                           1854 ;main.c:160: f[0][1].val=0;   //[1][1][1]
   08C9 DD 6E F3      [19] 1855 	ld	l,-13 (ix)
   08CC DD 66 F4      [19] 1856 	ld	h,-12 (ix)
   08CF 36 00         [10] 1857 	ld	(hl),#0x00
                           1858 ;main.c:161: f[0][2].val=1;   //[0][0][0]
   08D1 E1            [10] 1859 	pop	hl
   08D2 E5            [11] 1860 	push	hl
   08D3 36 01         [10] 1861 	ld	(hl),#0x01
                           1862 ;main.c:162: f[1][0].val=1;
   08D5 DD 6E FE      [19] 1863 	ld	l,-2 (ix)
   08D8 DD 66 FF      [19] 1864 	ld	h,-1 (ix)
   08DB 36 01         [10] 1865 	ld	(hl),#0x01
                           1866 ;main.c:163: f[1][1].val=1;
   08DD DD 6E FC      [19] 1867 	ld	l,-4 (ix)
   08E0 DD 66 FD      [19] 1868 	ld	h,-3 (ix)
   08E3 36 01         [10] 1869 	ld	(hl),#0x01
                           1870 ;main.c:164: f[1][2].val=1;
   08E5 DD 6E FA      [19] 1871 	ld	l,-6 (ix)
   08E8 DD 66 FB      [19] 1872 	ld	h,-5 (ix)
   08EB 36 01         [10] 1873 	ld	(hl),#0x01
                           1874 ;main.c:165: f[2][0].val=0;
   08ED DD 6E F8      [19] 1875 	ld	l,-8 (ix)
   08F0 DD 66 F9      [19] 1876 	ld	h,-7 (ix)
   08F3 36 00         [10] 1877 	ld	(hl),#0x00
                           1878 ;main.c:166: f[2][1].val=0;
   08F5 DD 6E F6      [19] 1879 	ld	l,-10 (ix)
   08F8 DD 66 F7      [19] 1880 	ld	h,-9 (ix)
   08FB 36 00         [10] 1881 	ld	(hl),#0x00
                           1882 ;main.c:167: f[2][2].val=0;
   08FD AF            [ 4] 1883 	xor	a, a
   08FE 12            [ 7] 1884 	ld	(de),a
                           1885 ;main.c:168: break;
   08FF 18 73         [12] 1886 	jr	00106$
                           1887 ;main.c:169: case 4://Cubo
   0901                    1888 00104$:
                           1889 ;main.c:170: f[0][0].val=1;   //[1][1][0]
   0901 3E 01         [ 7] 1890 	ld	a,#0x01
   0903 02            [ 7] 1891 	ld	(bc),a
                           1892 ;main.c:171: f[0][1].val=1;   //[]1[1][0]
   0904 DD 6E F3      [19] 1893 	ld	l,-13 (ix)
   0907 DD 66 F4      [19] 1894 	ld	h,-12 (ix)
   090A 36 01         [10] 1895 	ld	(hl),#0x01
                           1896 ;main.c:172: f[0][2].val=0;   //[0][0][0]
   090C E1            [10] 1897 	pop	hl
   090D E5            [11] 1898 	push	hl
   090E 36 00         [10] 1899 	ld	(hl),#0x00
                           1900 ;main.c:173: f[1][0].val=1;
   0910 DD 6E FE      [19] 1901 	ld	l,-2 (ix)
   0913 DD 66 FF      [19] 1902 	ld	h,-1 (ix)
   0916 36 01         [10] 1903 	ld	(hl),#0x01
                           1904 ;main.c:174: f[1][1].val=1;
   0918 DD 6E FC      [19] 1905 	ld	l,-4 (ix)
   091B DD 66 FD      [19] 1906 	ld	h,-3 (ix)
   091E 36 01         [10] 1907 	ld	(hl),#0x01
                           1908 ;main.c:175: f[1][2].val=0;
   0920 DD 6E FA      [19] 1909 	ld	l,-6 (ix)
   0923 DD 66 FB      [19] 1910 	ld	h,-5 (ix)
   0926 36 00         [10] 1911 	ld	(hl),#0x00
                           1912 ;main.c:176: f[2][0].val=0;
   0928 DD 6E F8      [19] 1913 	ld	l,-8 (ix)
   092B DD 66 F9      [19] 1914 	ld	h,-7 (ix)
   092E 36 00         [10] 1915 	ld	(hl),#0x00
                           1916 ;main.c:177: f[2][1].val=0;
   0930 DD 6E F6      [19] 1917 	ld	l,-10 (ix)
   0933 DD 66 F7      [19] 1918 	ld	h,-9 (ix)
   0936 36 00         [10] 1919 	ld	(hl),#0x00
                           1920 ;main.c:178: f[2][2].val=0;
   0938 AF            [ 4] 1921 	xor	a, a
   0939 12            [ 7] 1922 	ld	(de),a
                           1923 ;main.c:179: break;
   093A 18 38         [12] 1924 	jr	00106$
                           1925 ;main.c:180: case 5:// linea
   093C                    1926 00105$:
                           1927 ;main.c:181: f[0][0].val=0;   //[0][1][0]
   093C AF            [ 4] 1928 	xor	a, a
   093D 02            [ 7] 1929 	ld	(bc),a
                           1930 ;main.c:182: f[0][1].val=1;   //[0][1][0]
   093E DD 6E F3      [19] 1931 	ld	l,-13 (ix)
   0941 DD 66 F4      [19] 1932 	ld	h,-12 (ix)
   0944 36 01         [10] 1933 	ld	(hl),#0x01
                           1934 ;main.c:183: f[0][2].val=0;   //[0][1][0]
   0946 E1            [10] 1935 	pop	hl
   0947 E5            [11] 1936 	push	hl
   0948 36 00         [10] 1937 	ld	(hl),#0x00
                           1938 ;main.c:184: f[1][0].val=0;
   094A DD 6E FE      [19] 1939 	ld	l,-2 (ix)
   094D DD 66 FF      [19] 1940 	ld	h,-1 (ix)
   0950 36 00         [10] 1941 	ld	(hl),#0x00
                           1942 ;main.c:185: f[1][1].val=1;
   0952 DD 6E FC      [19] 1943 	ld	l,-4 (ix)
   0955 DD 66 FD      [19] 1944 	ld	h,-3 (ix)
   0958 36 01         [10] 1945 	ld	(hl),#0x01
                           1946 ;main.c:186: f[1][2].val=0;
   095A DD 6E FA      [19] 1947 	ld	l,-6 (ix)
   095D DD 66 FB      [19] 1948 	ld	h,-5 (ix)
   0960 36 00         [10] 1949 	ld	(hl),#0x00
                           1950 ;main.c:187: f[2][0].val=0;
   0962 DD 6E F8      [19] 1951 	ld	l,-8 (ix)
   0965 DD 66 F9      [19] 1952 	ld	h,-7 (ix)
   0968 36 00         [10] 1953 	ld	(hl),#0x00
                           1954 ;main.c:188: f[2][1].val=1;
   096A DD 6E F6      [19] 1955 	ld	l,-10 (ix)
   096D DD 66 F7      [19] 1956 	ld	h,-9 (ix)
   0970 36 01         [10] 1957 	ld	(hl),#0x01
                           1958 ;main.c:189: f[2][2].val=0;
   0972 AF            [ 4] 1959 	xor	a, a
   0973 12            [ 7] 1960 	ld	(de),a
                           1961 ;main.c:191: }
   0974                    1962 00106$:
                           1963 ;main.c:192: cont++;
   0974 FD 21r01r00   [14] 1964 	ld	iy,#_cont
   0978 FD 34 00      [23] 1965 	inc	0 (iy)
   097B 20 07         [12] 1966 	jr	NZ,00125$
   097D FD 21r01r00   [14] 1967 	ld	iy,#_cont
   0981 FD 34 01      [23] 1968 	inc	1 (iy)
   0984                    1969 00125$:
                           1970 ;main.c:193: if(cont>5)
   0984 3E 05         [ 7] 1971 	ld	a,#0x05
   0986 FD 21r01r00   [14] 1972 	ld	iy,#_cont
   098A FD BE 00      [19] 1973 	cp	a, 0 (iy)
   098D 3E 00         [ 7] 1974 	ld	a,#0x00
   098F FD 21r01r00   [14] 1975 	ld	iy,#_cont
   0993 FD 9E 01      [19] 1976 	sbc	a, 1 (iy)
   0996 E2r9Br09      [10] 1977 	jp	PO, 00126$
   0999 EE 80         [ 7] 1978 	xor	a, #0x80
   099B                    1979 00126$:
   099B F2rA4r09      [10] 1980 	jp	P,00109$
                           1981 ;main.c:194: cont=1;
   099E 21 01 00      [10] 1982 	ld	hl,#0x0001
   09A1 22r01r00      [16] 1983 	ld	(_cont),hl
   09A4                    1984 00109$:
   09A4 DD F9         [10] 1985 	ld	sp, ix
   09A6 DD E1         [14] 1986 	pop	ix
   09A8 C9            [10] 1987 	ret
                           1988 ;main.c:197: void dibujaCara(int index)
                           1989 ;	---------------------------------
                           1990 ; Function dibujaCara
                           1991 ; ---------------------------------
   09A9                    1992 _dibujaCara::
                           1993 ;main.c:201: for(i=1;i<9;i++)
   09A9 16 01         [ 7] 1994 	ld	d,#0x01
                           1995 ;main.c:203: for(j=1;j<9;j++)
   09AB                    1996 00113$:
   09AB 1E 01         [ 7] 1997 	ld	e,#0x01
   09AD                    1998 00107$:
                           1999 ;main.c:205: max7219DrawPixel(i,j,0);
   09AD D5            [11] 2000 	push	de
   09AE AF            [ 4] 2001 	xor	a, a
   09AF F5            [11] 2002 	push	af
   09B0 33            [ 6] 2003 	inc	sp
   09B1 7B            [ 4] 2004 	ld	a,e
   09B2 F5            [11] 2005 	push	af
   09B3 33            [ 6] 2006 	inc	sp
   09B4 D5            [11] 2007 	push	de
   09B5 33            [ 6] 2008 	inc	sp
   09B6 CDrE9r03      [17] 2009 	call	_max7219DrawPixel
   09B9 F1            [10] 2010 	pop	af
   09BA 33            [ 6] 2011 	inc	sp
   09BB D1            [10] 2012 	pop	de
                           2013 ;main.c:203: for(j=1;j<9;j++)
   09BC 1C            [ 4] 2014 	inc	e
   09BD 7B            [ 4] 2015 	ld	a,e
   09BE D6 09         [ 7] 2016 	sub	a, #0x09
   09C0 38 EB         [12] 2017 	jr	C,00107$
                           2018 ;main.c:201: for(i=1;i<9;i++)
   09C2 14            [ 4] 2019 	inc	d
   09C3 7A            [ 4] 2020 	ld	a,d
   09C4 D6 09         [ 7] 2021 	sub	a, #0x09
   09C6 38 E3         [12] 2022 	jr	C,00113$
                           2023 ;main.c:209: switch(index)
   09C8 FD 21 02 00   [14] 2024 	ld	iy,#2
   09CC FD 39         [15] 2025 	add	iy,sp
   09CE FD 7E 00      [19] 2026 	ld	a,0 (iy)
   09D1 D6 01         [ 7] 2027 	sub	a, #0x01
   09D3 FD 7E 01      [19] 2028 	ld	a,1 (iy)
   09D6 17            [ 4] 2029 	rla
   09D7 3F            [ 4] 2030 	ccf
   09D8 1F            [ 4] 2031 	rra
   09D9 DE 80         [ 7] 2032 	sbc	a, #0x80
   09DB D8            [11] 2033 	ret	C
   09DC 3E 03         [ 7] 2034 	ld	a,#0x03
   09DE FD BE 00      [19] 2035 	cp	a, 0 (iy)
   09E1 3E 00         [ 7] 2036 	ld	a,#0x00
   09E3 FD 9E 01      [19] 2037 	sbc	a, 1 (iy)
   09E6 E2rEBr09      [10] 2038 	jp	PO, 00139$
   09E9 EE 80         [ 7] 2039 	xor	a, #0x80
   09EB                    2040 00139$:
   09EB F8            [11] 2041 	ret	M
   09EC FD 21 02 00   [14] 2042 	ld	iy,#2
   09F0 FD 39         [15] 2043 	add	iy,sp
   09F2 FD 7E 00      [19] 2044 	ld	a,0 (iy)
   09F5 C6 FF         [ 7] 2045 	add	a,#0xFF
   09F7 5F            [ 4] 2046 	ld	e,a
   09F8 16 00         [ 7] 2047 	ld	d,#0x00
   09FA 21r01r0A      [10] 2048 	ld	hl,#00140$
   09FD 19            [11] 2049 	add	hl,de
   09FE 19            [11] 2050 	add	hl,de
   09FF 19            [11] 2051 	add	hl,de
   0A00 E9            [ 4] 2052 	jp	(hl)
   0A01                    2053 00140$:
   0A01 C3r0Ar0A      [10] 2054 	jp	00103$
   0A04 C3r84r0A      [10] 2055 	jp	00104$
   0A07 C3r16r0B      [10] 2056 	jp	00105$
                           2057 ;main.c:211: case 1: //:)
   0A0A                    2058 00103$:
                           2059 ;main.c:212: max7219DrawPixel(3,1,1);
   0A0A 21 01 01      [10] 2060 	ld	hl,#0x0101
   0A0D E5            [11] 2061 	push	hl
   0A0E 3E 03         [ 7] 2062 	ld	a,#0x03
   0A10 F5            [11] 2063 	push	af
   0A11 33            [ 6] 2064 	inc	sp
   0A12 CDrE9r03      [17] 2065 	call	_max7219DrawPixel
                           2066 ;main.c:213: max7219DrawPixel(2,2,1);
   0A15 33            [ 6] 2067 	inc	sp
   0A16 21 02 01      [10] 2068 	ld	hl,#0x0102
   0A19 E3            [19] 2069 	ex	(sp),hl
   0A1A 3E 02         [ 7] 2070 	ld	a,#0x02
   0A1C F5            [11] 2071 	push	af
   0A1D 33            [ 6] 2072 	inc	sp
   0A1E CDrE9r03      [17] 2073 	call	_max7219DrawPixel
                           2074 ;main.c:214: max7219DrawPixel(3,3,1);
   0A21 33            [ 6] 2075 	inc	sp
   0A22 21 03 01      [10] 2076 	ld	hl,#0x0103
   0A25 E3            [19] 2077 	ex	(sp),hl
   0A26 3E 03         [ 7] 2078 	ld	a,#0x03
   0A28 F5            [11] 2079 	push	af
   0A29 33            [ 6] 2080 	inc	sp
   0A2A CDrE9r03      [17] 2081 	call	_max7219DrawPixel
                           2082 ;main.c:215: max7219DrawPixel(3,6,1);
   0A2D 33            [ 6] 2083 	inc	sp
   0A2E 21 06 01      [10] 2084 	ld	hl,#0x0106
   0A31 E3            [19] 2085 	ex	(sp),hl
   0A32 3E 03         [ 7] 2086 	ld	a,#0x03
   0A34 F5            [11] 2087 	push	af
   0A35 33            [ 6] 2088 	inc	sp
   0A36 CDrE9r03      [17] 2089 	call	_max7219DrawPixel
                           2090 ;main.c:216: max7219DrawPixel(2,7,1);
   0A39 33            [ 6] 2091 	inc	sp
   0A3A 21 07 01      [10] 2092 	ld	hl,#0x0107
   0A3D E3            [19] 2093 	ex	(sp),hl
   0A3E 3E 02         [ 7] 2094 	ld	a,#0x02
   0A40 F5            [11] 2095 	push	af
   0A41 33            [ 6] 2096 	inc	sp
   0A42 CDrE9r03      [17] 2097 	call	_max7219DrawPixel
                           2098 ;main.c:217: max7219DrawPixel(3,8,1);
   0A45 33            [ 6] 2099 	inc	sp
   0A46 21 08 01      [10] 2100 	ld	hl,#0x0108
   0A49 E3            [19] 2101 	ex	(sp),hl
   0A4A 3E 03         [ 7] 2102 	ld	a,#0x03
   0A4C F5            [11] 2103 	push	af
   0A4D 33            [ 6] 2104 	inc	sp
   0A4E CDrE9r03      [17] 2105 	call	_max7219DrawPixel
                           2106 ;main.c:218: max7219DrawPixel(6,3,1);
   0A51 33            [ 6] 2107 	inc	sp
   0A52 21 03 01      [10] 2108 	ld	hl,#0x0103
   0A55 E3            [19] 2109 	ex	(sp),hl
   0A56 3E 06         [ 7] 2110 	ld	a,#0x06
   0A58 F5            [11] 2111 	push	af
   0A59 33            [ 6] 2112 	inc	sp
   0A5A CDrE9r03      [17] 2113 	call	_max7219DrawPixel
                           2114 ;main.c:219: max7219DrawPixel(7,4,1);
   0A5D 33            [ 6] 2115 	inc	sp
   0A5E 21 04 01      [10] 2116 	ld	hl,#0x0104
   0A61 E3            [19] 2117 	ex	(sp),hl
   0A62 3E 07         [ 7] 2118 	ld	a,#0x07
   0A64 F5            [11] 2119 	push	af
   0A65 33            [ 6] 2120 	inc	sp
   0A66 CDrE9r03      [17] 2121 	call	_max7219DrawPixel
                           2122 ;main.c:220: max7219DrawPixel(7,5,1);
   0A69 33            [ 6] 2123 	inc	sp
   0A6A 21 05 01      [10] 2124 	ld	hl,#0x0105
   0A6D E3            [19] 2125 	ex	(sp),hl
   0A6E 3E 07         [ 7] 2126 	ld	a,#0x07
   0A70 F5            [11] 2127 	push	af
   0A71 33            [ 6] 2128 	inc	sp
   0A72 CDrE9r03      [17] 2129 	call	_max7219DrawPixel
                           2130 ;main.c:221: max7219DrawPixel(6,6,1);
   0A75 33            [ 6] 2131 	inc	sp
   0A76 21 06 01      [10] 2132 	ld	hl,#0x0106
   0A79 E3            [19] 2133 	ex	(sp),hl
   0A7A 3E 06         [ 7] 2134 	ld	a,#0x06
   0A7C F5            [11] 2135 	push	af
   0A7D 33            [ 6] 2136 	inc	sp
   0A7E CDrE9r03      [17] 2137 	call	_max7219DrawPixel
   0A81 F1            [10] 2138 	pop	af
   0A82 33            [ 6] 2139 	inc	sp
                           2140 ;main.c:222: break;
   0A83 C9            [10] 2141 	ret
                           2142 ;main.c:223: case 2: // O_O
   0A84                    2143 00104$:
                           2144 ;main.c:224: max7219DrawPixel(2,2,1);
   0A84 21 02 01      [10] 2145 	ld	hl,#0x0102
   0A87 E5            [11] 2146 	push	hl
   0A88 3E 02         [ 7] 2147 	ld	a,#0x02
   0A8A F5            [11] 2148 	push	af
   0A8B 33            [ 6] 2149 	inc	sp
   0A8C CDrE9r03      [17] 2150 	call	_max7219DrawPixel
                           2151 ;main.c:225: max7219DrawPixel(3,1,1);
   0A8F 33            [ 6] 2152 	inc	sp
   0A90 21 01 01      [10] 2153 	ld	hl,#0x0101
   0A93 E3            [19] 2154 	ex	(sp),hl
   0A94 3E 03         [ 7] 2155 	ld	a,#0x03
   0A96 F5            [11] 2156 	push	af
   0A97 33            [ 6] 2157 	inc	sp
   0A98 CDrE9r03      [17] 2158 	call	_max7219DrawPixel
                           2159 ;main.c:226: max7219DrawPixel(3,3,1);
   0A9B 33            [ 6] 2160 	inc	sp
   0A9C 21 03 01      [10] 2161 	ld	hl,#0x0103
   0A9F E3            [19] 2162 	ex	(sp),hl
   0AA0 3E 03         [ 7] 2163 	ld	a,#0x03
   0AA2 F5            [11] 2164 	push	af
   0AA3 33            [ 6] 2165 	inc	sp
   0AA4 CDrE9r03      [17] 2166 	call	_max7219DrawPixel
                           2167 ;main.c:227: max7219DrawPixel(4,2,1);
   0AA7 33            [ 6] 2168 	inc	sp
   0AA8 21 02 01      [10] 2169 	ld	hl,#0x0102
   0AAB E3            [19] 2170 	ex	(sp),hl
   0AAC 3E 04         [ 7] 2171 	ld	a,#0x04
   0AAE F5            [11] 2172 	push	af
   0AAF 33            [ 6] 2173 	inc	sp
   0AB0 CDrE9r03      [17] 2174 	call	_max7219DrawPixel
                           2175 ;main.c:229: max7219DrawPixel(2,7,1);
   0AB3 33            [ 6] 2176 	inc	sp
   0AB4 21 07 01      [10] 2177 	ld	hl,#0x0107
   0AB7 E3            [19] 2178 	ex	(sp),hl
   0AB8 3E 02         [ 7] 2179 	ld	a,#0x02
   0ABA F5            [11] 2180 	push	af
   0ABB 33            [ 6] 2181 	inc	sp
   0ABC CDrE9r03      [17] 2182 	call	_max7219DrawPixel
                           2183 ;main.c:230: max7219DrawPixel(3,6,1);
   0ABF 33            [ 6] 2184 	inc	sp
   0AC0 21 06 01      [10] 2185 	ld	hl,#0x0106
   0AC3 E3            [19] 2186 	ex	(sp),hl
   0AC4 3E 03         [ 7] 2187 	ld	a,#0x03
   0AC6 F5            [11] 2188 	push	af
   0AC7 33            [ 6] 2189 	inc	sp
   0AC8 CDrE9r03      [17] 2190 	call	_max7219DrawPixel
                           2191 ;main.c:231: max7219DrawPixel(3,8,1);
   0ACB 33            [ 6] 2192 	inc	sp
   0ACC 21 08 01      [10] 2193 	ld	hl,#0x0108
   0ACF E3            [19] 2194 	ex	(sp),hl
   0AD0 3E 03         [ 7] 2195 	ld	a,#0x03
   0AD2 F5            [11] 2196 	push	af
   0AD3 33            [ 6] 2197 	inc	sp
   0AD4 CDrE9r03      [17] 2198 	call	_max7219DrawPixel
                           2199 ;main.c:232: max7219DrawPixel(4,7,1);
   0AD7 33            [ 6] 2200 	inc	sp
   0AD8 21 07 01      [10] 2201 	ld	hl,#0x0107
   0ADB E3            [19] 2202 	ex	(sp),hl
   0ADC 3E 04         [ 7] 2203 	ld	a,#0x04
   0ADE F5            [11] 2204 	push	af
   0ADF 33            [ 6] 2205 	inc	sp
   0AE0 CDrE9r03      [17] 2206 	call	_max7219DrawPixel
                           2207 ;main.c:234: max7219DrawPixel(7,3,1);
   0AE3 33            [ 6] 2208 	inc	sp
   0AE4 21 03 01      [10] 2209 	ld	hl,#0x0103
   0AE7 E3            [19] 2210 	ex	(sp),hl
   0AE8 3E 07         [ 7] 2211 	ld	a,#0x07
   0AEA F5            [11] 2212 	push	af
   0AEB 33            [ 6] 2213 	inc	sp
   0AEC CDrE9r03      [17] 2214 	call	_max7219DrawPixel
                           2215 ;main.c:235: max7219DrawPixel(7,4,1);
   0AEF 33            [ 6] 2216 	inc	sp
   0AF0 21 04 01      [10] 2217 	ld	hl,#0x0104
   0AF3 E3            [19] 2218 	ex	(sp),hl
   0AF4 3E 07         [ 7] 2219 	ld	a,#0x07
   0AF6 F5            [11] 2220 	push	af
   0AF7 33            [ 6] 2221 	inc	sp
   0AF8 CDrE9r03      [17] 2222 	call	_max7219DrawPixel
                           2223 ;main.c:236: max7219DrawPixel(7,5,1);
   0AFB 33            [ 6] 2224 	inc	sp
   0AFC 21 05 01      [10] 2225 	ld	hl,#0x0105
   0AFF E3            [19] 2226 	ex	(sp),hl
   0B00 3E 07         [ 7] 2227 	ld	a,#0x07
   0B02 F5            [11] 2228 	push	af
   0B03 33            [ 6] 2229 	inc	sp
   0B04 CDrE9r03      [17] 2230 	call	_max7219DrawPixel
                           2231 ;main.c:237: max7219DrawPixel(7,6,1);
   0B07 33            [ 6] 2232 	inc	sp
   0B08 21 06 01      [10] 2233 	ld	hl,#0x0106
   0B0B E3            [19] 2234 	ex	(sp),hl
   0B0C 3E 07         [ 7] 2235 	ld	a,#0x07
   0B0E F5            [11] 2236 	push	af
   0B0F 33            [ 6] 2237 	inc	sp
   0B10 CDrE9r03      [17] 2238 	call	_max7219DrawPixel
   0B13 F1            [10] 2239 	pop	af
   0B14 33            [ 6] 2240 	inc	sp
                           2241 ;main.c:238: break;
   0B15 C9            [10] 2242 	ret
                           2243 ;main.c:239: case 3: // -_-
   0B16                    2244 00105$:
                           2245 ;main.c:240: max7219DrawPixel(3,1,1);
   0B16 21 01 01      [10] 2246 	ld	hl,#0x0101
   0B19 E5            [11] 2247 	push	hl
   0B1A 3E 03         [ 7] 2248 	ld	a,#0x03
   0B1C F5            [11] 2249 	push	af
   0B1D 33            [ 6] 2250 	inc	sp
   0B1E CDrE9r03      [17] 2251 	call	_max7219DrawPixel
                           2252 ;main.c:241: max7219DrawPixel(3,2,1);
   0B21 33            [ 6] 2253 	inc	sp
   0B22 21 02 01      [10] 2254 	ld	hl,#0x0102
   0B25 E3            [19] 2255 	ex	(sp),hl
   0B26 3E 03         [ 7] 2256 	ld	a,#0x03
   0B28 F5            [11] 2257 	push	af
   0B29 33            [ 6] 2258 	inc	sp
   0B2A CDrE9r03      [17] 2259 	call	_max7219DrawPixel
                           2260 ;main.c:242: max7219DrawPixel(3,3,1);
   0B2D 33            [ 6] 2261 	inc	sp
   0B2E 21 03 01      [10] 2262 	ld	hl,#0x0103
   0B31 E3            [19] 2263 	ex	(sp),hl
   0B32 3E 03         [ 7] 2264 	ld	a,#0x03
   0B34 F5            [11] 2265 	push	af
   0B35 33            [ 6] 2266 	inc	sp
   0B36 CDrE9r03      [17] 2267 	call	_max7219DrawPixel
                           2268 ;main.c:244: max7219DrawPixel(3,6,1);
   0B39 33            [ 6] 2269 	inc	sp
   0B3A 21 06 01      [10] 2270 	ld	hl,#0x0106
   0B3D E3            [19] 2271 	ex	(sp),hl
   0B3E 3E 03         [ 7] 2272 	ld	a,#0x03
   0B40 F5            [11] 2273 	push	af
   0B41 33            [ 6] 2274 	inc	sp
   0B42 CDrE9r03      [17] 2275 	call	_max7219DrawPixel
                           2276 ;main.c:245: max7219DrawPixel(3,7,1);
   0B45 33            [ 6] 2277 	inc	sp
   0B46 21 07 01      [10] 2278 	ld	hl,#0x0107
   0B49 E3            [19] 2279 	ex	(sp),hl
   0B4A 3E 03         [ 7] 2280 	ld	a,#0x03
   0B4C F5            [11] 2281 	push	af
   0B4D 33            [ 6] 2282 	inc	sp
   0B4E CDrE9r03      [17] 2283 	call	_max7219DrawPixel
                           2284 ;main.c:246: max7219DrawPixel(3,8,1);
   0B51 33            [ 6] 2285 	inc	sp
   0B52 21 08 01      [10] 2286 	ld	hl,#0x0108
   0B55 E3            [19] 2287 	ex	(sp),hl
   0B56 3E 03         [ 7] 2288 	ld	a,#0x03
   0B58 F5            [11] 2289 	push	af
   0B59 33            [ 6] 2290 	inc	sp
   0B5A CDrE9r03      [17] 2291 	call	_max7219DrawPixel
                           2292 ;main.c:248: max7219DrawPixel(7,3,1);
   0B5D 33            [ 6] 2293 	inc	sp
   0B5E 21 03 01      [10] 2294 	ld	hl,#0x0103
   0B61 E3            [19] 2295 	ex	(sp),hl
   0B62 3E 07         [ 7] 2296 	ld	a,#0x07
   0B64 F5            [11] 2297 	push	af
   0B65 33            [ 6] 2298 	inc	sp
   0B66 CDrE9r03      [17] 2299 	call	_max7219DrawPixel
                           2300 ;main.c:249: max7219DrawPixel(7,4,1);
   0B69 33            [ 6] 2301 	inc	sp
   0B6A 21 04 01      [10] 2302 	ld	hl,#0x0104
   0B6D E3            [19] 2303 	ex	(sp),hl
   0B6E 3E 07         [ 7] 2304 	ld	a,#0x07
   0B70 F5            [11] 2305 	push	af
   0B71 33            [ 6] 2306 	inc	sp
   0B72 CDrE9r03      [17] 2307 	call	_max7219DrawPixel
                           2308 ;main.c:250: max7219DrawPixel(7,5,1);
   0B75 33            [ 6] 2309 	inc	sp
   0B76 21 05 01      [10] 2310 	ld	hl,#0x0105
   0B79 E3            [19] 2311 	ex	(sp),hl
   0B7A 3E 07         [ 7] 2312 	ld	a,#0x07
   0B7C F5            [11] 2313 	push	af
   0B7D 33            [ 6] 2314 	inc	sp
   0B7E CDrE9r03      [17] 2315 	call	_max7219DrawPixel
                           2316 ;main.c:251: max7219DrawPixel(7,6,1);
   0B81 33            [ 6] 2317 	inc	sp
   0B82 21 06 01      [10] 2318 	ld	hl,#0x0106
   0B85 E3            [19] 2319 	ex	(sp),hl
   0B86 3E 07         [ 7] 2320 	ld	a,#0x07
   0B88 F5            [11] 2321 	push	af
   0B89 33            [ 6] 2322 	inc	sp
   0B8A CDrE9r03      [17] 2323 	call	_max7219DrawPixel
   0B8D F1            [10] 2324 	pop	af
   0B8E 33            [ 6] 2325 	inc	sp
                           2326 ;main.c:253: }
   0B8F C9            [10] 2327 	ret
                           2328 ;main.c:265: void giraDerecha(pixel f[3][3])
                           2329 ;	---------------------------------
                           2330 ; Function giraDerecha
                           2331 ; ---------------------------------
   0B90                    2332 _giraDerecha::
   0B90 DD E5         [15] 2333 	push	ix
   0B92 DD 21 00 00   [14] 2334 	ld	ix,#0
   0B96 DD 39         [15] 2335 	add	ix,sp
   0B98 21 D3 FF      [10] 2336 	ld	hl,#-45
   0B9B 39            [11] 2337 	add	hl,sp
   0B9C F9            [ 6] 2338 	ld	sp,hl
                           2339 ;main.c:269: borraFigura(f);
   0B9D DD 6E 04      [19] 2340 	ld	l,4 (ix)
   0BA0 DD 66 05      [19] 2341 	ld	h,5 (ix)
   0BA3 E5            [11] 2342 	push	hl
   0BA4 CDrA4r06      [17] 2343 	call	_borraFigura
   0BA7 F1            [10] 2344 	pop	af
                           2345 ;main.c:270: for(i=0;i<3;i++)
   0BA8 21 02 00      [10] 2346 	ld	hl,#0x0002
   0BAB 39            [11] 2347 	add	hl,sp
   0BAC DD 75 FA      [19] 2348 	ld	-6 (ix),l
   0BAF DD 74 FB      [19] 2349 	ld	-5 (ix),h
   0BB2 21 00 00      [10] 2350 	ld	hl,#0x0000
   0BB5 E3            [19] 2351 	ex	(sp), hl
   0BB6 DD 36 FE 00   [19] 2352 	ld	-2 (ix),#0x00
   0BBA DD 36 FF 00   [19] 2353 	ld	-1 (ix),#0x00
   0BBE DD 36 FC 00   [19] 2354 	ld	-4 (ix),#0x00
   0BC2 DD 36 FD 00   [19] 2355 	ld	-3 (ix),#0x00
                           2356 ;main.c:272: for(j=0;j<3;j++)
   0BC6                    2357 00123$:
   0BC6 DD 7E FA      [19] 2358 	ld	a,-6 (ix)
   0BC9 DD 86 FE      [19] 2359 	add	a, -2 (ix)
   0BCC DD 77 F8      [19] 2360 	ld	-8 (ix),a
   0BCF DD 7E FB      [19] 2361 	ld	a,-5 (ix)
   0BD2 DD 8E FF      [19] 2362 	adc	a, -1 (ix)
   0BD5 DD 77 F9      [19] 2363 	ld	-7 (ix),a
   0BD8 DD 7E 04      [19] 2364 	ld	a,4 (ix)
   0BDB DD 86 FE      [19] 2365 	add	a, -2 (ix)
   0BDE DD 77 F6      [19] 2366 	ld	-10 (ix),a
   0BE1 DD 7E 05      [19] 2367 	ld	a,5 (ix)
   0BE4 DD 8E FF      [19] 2368 	adc	a, -1 (ix)
   0BE7 DD 77 F7      [19] 2369 	ld	-9 (ix),a
   0BEA DD 36 F0 00   [19] 2370 	ld	-16 (ix),#0x00
   0BEE DD 36 F1 00   [19] 2371 	ld	-15 (ix),#0x00
   0BF2 DD 36 F4 00   [19] 2372 	ld	-12 (ix),#0x00
   0BF6 DD 36 F5 00   [19] 2373 	ld	-11 (ix),#0x00
   0BFA                    2374 00109$:
                           2375 ;main.c:274: _nueva[i][j].x=f[i][j].x; // Pasa las coordenadas acutuales de la figura en ese pixel
   0BFA DD 7E F8      [19] 2376 	ld	a,-8 (ix)
   0BFD DD 86 F4      [19] 2377 	add	a, -12 (ix)
   0C00 5F            [ 4] 2378 	ld	e,a
   0C01 DD 7E F9      [19] 2379 	ld	a,-7 (ix)
   0C04 DD 8E F5      [19] 2380 	adc	a, -11 (ix)
   0C07 57            [ 4] 2381 	ld	d,a
   0C08 DD 7E F6      [19] 2382 	ld	a,-10 (ix)
   0C0B DD 86 F4      [19] 2383 	add	a, -12 (ix)
   0C0E 4F            [ 4] 2384 	ld	c,a
   0C0F DD 7E F7      [19] 2385 	ld	a,-9 (ix)
   0C12 DD 8E F5      [19] 2386 	adc	a, -11 (ix)
   0C15 47            [ 4] 2387 	ld	b,a
   0C16 0A            [ 7] 2388 	ld	a,(bc)
   0C17 12            [ 7] 2389 	ld	(de),a
                           2390 ;main.c:275: _nueva[i][j].y=f[i][j].y; // Pasa las coordenadas acutuales de la figura en ese pixel
   0C18 D5            [11] 2391 	push	de
   0C19 FD E1         [14] 2392 	pop	iy
   0C1B FD 23         [10] 2393 	inc	iy
   0C1D 69            [ 4] 2394 	ld	l, c
   0C1E 60            [ 4] 2395 	ld	h, b
   0C1F 23            [ 6] 2396 	inc	hl
   0C20 7E            [ 7] 2397 	ld	a,(hl)
   0C21 FD 77 00      [19] 2398 	ld	0 (iy), a
                           2399 ;main.c:276: _nueva[i][j].val=f[2-j][i].val;// Asigna el valor que corresponde al rotar la matriz
   0C24 13            [ 6] 2400 	inc	de
   0C25 13            [ 6] 2401 	inc	de
   0C26 3E 02         [ 7] 2402 	ld	a,#0x02
   0C28 DD 96 F0      [19] 2403 	sub	a, -16 (ix)
   0C2B 6F            [ 4] 2404 	ld	l,a
   0C2C 3E 00         [ 7] 2405 	ld	a,#0x00
   0C2E DD 9E F1      [19] 2406 	sbc	a, -15 (ix)
   0C31 67            [ 4] 2407 	ld	h,a
   0C32 4D            [ 4] 2408 	ld	c, l
   0C33 44            [ 4] 2409 	ld	b, h
   0C34 29            [11] 2410 	add	hl, hl
   0C35 29            [11] 2411 	add	hl, hl
   0C36 29            [11] 2412 	add	hl, hl
   0C37 09            [11] 2413 	add	hl, bc
   0C38 4D            [ 4] 2414 	ld	c,l
   0C39 44            [ 4] 2415 	ld	b,h
   0C3A DD 6E 04      [19] 2416 	ld	l,4 (ix)
   0C3D DD 66 05      [19] 2417 	ld	h,5 (ix)
   0C40 09            [11] 2418 	add	hl,bc
   0C41 DD 4E FC      [19] 2419 	ld	c,-4 (ix)
   0C44 DD 46 FD      [19] 2420 	ld	b,-3 (ix)
   0C47 09            [11] 2421 	add	hl,bc
   0C48 23            [ 6] 2422 	inc	hl
   0C49 23            [ 6] 2423 	inc	hl
   0C4A 7E            [ 7] 2424 	ld	a,(hl)
   0C4B 12            [ 7] 2425 	ld	(de),a
                           2426 ;main.c:272: for(j=0;j<3;j++)
   0C4C DD 7E F4      [19] 2427 	ld	a,-12 (ix)
   0C4F C6 03         [ 7] 2428 	add	a, #0x03
   0C51 DD 77 F4      [19] 2429 	ld	-12 (ix),a
   0C54 DD 7E F5      [19] 2430 	ld	a,-11 (ix)
   0C57 CE 00         [ 7] 2431 	adc	a, #0x00
   0C59 DD 77 F5      [19] 2432 	ld	-11 (ix),a
   0C5C DD 34 F0      [23] 2433 	inc	-16 (ix)
   0C5F 20 03         [12] 2434 	jr	NZ,00175$
   0C61 DD 34 F1      [23] 2435 	inc	-15 (ix)
   0C64                    2436 00175$:
   0C64 DD 7E F0      [19] 2437 	ld	a,-16 (ix)
   0C67 D6 03         [ 7] 2438 	sub	a, #0x03
   0C69 DD 7E F1      [19] 2439 	ld	a,-15 (ix)
   0C6C 17            [ 4] 2440 	rla
   0C6D 3F            [ 4] 2441 	ccf
   0C6E 1F            [ 4] 2442 	rra
   0C6F DE 80         [ 7] 2443 	sbc	a, #0x80
   0C71 38 87         [12] 2444 	jr	C,00109$
                           2445 ;main.c:270: for(i=0;i<3;i++)
   0C73 DD 7E FE      [19] 2446 	ld	a,-2 (ix)
   0C76 C6 09         [ 7] 2447 	add	a, #0x09
   0C78 DD 77 FE      [19] 2448 	ld	-2 (ix),a
   0C7B DD 7E FF      [19] 2449 	ld	a,-1 (ix)
   0C7E CE 00         [ 7] 2450 	adc	a, #0x00
   0C80 DD 77 FF      [19] 2451 	ld	-1 (ix),a
   0C83 DD 7E FC      [19] 2452 	ld	a,-4 (ix)
   0C86 C6 03         [ 7] 2453 	add	a, #0x03
   0C88 DD 77 FC      [19] 2454 	ld	-4 (ix),a
   0C8B DD 7E FD      [19] 2455 	ld	a,-3 (ix)
   0C8E CE 00         [ 7] 2456 	adc	a, #0x00
   0C90 DD 77 FD      [19] 2457 	ld	-3 (ix),a
   0C93 DD 34 D3      [23] 2458 	inc	-45 (ix)
   0C96 20 03         [12] 2459 	jr	NZ,00176$
   0C98 DD 34 D4      [23] 2460 	inc	-44 (ix)
   0C9B                    2461 00176$:
   0C9B DD 7E D3      [19] 2462 	ld	a,-45 (ix)
   0C9E D6 03         [ 7] 2463 	sub	a, #0x03
   0CA0 DD 7E D4      [19] 2464 	ld	a,-44 (ix)
   0CA3 17            [ 4] 2465 	rla
   0CA4 3F            [ 4] 2466 	ccf
   0CA5 1F            [ 4] 2467 	rra
   0CA6 DE 80         [ 7] 2468 	sbc	a, #0x80
   0CA8 DArC6r0B      [10] 2469 	jp	C,00123$
                           2470 ;main.c:280: for(i=0;i<3;i++)
   0CAB 21 00 00      [10] 2471 	ld	hl,#0x0000
   0CAE E3            [19] 2472 	ex	(sp), hl
   0CAF DD 36 F4 00   [19] 2473 	ld	-12 (ix),#0x00
   0CB3 DD 36 F5 00   [19] 2474 	ld	-11 (ix),#0x00
                           2475 ;main.c:282: for(j=0;j<3;j++)
   0CB7                    2476 00128$:
   0CB7 DD 7E FA      [19] 2477 	ld	a,-6 (ix)
   0CBA DD 86 F4      [19] 2478 	add	a, -12 (ix)
   0CBD DD 77 F6      [19] 2479 	ld	-10 (ix),a
   0CC0 DD 7E FB      [19] 2480 	ld	a,-5 (ix)
   0CC3 DD 8E F5      [19] 2481 	adc	a, -11 (ix)
   0CC6 DD 77 F7      [19] 2482 	ld	-9 (ix),a
   0CC9 DD 36 F0 00   [19] 2483 	ld	-16 (ix),#0x00
   0CCD DD 36 F1 00   [19] 2484 	ld	-15 (ix),#0x00
   0CD1 DD 36 F8 00   [19] 2485 	ld	-8 (ix),#0x00
   0CD5 DD 36 F9 00   [19] 2486 	ld	-7 (ix),#0x00
   0CD9                    2487 00113$:
                           2488 ;main.c:284: if(max7219ReadPixel(_nueva[i][j].x,_nueva[i][j].y) != 0) // el bit esta ocupado en la malla
   0CD9 DD 7E F6      [19] 2489 	ld	a,-10 (ix)
   0CDC DD 86 F8      [19] 2490 	add	a, -8 (ix)
   0CDF 5F            [ 4] 2491 	ld	e,a
   0CE0 DD 7E F7      [19] 2492 	ld	a,-9 (ix)
   0CE3 DD 8E F9      [19] 2493 	adc	a, -7 (ix)
   0CE6 57            [ 4] 2494 	ld	d,a
   0CE7 6B            [ 4] 2495 	ld	l, e
   0CE8 62            [ 4] 2496 	ld	h, d
   0CE9 23            [ 6] 2497 	inc	hl
   0CEA 46            [ 7] 2498 	ld	b,(hl)
   0CEB 1A            [ 7] 2499 	ld	a,(de)
   0CEC C5            [11] 2500 	push	bc
   0CED 33            [ 6] 2501 	inc	sp
   0CEE F5            [11] 2502 	push	af
   0CEF 33            [ 6] 2503 	inc	sp
   0CF0 CDr6Br05      [17] 2504 	call	_max7219ReadPixel
   0CF3 F1            [10] 2505 	pop	af
   0CF4 4D            [ 4] 2506 	ld	c,l
   0CF5 79            [ 4] 2507 	ld	a,c
   0CF6 B7            [ 4] 2508 	or	a, a
                           2509 ;main.c:286: return;
   0CF7 C2r2Cr0E      [10] 2510 	jp	NZ,00121$
                           2511 ;main.c:282: for(j=0;j<3;j++)
   0CFA DD 7E F8      [19] 2512 	ld	a,-8 (ix)
   0CFD C6 03         [ 7] 2513 	add	a, #0x03
   0CFF DD 77 F8      [19] 2514 	ld	-8 (ix),a
   0D02 DD 7E F9      [19] 2515 	ld	a,-7 (ix)
   0D05 CE 00         [ 7] 2516 	adc	a, #0x00
   0D07 DD 77 F9      [19] 2517 	ld	-7 (ix),a
   0D0A DD 34 F0      [23] 2518 	inc	-16 (ix)
   0D0D 20 03         [12] 2519 	jr	NZ,00177$
   0D0F DD 34 F1      [23] 2520 	inc	-15 (ix)
   0D12                    2521 00177$:
   0D12 DD 7E F0      [19] 2522 	ld	a,-16 (ix)
   0D15 D6 03         [ 7] 2523 	sub	a, #0x03
   0D17 DD 7E F1      [19] 2524 	ld	a,-15 (ix)
   0D1A 17            [ 4] 2525 	rla
   0D1B 3F            [ 4] 2526 	ccf
   0D1C 1F            [ 4] 2527 	rra
   0D1D DE 80         [ 7] 2528 	sbc	a, #0x80
   0D1F 38 B8         [12] 2529 	jr	C,00113$
                           2530 ;main.c:280: for(i=0;i<3;i++)
   0D21 DD 7E F4      [19] 2531 	ld	a,-12 (ix)
   0D24 C6 09         [ 7] 2532 	add	a, #0x09
   0D26 DD 77 F4      [19] 2533 	ld	-12 (ix),a
   0D29 DD 7E F5      [19] 2534 	ld	a,-11 (ix)
   0D2C CE 00         [ 7] 2535 	adc	a, #0x00
   0D2E DD 77 F5      [19] 2536 	ld	-11 (ix),a
   0D31 DD 34 D3      [23] 2537 	inc	-45 (ix)
   0D34 20 03         [12] 2538 	jr	NZ,00178$
   0D36 DD 34 D4      [23] 2539 	inc	-44 (ix)
   0D39                    2540 00178$:
   0D39 DD 7E D3      [19] 2541 	ld	a,-45 (ix)
   0D3C D6 03         [ 7] 2542 	sub	a, #0x03
   0D3E DD 7E D4      [19] 2543 	ld	a,-44 (ix)
   0D41 17            [ 4] 2544 	rla
   0D42 3F            [ 4] 2545 	ccf
   0D43 1F            [ 4] 2546 	rra
   0D44 DE 80         [ 7] 2547 	sbc	a, #0x80
   0D46 DArB7r0C      [10] 2548 	jp	C,00128$
                           2549 ;main.c:291: for(i=0;i<3;i++)
   0D49 21 00 00      [10] 2550 	ld	hl,#0x0000
   0D4C E3            [19] 2551 	ex	(sp), hl
   0D4D DD 36 F4 00   [19] 2552 	ld	-12 (ix),#0x00
   0D51 DD 36 F5 00   [19] 2553 	ld	-11 (ix),#0x00
                           2554 ;main.c:293: for(j=0;j<3;j++)
   0D55                    2555 00132$:
   0D55 DD 7E 04      [19] 2556 	ld	a,4 (ix)
   0D58 DD 86 F4      [19] 2557 	add	a, -12 (ix)
   0D5B DD 77 F6      [19] 2558 	ld	-10 (ix),a
   0D5E DD 7E 05      [19] 2559 	ld	a,5 (ix)
   0D61 DD 8E F5      [19] 2560 	adc	a, -11 (ix)
   0D64 DD 77 F7      [19] 2561 	ld	-9 (ix),a
   0D67 DD 7E FA      [19] 2562 	ld	a,-6 (ix)
   0D6A DD 86 F4      [19] 2563 	add	a, -12 (ix)
   0D6D DD 77 F8      [19] 2564 	ld	-8 (ix),a
   0D70 DD 7E FB      [19] 2565 	ld	a,-5 (ix)
   0D73 DD 8E F5      [19] 2566 	adc	a, -11 (ix)
   0D76 DD 77 F9      [19] 2567 	ld	-7 (ix),a
   0D79 DD 36 F0 00   [19] 2568 	ld	-16 (ix),#0x00
   0D7D DD 36 F1 00   [19] 2569 	ld	-15 (ix),#0x00
   0D81 DD 36 FC 00   [19] 2570 	ld	-4 (ix),#0x00
   0D85 DD 36 FD 00   [19] 2571 	ld	-3 (ix),#0x00
   0D89                    2572 00117$:
                           2573 ;main.c:295: f[i][j].x = _nueva[i][j].x;
   0D89 DD 7E F6      [19] 2574 	ld	a,-10 (ix)
   0D8C DD 86 FC      [19] 2575 	add	a, -4 (ix)
   0D8F DD 77 FE      [19] 2576 	ld	-2 (ix),a
   0D92 DD 7E F7      [19] 2577 	ld	a,-9 (ix)
   0D95 DD 8E FD      [19] 2578 	adc	a, -3 (ix)
   0D98 DD 77 FF      [19] 2579 	ld	-1 (ix),a
   0D9B DD 7E F8      [19] 2580 	ld	a,-8 (ix)
   0D9E DD 86 FC      [19] 2581 	add	a, -4 (ix)
   0DA1 DD 77 F2      [19] 2582 	ld	-14 (ix),a
   0DA4 DD 7E F9      [19] 2583 	ld	a,-7 (ix)
   0DA7 DD 8E FD      [19] 2584 	adc	a, -3 (ix)
   0DAA DD 77 F3      [19] 2585 	ld	-13 (ix),a
   0DAD DD 6E F2      [19] 2586 	ld	l,-14 (ix)
   0DB0 DD 66 F3      [19] 2587 	ld	h,-13 (ix)
   0DB3 7E            [ 7] 2588 	ld	a,(hl)
   0DB4 DD 6E FE      [19] 2589 	ld	l,-2 (ix)
   0DB7 DD 66 FF      [19] 2590 	ld	h,-1 (ix)
   0DBA 77            [ 7] 2591 	ld	(hl),a
                           2592 ;main.c:296: f[i][j].y = _nueva[i][j].y;
   0DBB DD 5E FE      [19] 2593 	ld	e,-2 (ix)
   0DBE DD 56 FF      [19] 2594 	ld	d,-1 (ix)
   0DC1 13            [ 6] 2595 	inc	de
   0DC2 DD 6E F2      [19] 2596 	ld	l,-14 (ix)
   0DC5 DD 66 F3      [19] 2597 	ld	h,-13 (ix)
   0DC8 23            [ 6] 2598 	inc	hl
   0DC9 7E            [ 7] 2599 	ld	a,(hl)
   0DCA 12            [ 7] 2600 	ld	(de),a
                           2601 ;main.c:297: f[i][j].val = _nueva[i][j].val;
   0DCB DD 5E FE      [19] 2602 	ld	e,-2 (ix)
   0DCE DD 56 FF      [19] 2603 	ld	d,-1 (ix)
   0DD1 13            [ 6] 2604 	inc	de
   0DD2 13            [ 6] 2605 	inc	de
   0DD3 DD 6E F2      [19] 2606 	ld	l,-14 (ix)
   0DD6 DD 66 F3      [19] 2607 	ld	h,-13 (ix)
   0DD9 23            [ 6] 2608 	inc	hl
   0DDA 23            [ 6] 2609 	inc	hl
   0DDB 7E            [ 7] 2610 	ld	a,(hl)
   0DDC 12            [ 7] 2611 	ld	(de),a
                           2612 ;main.c:293: for(j=0;j<3;j++)
   0DDD DD 7E FC      [19] 2613 	ld	a,-4 (ix)
   0DE0 C6 03         [ 7] 2614 	add	a, #0x03
   0DE2 DD 77 FC      [19] 2615 	ld	-4 (ix),a
   0DE5 DD 7E FD      [19] 2616 	ld	a,-3 (ix)
   0DE8 CE 00         [ 7] 2617 	adc	a, #0x00
   0DEA DD 77 FD      [19] 2618 	ld	-3 (ix),a
   0DED DD 34 F0      [23] 2619 	inc	-16 (ix)
   0DF0 20 03         [12] 2620 	jr	NZ,00179$
   0DF2 DD 34 F1      [23] 2621 	inc	-15 (ix)
   0DF5                    2622 00179$:
   0DF5 DD 7E F0      [19] 2623 	ld	a,-16 (ix)
   0DF8 D6 03         [ 7] 2624 	sub	a, #0x03
   0DFA DD 7E F1      [19] 2625 	ld	a,-15 (ix)
   0DFD 17            [ 4] 2626 	rla
   0DFE 3F            [ 4] 2627 	ccf
   0DFF 1F            [ 4] 2628 	rra
   0E00 DE 80         [ 7] 2629 	sbc	a, #0x80
   0E02 38 85         [12] 2630 	jr	C,00117$
                           2631 ;main.c:291: for(i=0;i<3;i++)
   0E04 DD 7E F4      [19] 2632 	ld	a,-12 (ix)
   0E07 C6 09         [ 7] 2633 	add	a, #0x09
   0E09 DD 77 F4      [19] 2634 	ld	-12 (ix),a
   0E0C DD 7E F5      [19] 2635 	ld	a,-11 (ix)
   0E0F CE 00         [ 7] 2636 	adc	a, #0x00
   0E11 DD 77 F5      [19] 2637 	ld	-11 (ix),a
   0E14 DD 34 D3      [23] 2638 	inc	-45 (ix)
   0E17 20 03         [12] 2639 	jr	NZ,00180$
   0E19 DD 34 D4      [23] 2640 	inc	-44 (ix)
   0E1C                    2641 00180$:
   0E1C DD 7E D3      [19] 2642 	ld	a,-45 (ix)
   0E1F D6 03         [ 7] 2643 	sub	a, #0x03
   0E21 DD 7E D4      [19] 2644 	ld	a,-44 (ix)
   0E24 17            [ 4] 2645 	rla
   0E25 3F            [ 4] 2646 	ccf
   0E26 1F            [ 4] 2647 	rra
   0E27 DE 80         [ 7] 2648 	sbc	a, #0x80
   0E29 DAr55r0D      [10] 2649 	jp	C,00132$
   0E2C                    2650 00121$:
   0E2C DD F9         [10] 2651 	ld	sp, ix
   0E2E DD E1         [14] 2652 	pop	ix
   0E30 C9            [10] 2653 	ret
                           2654 ;main.c:312: void giraIzquierda(pixel f[3][3])
                           2655 ;	---------------------------------
                           2656 ; Function giraIzquierda
                           2657 ; ---------------------------------
   0E31                    2658 _giraIzquierda::
   0E31 DD E5         [15] 2659 	push	ix
   0E33 DD 21 00 00   [14] 2660 	ld	ix,#0
   0E37 DD 39         [15] 2661 	add	ix,sp
   0E39 21 D3 FF      [10] 2662 	ld	hl,#-45
   0E3C 39            [11] 2663 	add	hl,sp
   0E3D F9            [ 6] 2664 	ld	sp,hl
                           2665 ;main.c:316: borraFigura(f);
   0E3E DD 6E 04      [19] 2666 	ld	l,4 (ix)
   0E41 DD 66 05      [19] 2667 	ld	h,5 (ix)
   0E44 E5            [11] 2668 	push	hl
   0E45 CDrA4r06      [17] 2669 	call	_borraFigura
   0E48 F1            [10] 2670 	pop	af
                           2671 ;main.c:317: for(i=0;i<3;i++)
   0E49 21 02 00      [10] 2672 	ld	hl,#0x0002
   0E4C 39            [11] 2673 	add	hl,sp
   0E4D DD 75 F4      [19] 2674 	ld	-12 (ix),l
   0E50 DD 74 F5      [19] 2675 	ld	-11 (ix),h
   0E53 21 00 00      [10] 2676 	ld	hl,#0x0000
   0E56 E3            [19] 2677 	ex	(sp), hl
   0E57 DD 36 F2 00   [19] 2678 	ld	-14 (ix),#0x00
   0E5B DD 36 F3 00   [19] 2679 	ld	-13 (ix),#0x00
                           2680 ;main.c:319: for(j=0;j<3;j++)
   0E5F                    2681 00123$:
   0E5F DD 7E F4      [19] 2682 	ld	a,-12 (ix)
   0E62 DD 86 F2      [19] 2683 	add	a, -14 (ix)
   0E65 DD 77 F8      [19] 2684 	ld	-8 (ix),a
   0E68 DD 7E F5      [19] 2685 	ld	a,-11 (ix)
   0E6B DD 8E F3      [19] 2686 	adc	a, -13 (ix)
   0E6E DD 77 F9      [19] 2687 	ld	-7 (ix),a
   0E71 DD 7E 04      [19] 2688 	ld	a,4 (ix)
   0E74 DD 86 F2      [19] 2689 	add	a, -14 (ix)
   0E77 DD 77 F6      [19] 2690 	ld	-10 (ix),a
   0E7A DD 7E 05      [19] 2691 	ld	a,5 (ix)
   0E7D DD 8E F3      [19] 2692 	adc	a, -13 (ix)
   0E80 DD 77 F7      [19] 2693 	ld	-9 (ix),a
   0E83 DD 36 F0 00   [19] 2694 	ld	-16 (ix),#0x00
   0E87 DD 36 F1 00   [19] 2695 	ld	-15 (ix),#0x00
   0E8B DD 36 FE 00   [19] 2696 	ld	-2 (ix),#0x00
   0E8F DD 36 FF 00   [19] 2697 	ld	-1 (ix),#0x00
   0E93 DD 36 FC 00   [19] 2698 	ld	-4 (ix),#0x00
   0E97 DD 36 FD 00   [19] 2699 	ld	-3 (ix),#0x00
   0E9B                    2700 00109$:
                           2701 ;main.c:321: _nueva[i][j].x=f[i][j].x;
   0E9B DD 7E F8      [19] 2702 	ld	a,-8 (ix)
   0E9E DD 86 FE      [19] 2703 	add	a, -2 (ix)
   0EA1 5F            [ 4] 2704 	ld	e,a
   0EA2 DD 7E F9      [19] 2705 	ld	a,-7 (ix)
   0EA5 DD 8E FF      [19] 2706 	adc	a, -1 (ix)
   0EA8 57            [ 4] 2707 	ld	d,a
   0EA9 DD 7E F6      [19] 2708 	ld	a,-10 (ix)
   0EAC DD 86 FE      [19] 2709 	add	a, -2 (ix)
   0EAF 4F            [ 4] 2710 	ld	c,a
   0EB0 DD 7E F7      [19] 2711 	ld	a,-9 (ix)
   0EB3 DD 8E FF      [19] 2712 	adc	a, -1 (ix)
   0EB6 47            [ 4] 2713 	ld	b,a
   0EB7 0A            [ 7] 2714 	ld	a,(bc)
   0EB8 12            [ 7] 2715 	ld	(de),a
                           2716 ;main.c:322: _nueva[i][j].y=f[i][j].y;
   0EB9 D5            [11] 2717 	push	de
   0EBA FD E1         [14] 2718 	pop	iy
   0EBC FD 23         [10] 2719 	inc	iy
   0EBE 69            [ 4] 2720 	ld	l, c
   0EBF 60            [ 4] 2721 	ld	h, b
   0EC0 23            [ 6] 2722 	inc	hl
   0EC1 7E            [ 7] 2723 	ld	a,(hl)
   0EC2 FD 77 00      [19] 2724 	ld	0 (iy), a
                           2725 ;main.c:323: _nueva[i][j].val=f[j][2-i].val;
   0EC5 13            [ 6] 2726 	inc	de
   0EC6 13            [ 6] 2727 	inc	de
   0EC7 DD 7E 04      [19] 2728 	ld	a,4 (ix)
   0ECA DD 86 FC      [19] 2729 	add	a, -4 (ix)
   0ECD 4F            [ 4] 2730 	ld	c,a
   0ECE DD 7E 05      [19] 2731 	ld	a,5 (ix)
   0ED1 DD 8E FD      [19] 2732 	adc	a, -3 (ix)
   0ED4 47            [ 4] 2733 	ld	b,a
   0ED5 DD 66 D3      [19] 2734 	ld	h,-45 (ix)
   0ED8 3E 02         [ 7] 2735 	ld	a,#0x02
   0EDA 94            [ 4] 2736 	sub	a, h
   0EDB D5            [11] 2737 	push	de
   0EDC 5F            [ 4] 2738 	ld	e,a
   0EDD 87            [ 4] 2739 	add	a, a
   0EDE 83            [ 4] 2740 	add	a, e
   0EDF D1            [10] 2741 	pop	de
   0EE0 6F            [ 4] 2742 	ld	l, a
   0EE1 26 00         [ 7] 2743 	ld	h,#0x00
   0EE3 09            [11] 2744 	add	hl,bc
   0EE4 23            [ 6] 2745 	inc	hl
   0EE5 23            [ 6] 2746 	inc	hl
   0EE6 7E            [ 7] 2747 	ld	a,(hl)
   0EE7 12            [ 7] 2748 	ld	(de),a
                           2749 ;main.c:319: for(j=0;j<3;j++)
   0EE8 DD 7E FE      [19] 2750 	ld	a,-2 (ix)
   0EEB C6 03         [ 7] 2751 	add	a, #0x03
   0EED DD 77 FE      [19] 2752 	ld	-2 (ix),a
   0EF0 DD 7E FF      [19] 2753 	ld	a,-1 (ix)
   0EF3 CE 00         [ 7] 2754 	adc	a, #0x00
   0EF5 DD 77 FF      [19] 2755 	ld	-1 (ix),a
   0EF8 DD 7E FC      [19] 2756 	ld	a,-4 (ix)
   0EFB C6 09         [ 7] 2757 	add	a, #0x09
   0EFD DD 77 FC      [19] 2758 	ld	-4 (ix),a
   0F00 DD 7E FD      [19] 2759 	ld	a,-3 (ix)
   0F03 CE 00         [ 7] 2760 	adc	a, #0x00
   0F05 DD 77 FD      [19] 2761 	ld	-3 (ix),a
   0F08 DD 34 F0      [23] 2762 	inc	-16 (ix)
   0F0B 20 03         [12] 2763 	jr	NZ,00175$
   0F0D DD 34 F1      [23] 2764 	inc	-15 (ix)
   0F10                    2765 00175$:
   0F10 DD 7E F0      [19] 2766 	ld	a,-16 (ix)
   0F13 D6 03         [ 7] 2767 	sub	a, #0x03
   0F15 DD 7E F1      [19] 2768 	ld	a,-15 (ix)
   0F18 17            [ 4] 2769 	rla
   0F19 3F            [ 4] 2770 	ccf
   0F1A 1F            [ 4] 2771 	rra
   0F1B DE 80         [ 7] 2772 	sbc	a, #0x80
   0F1D DAr9Br0E      [10] 2773 	jp	C,00109$
                           2774 ;main.c:317: for(i=0;i<3;i++)
   0F20 DD 7E F2      [19] 2775 	ld	a,-14 (ix)
   0F23 C6 09         [ 7] 2776 	add	a, #0x09
   0F25 DD 77 F2      [19] 2777 	ld	-14 (ix),a
   0F28 DD 7E F3      [19] 2778 	ld	a,-13 (ix)
   0F2B CE 00         [ 7] 2779 	adc	a, #0x00
   0F2D DD 77 F3      [19] 2780 	ld	-13 (ix),a
   0F30 DD 34 D3      [23] 2781 	inc	-45 (ix)
   0F33 20 03         [12] 2782 	jr	NZ,00176$
   0F35 DD 34 D4      [23] 2783 	inc	-44 (ix)
   0F38                    2784 00176$:
   0F38 DD 7E D3      [19] 2785 	ld	a,-45 (ix)
   0F3B D6 03         [ 7] 2786 	sub	a, #0x03
   0F3D DD 7E D4      [19] 2787 	ld	a,-44 (ix)
   0F40 17            [ 4] 2788 	rla
   0F41 3F            [ 4] 2789 	ccf
   0F42 1F            [ 4] 2790 	rra
   0F43 DE 80         [ 7] 2791 	sbc	a, #0x80
   0F45 DAr5Fr0E      [10] 2792 	jp	C,00123$
                           2793 ;main.c:326: for(i=0;i<3;i++)
   0F48 21 00 00      [10] 2794 	ld	hl,#0x0000
   0F4B E3            [19] 2795 	ex	(sp), hl
   0F4C DD 36 FC 00   [19] 2796 	ld	-4 (ix),#0x00
   0F50 DD 36 FD 00   [19] 2797 	ld	-3 (ix),#0x00
                           2798 ;main.c:328: for(j=0;j<3;j++)
   0F54                    2799 00128$:
   0F54 DD 7E F4      [19] 2800 	ld	a,-12 (ix)
   0F57 DD 86 FC      [19] 2801 	add	a, -4 (ix)
   0F5A DD 77 FE      [19] 2802 	ld	-2 (ix),a
   0F5D DD 7E F5      [19] 2803 	ld	a,-11 (ix)
   0F60 DD 8E FD      [19] 2804 	adc	a, -3 (ix)
   0F63 DD 77 FF      [19] 2805 	ld	-1 (ix),a
   0F66 DD 36 F0 00   [19] 2806 	ld	-16 (ix),#0x00
   0F6A DD 36 F1 00   [19] 2807 	ld	-15 (ix),#0x00
   0F6E DD 36 F6 00   [19] 2808 	ld	-10 (ix),#0x00
   0F72 DD 36 F7 00   [19] 2809 	ld	-9 (ix),#0x00
   0F76                    2810 00113$:
                           2811 ;main.c:330: if(max7219ReadPixel(_nueva[i][j].x,_nueva[i][j].y) != 0) // el bit esta ocupado en la malla
   0F76 DD 7E FE      [19] 2812 	ld	a,-2 (ix)
   0F79 DD 86 F6      [19] 2813 	add	a, -10 (ix)
   0F7C 5F            [ 4] 2814 	ld	e,a
   0F7D DD 7E FF      [19] 2815 	ld	a,-1 (ix)
   0F80 DD 8E F7      [19] 2816 	adc	a, -9 (ix)
   0F83 57            [ 4] 2817 	ld	d,a
   0F84 6B            [ 4] 2818 	ld	l, e
   0F85 62            [ 4] 2819 	ld	h, d
   0F86 23            [ 6] 2820 	inc	hl
   0F87 46            [ 7] 2821 	ld	b,(hl)
   0F88 1A            [ 7] 2822 	ld	a,(de)
   0F89 C5            [11] 2823 	push	bc
   0F8A 33            [ 6] 2824 	inc	sp
   0F8B F5            [11] 2825 	push	af
   0F8C 33            [ 6] 2826 	inc	sp
   0F8D CDr6Br05      [17] 2827 	call	_max7219ReadPixel
   0F90 F1            [10] 2828 	pop	af
   0F91 4D            [ 4] 2829 	ld	c,l
   0F92 79            [ 4] 2830 	ld	a,c
   0F93 B7            [ 4] 2831 	or	a, a
                           2832 ;main.c:332: return;
   0F94 C2rC9r10      [10] 2833 	jp	NZ,00121$
                           2834 ;main.c:328: for(j=0;j<3;j++)
   0F97 DD 7E F6      [19] 2835 	ld	a,-10 (ix)
   0F9A C6 03         [ 7] 2836 	add	a, #0x03
   0F9C DD 77 F6      [19] 2837 	ld	-10 (ix),a
   0F9F DD 7E F7      [19] 2838 	ld	a,-9 (ix)
   0FA2 CE 00         [ 7] 2839 	adc	a, #0x00
   0FA4 DD 77 F7      [19] 2840 	ld	-9 (ix),a
   0FA7 DD 34 F0      [23] 2841 	inc	-16 (ix)
   0FAA 20 03         [12] 2842 	jr	NZ,00177$
   0FAC DD 34 F1      [23] 2843 	inc	-15 (ix)
   0FAF                    2844 00177$:
   0FAF DD 7E F0      [19] 2845 	ld	a,-16 (ix)
   0FB2 D6 03         [ 7] 2846 	sub	a, #0x03
   0FB4 DD 7E F1      [19] 2847 	ld	a,-15 (ix)
   0FB7 17            [ 4] 2848 	rla
   0FB8 3F            [ 4] 2849 	ccf
   0FB9 1F            [ 4] 2850 	rra
   0FBA DE 80         [ 7] 2851 	sbc	a, #0x80
   0FBC 38 B8         [12] 2852 	jr	C,00113$
                           2853 ;main.c:326: for(i=0;i<3;i++)
   0FBE DD 7E FC      [19] 2854 	ld	a,-4 (ix)
   0FC1 C6 09         [ 7] 2855 	add	a, #0x09
   0FC3 DD 77 FC      [19] 2856 	ld	-4 (ix),a
   0FC6 DD 7E FD      [19] 2857 	ld	a,-3 (ix)
   0FC9 CE 00         [ 7] 2858 	adc	a, #0x00
   0FCB DD 77 FD      [19] 2859 	ld	-3 (ix),a
   0FCE DD 34 D3      [23] 2860 	inc	-45 (ix)
   0FD1 20 03         [12] 2861 	jr	NZ,00178$
   0FD3 DD 34 D4      [23] 2862 	inc	-44 (ix)
   0FD6                    2863 00178$:
   0FD6 DD 7E D3      [19] 2864 	ld	a,-45 (ix)
   0FD9 D6 03         [ 7] 2865 	sub	a, #0x03
   0FDB DD 7E D4      [19] 2866 	ld	a,-44 (ix)
   0FDE 17            [ 4] 2867 	rla
   0FDF 3F            [ 4] 2868 	ccf
   0FE0 1F            [ 4] 2869 	rra
   0FE1 DE 80         [ 7] 2870 	sbc	a, #0x80
   0FE3 DAr54r0F      [10] 2871 	jp	C,00128$
                           2872 ;main.c:336: for(i=0;i<3;i++)
   0FE6 21 00 00      [10] 2873 	ld	hl,#0x0000
   0FE9 E3            [19] 2874 	ex	(sp), hl
   0FEA DD 36 FC 00   [19] 2875 	ld	-4 (ix),#0x00
   0FEE DD 36 FD 00   [19] 2876 	ld	-3 (ix),#0x00
                           2877 ;main.c:338: for(j=0;j<3;j++)
   0FF2                    2878 00132$:
   0FF2 DD 7E 04      [19] 2879 	ld	a,4 (ix)
   0FF5 DD 86 FC      [19] 2880 	add	a, -4 (ix)
   0FF8 DD 77 FE      [19] 2881 	ld	-2 (ix),a
   0FFB DD 7E 05      [19] 2882 	ld	a,5 (ix)
   0FFE DD 8E FD      [19] 2883 	adc	a, -3 (ix)
   1001 DD 77 FF      [19] 2884 	ld	-1 (ix),a
   1004 DD 7E F4      [19] 2885 	ld	a,-12 (ix)
   1007 DD 86 FC      [19] 2886 	add	a, -4 (ix)
   100A DD 77 F6      [19] 2887 	ld	-10 (ix),a
   100D DD 7E F5      [19] 2888 	ld	a,-11 (ix)
   1010 DD 8E FD      [19] 2889 	adc	a, -3 (ix)
   1013 DD 77 F7      [19] 2890 	ld	-9 (ix),a
   1016 DD 36 F0 00   [19] 2891 	ld	-16 (ix),#0x00
   101A DD 36 F1 00   [19] 2892 	ld	-15 (ix),#0x00
   101E DD 36 F8 00   [19] 2893 	ld	-8 (ix),#0x00
   1022 DD 36 F9 00   [19] 2894 	ld	-7 (ix),#0x00
   1026                    2895 00117$:
                           2896 ;main.c:340: f[i][j].x = _nueva[i][j].x;
   1026 DD 7E FE      [19] 2897 	ld	a,-2 (ix)
   1029 DD 86 F8      [19] 2898 	add	a, -8 (ix)
   102C DD 77 F2      [19] 2899 	ld	-14 (ix),a
   102F DD 7E FF      [19] 2900 	ld	a,-1 (ix)
   1032 DD 8E F9      [19] 2901 	adc	a, -7 (ix)
   1035 DD 77 F3      [19] 2902 	ld	-13 (ix),a
   1038 DD 7E F6      [19] 2903 	ld	a,-10 (ix)
   103B DD 86 F8      [19] 2904 	add	a, -8 (ix)
   103E DD 77 FA      [19] 2905 	ld	-6 (ix),a
   1041 DD 7E F7      [19] 2906 	ld	a,-9 (ix)
   1044 DD 8E F9      [19] 2907 	adc	a, -7 (ix)
   1047 DD 77 FB      [19] 2908 	ld	-5 (ix),a
   104A DD 6E FA      [19] 2909 	ld	l,-6 (ix)
   104D DD 66 FB      [19] 2910 	ld	h,-5 (ix)
   1050 7E            [ 7] 2911 	ld	a,(hl)
   1051 DD 6E F2      [19] 2912 	ld	l,-14 (ix)
   1054 DD 66 F3      [19] 2913 	ld	h,-13 (ix)
   1057 77            [ 7] 2914 	ld	(hl),a
                           2915 ;main.c:341: f[i][j].y = _nueva[i][j].y;
   1058 DD 5E F2      [19] 2916 	ld	e,-14 (ix)
   105B DD 56 F3      [19] 2917 	ld	d,-13 (ix)
   105E 13            [ 6] 2918 	inc	de
   105F DD 6E FA      [19] 2919 	ld	l,-6 (ix)
   1062 DD 66 FB      [19] 2920 	ld	h,-5 (ix)
   1065 23            [ 6] 2921 	inc	hl
   1066 7E            [ 7] 2922 	ld	a,(hl)
   1067 12            [ 7] 2923 	ld	(de),a
                           2924 ;main.c:342: f[i][j].val = _nueva[i][j].val;
   1068 DD 5E F2      [19] 2925 	ld	e,-14 (ix)
   106B DD 56 F3      [19] 2926 	ld	d,-13 (ix)
   106E 13            [ 6] 2927 	inc	de
   106F 13            [ 6] 2928 	inc	de
   1070 DD 6E FA      [19] 2929 	ld	l,-6 (ix)
   1073 DD 66 FB      [19] 2930 	ld	h,-5 (ix)
   1076 23            [ 6] 2931 	inc	hl
   1077 23            [ 6] 2932 	inc	hl
   1078 7E            [ 7] 2933 	ld	a,(hl)
   1079 12            [ 7] 2934 	ld	(de),a
                           2935 ;main.c:338: for(j=0;j<3;j++)
   107A DD 7E F8      [19] 2936 	ld	a,-8 (ix)
   107D C6 03         [ 7] 2937 	add	a, #0x03
   107F DD 77 F8      [19] 2938 	ld	-8 (ix),a
   1082 DD 7E F9      [19] 2939 	ld	a,-7 (ix)
   1085 CE 00         [ 7] 2940 	adc	a, #0x00
   1087 DD 77 F9      [19] 2941 	ld	-7 (ix),a
   108A DD 34 F0      [23] 2942 	inc	-16 (ix)
   108D 20 03         [12] 2943 	jr	NZ,00179$
   108F DD 34 F1      [23] 2944 	inc	-15 (ix)
   1092                    2945 00179$:
   1092 DD 7E F0      [19] 2946 	ld	a,-16 (ix)
   1095 D6 03         [ 7] 2947 	sub	a, #0x03
   1097 DD 7E F1      [19] 2948 	ld	a,-15 (ix)
   109A 17            [ 4] 2949 	rla
   109B 3F            [ 4] 2950 	ccf
   109C 1F            [ 4] 2951 	rra
   109D DE 80         [ 7] 2952 	sbc	a, #0x80
   109F 38 85         [12] 2953 	jr	C,00117$
                           2954 ;main.c:336: for(i=0;i<3;i++)
   10A1 DD 7E FC      [19] 2955 	ld	a,-4 (ix)
   10A4 C6 09         [ 7] 2956 	add	a, #0x09
   10A6 DD 77 FC      [19] 2957 	ld	-4 (ix),a
   10A9 DD 7E FD      [19] 2958 	ld	a,-3 (ix)
   10AC CE 00         [ 7] 2959 	adc	a, #0x00
   10AE DD 77 FD      [19] 2960 	ld	-3 (ix),a
   10B1 DD 34 D3      [23] 2961 	inc	-45 (ix)
   10B4 20 03         [12] 2962 	jr	NZ,00180$
   10B6 DD 34 D4      [23] 2963 	inc	-44 (ix)
   10B9                    2964 00180$:
   10B9 DD 7E D3      [19] 2965 	ld	a,-45 (ix)
   10BC D6 03         [ 7] 2966 	sub	a, #0x03
   10BE DD 7E D4      [19] 2967 	ld	a,-44 (ix)
   10C1 17            [ 4] 2968 	rla
   10C2 3F            [ 4] 2969 	ccf
   10C3 1F            [ 4] 2970 	rra
   10C4 DE 80         [ 7] 2971 	sbc	a, #0x80
   10C6 DArF2r0F      [10] 2972 	jp	C,00132$
   10C9                    2973 00121$:
   10C9 DD F9         [10] 2974 	ld	sp, ix
   10CB DD E1         [14] 2975 	pop	ix
   10CD C9            [10] 2976 	ret
                           2977 ;main.c:403: void mueveDerecha(pixel f[3][3])
                           2978 ;	---------------------------------
                           2979 ; Function mueveDerecha
                           2980 ; ---------------------------------
   10CE                    2981 _mueveDerecha::
   10CE DD E5         [15] 2982 	push	ix
   10D0 DD 21 00 00   [14] 2983 	ld	ix,#0
   10D4 DD 39         [15] 2984 	add	ix,sp
   10D6 21 EB FF      [10] 2985 	ld	hl,#-21
   10D9 39            [11] 2986 	add	hl,sp
   10DA F9            [ 6] 2987 	ld	sp,hl
                           2988 ;main.c:406: borraFigura(f);
   10DB DD 6E 04      [19] 2989 	ld	l,4 (ix)
   10DE DD 66 05      [19] 2990 	ld	h,5 (ix)
   10E1 E5            [11] 2991 	push	hl
   10E2 CDrA4r06      [17] 2992 	call	_borraFigura
   10E5 F1            [10] 2993 	pop	af
                           2994 ;main.c:409: for(i=0;i<3;i++)
   10E6 21 00 00      [10] 2995 	ld	hl,#0x0000
   10E9 E3            [19] 2996 	ex	(sp), hl
   10EA DD 36 F9 00   [19] 2997 	ld	-7 (ix),#0x00
   10EE DD 36 FA 00   [19] 2998 	ld	-6 (ix),#0x00
                           2999 ;main.c:411: for(j=0;j<3;j++)
   10F2                    3000 00143$:
   10F2 DD 7E 04      [19] 3001 	ld	a,4 (ix)
   10F5 DD 86 F9      [19] 3002 	add	a, -7 (ix)
   10F8 DD 77 F7      [19] 3003 	ld	-9 (ix),a
   10FB DD 7E 05      [19] 3004 	ld	a,5 (ix)
   10FE DD 8E FA      [19] 3005 	adc	a, -6 (ix)
   1101 DD 77 F8      [19] 3006 	ld	-8 (ix),a
   1104 DD 36 ED 00   [19] 3007 	ld	-19 (ix),#0x00
   1108 DD 36 EE 00   [19] 3008 	ld	-18 (ix),#0x00
   110C DD 36 F5 00   [19] 3009 	ld	-11 (ix),#0x00
   1110 DD 36 F6 00   [19] 3010 	ld	-10 (ix),#0x00
   1114                    3011 00123$:
                           3012 ;main.c:413: if(f[i][j].val==1)
   1114 DD 7E F7      [19] 3013 	ld	a,-9 (ix)
   1117 DD 86 F5      [19] 3014 	add	a, -11 (ix)
   111A DD 77 F3      [19] 3015 	ld	-13 (ix),a
   111D DD 7E F8      [19] 3016 	ld	a,-8 (ix)
   1120 DD 8E F6      [19] 3017 	adc	a, -10 (ix)
   1123 DD 77 F4      [19] 3018 	ld	-12 (ix),a
   1126 DD 6E F3      [19] 3019 	ld	l,-13 (ix)
   1129 DD 66 F4      [19] 3020 	ld	h,-12 (ix)
   112C 23            [ 6] 3021 	inc	hl
   112D 23            [ 6] 3022 	inc	hl
   112E 7E            [ 7] 3023 	ld	a,(hl)
   112F 3D            [ 4] 3024 	dec	a
   1130 20 17         [12] 3025 	jr	NZ,00124$
                           3026 ;main.c:415: if(f[i][j].y+1 >= 9) // se sale de la malla
   1132 DD 6E F3      [19] 3027 	ld	l,-13 (ix)
   1135 DD 66 F4      [19] 3028 	ld	h,-12 (ix)
   1138 23            [ 6] 3029 	inc	hl
   1139 5E            [ 7] 3030 	ld	e,(hl)
   113A 16 00         [ 7] 3031 	ld	d,#0x00
   113C 13            [ 6] 3032 	inc	de
   113D 7B            [ 4] 3033 	ld	a, e
   113E D6 09         [ 7] 3034 	sub	a, #0x09
   1140 7A            [ 4] 3035 	ld	a,d
   1141 17            [ 4] 3036 	rla
   1142 3F            [ 4] 3037 	ccf
   1143 1F            [ 4] 3038 	rra
   1144 DE 80         [ 7] 3039 	sbc	a, #0x80
                           3040 ;main.c:417: return; // no puede moverse la figura a la derecha
   1146 D2r07r14      [10] 3041 	jp	NC,00139$
   1149                    3042 00124$:
                           3043 ;main.c:411: for(j=0;j<3;j++)
   1149 DD 7E F5      [19] 3044 	ld	a,-11 (ix)
   114C C6 03         [ 7] 3045 	add	a, #0x03
   114E DD 77 F5      [19] 3046 	ld	-11 (ix),a
   1151 DD 7E F6      [19] 3047 	ld	a,-10 (ix)
   1154 CE 00         [ 7] 3048 	adc	a, #0x00
   1156 DD 77 F6      [19] 3049 	ld	-10 (ix),a
   1159 DD 34 ED      [23] 3050 	inc	-19 (ix)
   115C 20 03         [12] 3051 	jr	NZ,00227$
   115E DD 34 EE      [23] 3052 	inc	-18 (ix)
   1161                    3053 00227$:
   1161 DD 7E ED      [19] 3054 	ld	a,-19 (ix)
   1164 D6 03         [ 7] 3055 	sub	a, #0x03
   1166 DD 7E EE      [19] 3056 	ld	a,-18 (ix)
   1169 17            [ 4] 3057 	rla
   116A 3F            [ 4] 3058 	ccf
   116B 1F            [ 4] 3059 	rra
   116C DE 80         [ 7] 3060 	sbc	a, #0x80
   116E 38 A4         [12] 3061 	jr	C,00123$
                           3062 ;main.c:409: for(i=0;i<3;i++)
   1170 DD 7E F9      [19] 3063 	ld	a,-7 (ix)
   1173 C6 09         [ 7] 3064 	add	a, #0x09
   1175 DD 77 F9      [19] 3065 	ld	-7 (ix),a
   1178 DD 7E FA      [19] 3066 	ld	a,-6 (ix)
   117B CE 00         [ 7] 3067 	adc	a, #0x00
   117D DD 77 FA      [19] 3068 	ld	-6 (ix),a
   1180 DD 34 EB      [23] 3069 	inc	-21 (ix)
   1183 20 03         [12] 3070 	jr	NZ,00228$
   1185 DD 34 EC      [23] 3071 	inc	-20 (ix)
   1188                    3072 00228$:
   1188 DD 7E EB      [19] 3073 	ld	a,-21 (ix)
   118B D6 03         [ 7] 3074 	sub	a, #0x03
   118D DD 7E EC      [19] 3075 	ld	a,-20 (ix)
   1190 17            [ 4] 3076 	rla
   1191 3F            [ 4] 3077 	ccf
   1192 1F            [ 4] 3078 	rra
   1193 DE 80         [ 7] 3079 	sbc	a, #0x80
   1195 DArF2r10      [10] 3080 	jp	C,00143$
                           3081 ;main.c:422: for(i=0;i<3;i++)
   1198 21 00 00      [10] 3082 	ld	hl,#0x0000
   119B E3            [19] 3083 	ex	(sp), hl
   119C 11 00 00      [10] 3084 	ld	de,#0x0000
                           3085 ;main.c:424: for(j=2;j>=0;j--)
   119F                    3086 00149$:
   119F DD 7E 04      [19] 3087 	ld	a,4 (ix)
   11A2 83            [ 4] 3088 	add	a, e
   11A3 DD 77 F3      [19] 3089 	ld	-13 (ix),a
   11A6 DD 7E 05      [19] 3090 	ld	a,5 (ix)
   11A9 8A            [ 4] 3091 	adc	a, d
   11AA DD 77 F4      [19] 3092 	ld	-12 (ix),a
   11AD 01 02 00      [10] 3093 	ld	bc,#0x0002
   11B0 DD 36 F5 06   [19] 3094 	ld	-11 (ix),#0x06
   11B4 DD 36 F6 00   [19] 3095 	ld	-10 (ix),#0x00
   11B8                    3096 00127$:
                           3097 ;main.c:426: if(f[i][j].val==1)
   11B8 DD 7E F3      [19] 3098 	ld	a,-13 (ix)
   11BB DD 86 F5      [19] 3099 	add	a, -11 (ix)
   11BE DD 77 F7      [19] 3100 	ld	-9 (ix),a
   11C1 DD 7E F4      [19] 3101 	ld	a,-12 (ix)
   11C4 DD 8E F6      [19] 3102 	adc	a, -10 (ix)
   11C7 DD 77 F8      [19] 3103 	ld	-8 (ix),a
   11CA DD 6E F7      [19] 3104 	ld	l,-9 (ix)
   11CD DD 66 F8      [19] 3105 	ld	h,-8 (ix)
   11D0 23            [ 6] 3106 	inc	hl
   11D1 23            [ 6] 3107 	inc	hl
   11D2 7E            [ 7] 3108 	ld	a,(hl)
   11D3 3D            [ 4] 3109 	dec	a
   11D4 20 21         [12] 3110 	jr	NZ,00128$
                           3111 ;main.c:428: if(max7219ReadPixel(f[i][j].x,f[i][j].y+1) != 0) // el bit esta ocupado en la malla
   11D6 DD 6E F7      [19] 3112 	ld	l,-9 (ix)
   11D9 DD 66 F8      [19] 3113 	ld	h,-8 (ix)
   11DC 23            [ 6] 3114 	inc	hl
   11DD 7E            [ 7] 3115 	ld	a,(hl)
   11DE 3C            [ 4] 3116 	inc	a
   11DF DD 6E F7      [19] 3117 	ld	l,-9 (ix)
   11E2 DD 66 F8      [19] 3118 	ld	h,-8 (ix)
   11E5 46            [ 7] 3119 	ld	b,(hl)
   11E6 D5            [11] 3120 	push	de
   11E7 F5            [11] 3121 	push	af
   11E8 33            [ 6] 3122 	inc	sp
   11E9 C5            [11] 3123 	push	bc
   11EA 33            [ 6] 3124 	inc	sp
   11EB CDr6Br05      [17] 3125 	call	_max7219ReadPixel
   11EE F1            [10] 3126 	pop	af
   11EF 7D            [ 4] 3127 	ld	a,l
   11F0 D1            [10] 3128 	pop	de
   11F1 B7            [ 4] 3129 	or	a, a
   11F2 28 18         [12] 3130 	jr	Z,00130$
                           3131 ;main.c:430: return;
   11F4 C3r07r14      [10] 3132 	jp	00139$
                           3133 ;main.c:433: break;
   11F7                    3134 00128$:
                           3135 ;main.c:424: for(j=2;j>=0;j--)
   11F7 DD 7E F5      [19] 3136 	ld	a,-11 (ix)
   11FA C6 FD         [ 7] 3137 	add	a,#0xFD
   11FC DD 77 F5      [19] 3138 	ld	-11 (ix),a
   11FF DD 7E F6      [19] 3139 	ld	a,-10 (ix)
   1202 CE FF         [ 7] 3140 	adc	a,#0xFF
   1204 DD 77 F6      [19] 3141 	ld	-10 (ix),a
   1207 0B            [ 6] 3142 	dec	bc
   1208 CB 78         [ 8] 3143 	bit	7, b
   120A 28 AC         [12] 3144 	jr	Z,00127$
   120C                    3145 00130$:
                           3146 ;main.c:422: for(i=0;i<3;i++)
   120C 21 09 00      [10] 3147 	ld	hl,#0x0009
   120F 19            [11] 3148 	add	hl,de
   1210 EB            [ 4] 3149 	ex	de,hl
   1211 DD 34 EB      [23] 3150 	inc	-21 (ix)
   1214 20 03         [12] 3151 	jr	NZ,00231$
   1216 DD 34 EC      [23] 3152 	inc	-20 (ix)
   1219                    3153 00231$:
   1219 DD 7E EB      [19] 3154 	ld	a,-21 (ix)
   121C D6 03         [ 7] 3155 	sub	a, #0x03
   121E DD 7E EC      [19] 3156 	ld	a,-20 (ix)
   1221 17            [ 4] 3157 	rla
   1222 3F            [ 4] 3158 	ccf
   1223 1F            [ 4] 3159 	rra
   1224 DE 80         [ 7] 3160 	sbc	a, #0x80
   1226 DAr9Fr11      [10] 3161 	jp	C,00149$
                           3162 ;main.c:441: for(i=0;i<3;i++)
   1229 21 00 00      [10] 3163 	ld	hl,#0x0000
   122C E3            [19] 3164 	ex	(sp), hl
   122D DD 36 F3 00   [19] 3165 	ld	-13 (ix),#0x00
   1231 DD 36 F4 00   [19] 3166 	ld	-12 (ix),#0x00
                           3167 ;main.c:443: for(j=0;j<3;j++)
   1235                    3168 00152$:
   1235 DD 7E 04      [19] 3169 	ld	a,4 (ix)
   1238 DD 86 F3      [19] 3170 	add	a, -13 (ix)
   123B 4F            [ 4] 3171 	ld	c,a
   123C DD 7E 05      [19] 3172 	ld	a,5 (ix)
   123F DD 8E F4      [19] 3173 	adc	a, -12 (ix)
   1242 47            [ 4] 3174 	ld	b,a
   1243 11 00 00      [10] 3175 	ld	de,#0x0000
   1246 DD 36 F5 00   [19] 3176 	ld	-11 (ix),#0x00
   124A DD 36 F6 00   [19] 3177 	ld	-10 (ix),#0x00
   124E                    3178 00131$:
                           3179 ;main.c:445: f[i][j].y=f[i][j].y+1;
   124E 79            [ 4] 3180 	ld	a,c
   124F DD 86 F5      [19] 3181 	add	a, -11 (ix)
   1252 DD 77 F7      [19] 3182 	ld	-9 (ix),a
   1255 78            [ 4] 3183 	ld	a,b
   1256 DD 8E F6      [19] 3184 	adc	a, -10 (ix)
   1259 DD 77 F8      [19] 3185 	ld	-8 (ix),a
   125C DD 34 F7      [23] 3186 	inc	-9 (ix)
   125F 20 03         [12] 3187 	jr	NZ,00232$
   1261 DD 34 F8      [23] 3188 	inc	-8 (ix)
   1264                    3189 00232$:
   1264 DD 6E F7      [19] 3190 	ld	l,-9 (ix)
   1267 DD 66 F8      [19] 3191 	ld	h,-8 (ix)
   126A 34            [11] 3192 	inc	(hl)
                           3193 ;main.c:443: for(j=0;j<3;j++)
   126B DD 7E F5      [19] 3194 	ld	a,-11 (ix)
   126E C6 03         [ 7] 3195 	add	a, #0x03
   1270 DD 77 F5      [19] 3196 	ld	-11 (ix),a
   1273 DD 7E F6      [19] 3197 	ld	a,-10 (ix)
   1276 CE 00         [ 7] 3198 	adc	a, #0x00
   1278 DD 77 F6      [19] 3199 	ld	-10 (ix),a
   127B 13            [ 6] 3200 	inc	de
   127C 7B            [ 4] 3201 	ld	a,e
   127D D6 03         [ 7] 3202 	sub	a, #0x03
   127F 7A            [ 4] 3203 	ld	a,d
   1280 17            [ 4] 3204 	rla
   1281 3F            [ 4] 3205 	ccf
   1282 1F            [ 4] 3206 	rra
   1283 DE 80         [ 7] 3207 	sbc	a, #0x80
   1285 38 C7         [12] 3208 	jr	C,00131$
                           3209 ;main.c:441: for(i=0;i<3;i++)
   1287 DD 7E F3      [19] 3210 	ld	a,-13 (ix)
   128A C6 09         [ 7] 3211 	add	a, #0x09
   128C DD 77 F3      [19] 3212 	ld	-13 (ix),a
   128F DD 7E F4      [19] 3213 	ld	a,-12 (ix)
   1292 CE 00         [ 7] 3214 	adc	a, #0x00
   1294 DD 77 F4      [19] 3215 	ld	-12 (ix),a
   1297 DD 34 EB      [23] 3216 	inc	-21 (ix)
   129A 20 03         [12] 3217 	jr	NZ,00233$
   129C DD 34 EC      [23] 3218 	inc	-20 (ix)
   129F                    3219 00233$:
   129F DD 7E EB      [19] 3220 	ld	a,-21 (ix)
   12A2 D6 03         [ 7] 3221 	sub	a, #0x03
   12A4 DD 7E EC      [19] 3222 	ld	a,-20 (ix)
   12A7 17            [ 4] 3223 	rla
   12A8 3F            [ 4] 3224 	ccf
   12A9 1F            [ 4] 3225 	rra
   12AA DE 80         [ 7] 3226 	sbc	a, #0x80
   12AC 38 87         [12] 3227 	jr	C,00152$
                           3228 ;main.c:449: if(f[0][2].y > 8)
   12AE DD 7E 04      [19] 3229 	ld	a,4 (ix)
   12B1 DD 77 F3      [19] 3230 	ld	-13 (ix),a
   12B4 DD 7E 05      [19] 3231 	ld	a,5 (ix)
   12B7 DD 77 F4      [19] 3232 	ld	-12 (ix),a
   12BA DD 6E F3      [19] 3233 	ld	l,-13 (ix)
   12BD DD 66 F4      [19] 3234 	ld	h,-12 (ix)
   12C0 11 07 00      [10] 3235 	ld	de, #0x0007
   12C3 19            [11] 3236 	add	hl, de
   12C4 66            [ 7] 3237 	ld	h,(hl)
   12C5 3E 08         [ 7] 3238 	ld	a,#0x08
   12C7 94            [ 4] 3239 	sub	a, h
   12C8 D2r07r14      [10] 3240 	jp	NC,00139$
                           3241 ;main.c:452: for(i=0;i<3;i++)
   12CB 21 00 00      [10] 3242 	ld	hl,#0x0000
   12CE E3            [19] 3243 	ex	(sp), hl
   12CF DD 36 F5 00   [19] 3244 	ld	-11 (ix),#0x00
   12D3 DD 36 F6 00   [19] 3245 	ld	-10 (ix),#0x00
   12D7 DD 36 F7 00   [19] 3246 	ld	-9 (ix),#0x00
   12DB DD 36 F8 00   [19] 3247 	ld	-8 (ix),#0x00
                           3248 ;main.c:454: for(j=2;j>=0;j--)
   12DF                    3249 00158$:
   12DF DD 7E F5      [19] 3250 	ld	a,-11 (ix)
   12E2 DD 86 F3      [19] 3251 	add	a, -13 (ix)
   12E5 DD 77 F9      [19] 3252 	ld	-7 (ix),a
   12E8 DD 7E F6      [19] 3253 	ld	a,-10 (ix)
   12EB DD 8E F4      [19] 3254 	adc	a, -12 (ix)
   12EE DD 77 FA      [19] 3255 	ld	-6 (ix),a
   12F1 DD 7E F7      [19] 3256 	ld	a,-9 (ix)
   12F4 DD 86 F3      [19] 3257 	add	a, -13 (ix)
   12F7 DD 77 F1      [19] 3258 	ld	-15 (ix),a
   12FA DD 7E F8      [19] 3259 	ld	a,-8 (ix)
   12FD DD 8E F4      [19] 3260 	adc	a, -12 (ix)
   1300 DD 77 F2      [19] 3261 	ld	-14 (ix),a
   1303 DD 36 ED 02   [19] 3262 	ld	-19 (ix),#0x02
   1307 DD 36 EE 00   [19] 3263 	ld	-18 (ix),#0x00
   130B DD 36 EF 06   [19] 3264 	ld	-17 (ix),#0x06
   130F DD 36 F0 00   [19] 3265 	ld	-16 (ix),#0x00
   1313 DD 36 FE 06   [19] 3266 	ld	-2 (ix),#0x06
   1317 DD 36 FF 00   [19] 3267 	ld	-1 (ix),#0x00
   131B                    3268 00135$:
                           3269 ;main.c:456: if(j==0)
   131B DD 7E EE      [19] 3270 	ld	a,-18 (ix)
   131E DD B6 ED      [19] 3271 	or	a,-19 (ix)
   1321 20 1C         [12] 3272 	jr	NZ,00117$
                           3273 ;main.c:458: f[i][j].x=f[i][j].x;
   1323 DD 7E F1      [19] 3274 	ld	a,-15 (ix)
   1326 DD 86 FE      [19] 3275 	add	a, -2 (ix)
   1329 5F            [ 4] 3276 	ld	e,a
   132A DD 7E F2      [19] 3277 	ld	a,-14 (ix)
   132D DD 8E FF      [19] 3278 	adc	a, -1 (ix)
   1330 57            [ 4] 3279 	ld	d,a
   1331 1A            [ 7] 3280 	ld	a,(de)
   1332 12            [ 7] 3281 	ld	(de),a
                           3282 ;main.c:459: f[i][j].y=f[i][j].y-1;
   1333 6B            [ 4] 3283 	ld	l, e
   1334 62            [ 4] 3284 	ld	h, d
   1335 23            [ 6] 3285 	inc	hl
   1336 46            [ 7] 3286 	ld	b,(hl)
   1337 05            [ 4] 3287 	dec	b
   1338 70            [ 7] 3288 	ld	(hl),b
                           3289 ;main.c:460: f[i][j].val=0;  
   1339 13            [ 6] 3290 	inc	de
   133A 13            [ 6] 3291 	inc	de
   133B AF            [ 4] 3292 	xor	a, a
   133C 12            [ 7] 3293 	ld	(de),a
   133D 18 5C         [12] 3294 	jr	00136$
   133F                    3295 00117$:
                           3296 ;main.c:463: f[i][j].x=f[i][j-1].x;
   133F DD 7E F9      [19] 3297 	ld	a,-7 (ix)
   1342 DD 86 EF      [19] 3298 	add	a, -17 (ix)
   1345 DD 77 FC      [19] 3299 	ld	-4 (ix),a
   1348 DD 7E FA      [19] 3300 	ld	a,-6 (ix)
   134B DD 8E F0      [19] 3301 	adc	a, -16 (ix)
   134E DD 77 FD      [19] 3302 	ld	-3 (ix),a
   1351 DD 7E ED      [19] 3303 	ld	a,-19 (ix)
   1354 DD 77 FB      [19] 3304 	ld	-5 (ix),a
   1357 DD 35 FB      [23] 3305 	dec	-5 (ix)
   135A DD 6E FB      [19] 3306 	ld	l,-5 (ix)
   135D 4D            [ 4] 3307 	ld	c,l
   135E 29            [11] 3308 	add	hl, hl
   135F 09            [11] 3309 	add	hl, bc
   1360 DD 7E F9      [19] 3310 	ld	a,-7 (ix)
   1363 85            [ 4] 3311 	add	a, l
   1364 5F            [ 4] 3312 	ld	e,a
   1365 DD 7E FA      [19] 3313 	ld	a,-6 (ix)
   1368 CE 00         [ 7] 3314 	adc	a, #0x00
   136A 57            [ 4] 3315 	ld	d,a
   136B 1A            [ 7] 3316 	ld	a,(de)
   136C DD 6E FC      [19] 3317 	ld	l,-4 (ix)
   136F DD 66 FD      [19] 3318 	ld	h,-3 (ix)
   1372 77            [ 7] 3319 	ld	(hl),a
                           3320 ;main.c:464: f[i][j].y=f[i][j-1].y;
   1373 DD 4E FC      [19] 3321 	ld	c,-4 (ix)
   1376 DD 46 FD      [19] 3322 	ld	b,-3 (ix)
   1379 03            [ 6] 3323 	inc	bc
   137A 6B            [ 4] 3324 	ld	l, e
   137B 62            [ 4] 3325 	ld	h, d
   137C 23            [ 6] 3326 	inc	hl
   137D 7E            [ 7] 3327 	ld	a,(hl)
   137E 02            [ 7] 3328 	ld	(bc),a
                           3329 ;main.c:465: f[i][j].val=f[i][j-1].val;
   137F DD 7E FC      [19] 3330 	ld	a,-4 (ix)
   1382 C6 02         [ 7] 3331 	add	a, #0x02
   1384 DD 77 FC      [19] 3332 	ld	-4 (ix),a
   1387 DD 7E FD      [19] 3333 	ld	a,-3 (ix)
   138A CE 00         [ 7] 3334 	adc	a, #0x00
   138C DD 77 FD      [19] 3335 	ld	-3 (ix),a
   138F 6B            [ 4] 3336 	ld	l, e
   1390 62            [ 4] 3337 	ld	h, d
   1391 23            [ 6] 3338 	inc	hl
   1392 23            [ 6] 3339 	inc	hl
   1393 7E            [ 7] 3340 	ld	a,(hl)
   1394 DD 6E FC      [19] 3341 	ld	l,-4 (ix)
   1397 DD 66 FD      [19] 3342 	ld	h,-3 (ix)
   139A 77            [ 7] 3343 	ld	(hl),a
   139B                    3344 00136$:
                           3345 ;main.c:454: for(j=2;j>=0;j--)
   139B DD 7E EF      [19] 3346 	ld	a,-17 (ix)
   139E C6 FD         [ 7] 3347 	add	a,#0xFD
   13A0 DD 77 EF      [19] 3348 	ld	-17 (ix),a
   13A3 DD 7E F0      [19] 3349 	ld	a,-16 (ix)
   13A6 CE FF         [ 7] 3350 	adc	a,#0xFF
   13A8 DD 77 F0      [19] 3351 	ld	-16 (ix),a
   13AB DD 7E FE      [19] 3352 	ld	a,-2 (ix)
   13AE C6 FD         [ 7] 3353 	add	a,#0xFD
   13B0 DD 77 FE      [19] 3354 	ld	-2 (ix),a
   13B3 DD 7E FF      [19] 3355 	ld	a,-1 (ix)
   13B6 CE FF         [ 7] 3356 	adc	a,#0xFF
   13B8 DD 77 FF      [19] 3357 	ld	-1 (ix),a
   13BB DD 6E ED      [19] 3358 	ld	l,-19 (ix)
   13BE DD 66 EE      [19] 3359 	ld	h,-18 (ix)
   13C1 2B            [ 6] 3360 	dec	hl
   13C2 DD 75 ED      [19] 3361 	ld	-19 (ix),l
   13C5 DD 74 EE      [19] 3362 	ld	-18 (ix),h
   13C8 DD CB EE 7E   [20] 3363 	bit	7, -18 (ix)
   13CC CAr1Br13      [10] 3364 	jp	Z,00135$
                           3365 ;main.c:452: for(i=0;i<3;i++)
   13CF DD 7E F5      [19] 3366 	ld	a,-11 (ix)
   13D2 C6 09         [ 7] 3367 	add	a, #0x09
   13D4 DD 77 F5      [19] 3368 	ld	-11 (ix),a
   13D7 DD 7E F6      [19] 3369 	ld	a,-10 (ix)
   13DA CE 00         [ 7] 3370 	adc	a, #0x00
   13DC DD 77 F6      [19] 3371 	ld	-10 (ix),a
   13DF DD 7E F7      [19] 3372 	ld	a,-9 (ix)
   13E2 C6 09         [ 7] 3373 	add	a, #0x09
   13E4 DD 77 F7      [19] 3374 	ld	-9 (ix),a
   13E7 DD 7E F8      [19] 3375 	ld	a,-8 (ix)
   13EA CE 00         [ 7] 3376 	adc	a, #0x00
   13EC DD 77 F8      [19] 3377 	ld	-8 (ix),a
   13EF DD 34 EB      [23] 3378 	inc	-21 (ix)
   13F2 20 03         [12] 3379 	jr	NZ,00234$
   13F4 DD 34 EC      [23] 3380 	inc	-20 (ix)
   13F7                    3381 00234$:
   13F7 DD 7E EB      [19] 3382 	ld	a,-21 (ix)
   13FA D6 03         [ 7] 3383 	sub	a, #0x03
   13FC DD 7E EC      [19] 3384 	ld	a,-20 (ix)
   13FF 17            [ 4] 3385 	rla
   1400 3F            [ 4] 3386 	ccf
   1401 1F            [ 4] 3387 	rra
   1402 DE 80         [ 7] 3388 	sbc	a, #0x80
   1404 DArDFr12      [10] 3389 	jp	C,00158$
   1407                    3390 00139$:
   1407 DD F9         [10] 3391 	ld	sp, ix
   1409 DD E1         [14] 3392 	pop	ix
   140B C9            [10] 3393 	ret
                           3394 ;main.c:528: void mueveIzquierda(pixel f[3][3])
                           3395 ;	---------------------------------
                           3396 ; Function mueveIzquierda
                           3397 ; ---------------------------------
   140C                    3398 _mueveIzquierda::
   140C DD E5         [15] 3399 	push	ix
   140E DD 21 00 00   [14] 3400 	ld	ix,#0
   1412 DD 39         [15] 3401 	add	ix,sp
   1414 21 EB FF      [10] 3402 	ld	hl,#-21
   1417 39            [11] 3403 	add	hl,sp
   1418 F9            [ 6] 3404 	ld	sp,hl
                           3405 ;main.c:531: borraFigura(f);
   1419 DD 6E 04      [19] 3406 	ld	l,4 (ix)
   141C DD 66 05      [19] 3407 	ld	h,5 (ix)
   141F E5            [11] 3408 	push	hl
   1420 CDrA4r06      [17] 3409 	call	_borraFigura
   1423 F1            [10] 3410 	pop	af
                           3411 ;main.c:534: for(i=0;i<3;i++)
   1424 DD 36 ED 00   [19] 3412 	ld	-19 (ix),#0x00
   1428 DD 36 EE 00   [19] 3413 	ld	-18 (ix),#0x00
   142C DD 36 FC 00   [19] 3414 	ld	-4 (ix),#0x00
   1430 DD 36 FD 00   [19] 3415 	ld	-3 (ix),#0x00
                           3416 ;main.c:536: for(j=0;j<3;j++)
   1434                    3417 00143$:
   1434 DD 7E 04      [19] 3418 	ld	a,4 (ix)
   1437 DD 86 FC      [19] 3419 	add	a, -4 (ix)
   143A DD 77 FE      [19] 3420 	ld	-2 (ix),a
   143D DD 7E 05      [19] 3421 	ld	a,5 (ix)
   1440 DD 8E FD      [19] 3422 	adc	a, -3 (ix)
   1443 DD 77 FF      [19] 3423 	ld	-1 (ix),a
   1446 21 00 00      [10] 3424 	ld	hl,#0x0000
   1449 E3            [19] 3425 	ex	(sp), hl
   144A DD 36 FA 00   [19] 3426 	ld	-6 (ix),#0x00
   144E DD 36 FB 00   [19] 3427 	ld	-5 (ix),#0x00
   1452                    3428 00123$:
                           3429 ;main.c:538: if(f[i][j].val==1)
   1452 DD 7E FE      [19] 3430 	ld	a,-2 (ix)
   1455 DD 86 FA      [19] 3431 	add	a, -6 (ix)
   1458 DD 77 F8      [19] 3432 	ld	-8 (ix),a
   145B DD 7E FF      [19] 3433 	ld	a,-1 (ix)
   145E DD 8E FB      [19] 3434 	adc	a, -5 (ix)
   1461 DD 77 F9      [19] 3435 	ld	-7 (ix),a
   1464 DD 6E F8      [19] 3436 	ld	l,-8 (ix)
   1467 DD 66 F9      [19] 3437 	ld	h,-7 (ix)
   146A 23            [ 6] 3438 	inc	hl
   146B 23            [ 6] 3439 	inc	hl
   146C 7E            [ 7] 3440 	ld	a,(hl)
   146D 3D            [ 4] 3441 	dec	a
   146E 20 19         [12] 3442 	jr	NZ,00124$
                           3443 ;main.c:540: if(f[i][j].y-1 <= 0) // se sale de la malla
   1470 DD 6E F8      [19] 3444 	ld	l,-8 (ix)
   1473 DD 66 F9      [19] 3445 	ld	h,-7 (ix)
   1476 23            [ 6] 3446 	inc	hl
   1477 6E            [ 7] 3447 	ld	l,(hl)
   1478 26 00         [ 7] 3448 	ld	h,#0x00
   147A 2B            [ 6] 3449 	dec	hl
   147B AF            [ 4] 3450 	xor	a, a
   147C BD            [ 4] 3451 	cp	a, l
   147D 9C            [ 4] 3452 	sbc	a, h
   147E E2r83r14      [10] 3453 	jp	PO, 00227$
   1481 EE 80         [ 7] 3454 	xor	a, #0x80
   1483                    3455 00227$:
   1483 FAr89r14      [10] 3456 	jp	M,00124$
                           3457 ;main.c:542: return; // no puede moverse la figura a la Izquierda
   1486 C3r5Ar17      [10] 3458 	jp	00139$
   1489                    3459 00124$:
                           3460 ;main.c:536: for(j=0;j<3;j++)
   1489 DD 7E FA      [19] 3461 	ld	a,-6 (ix)
   148C C6 03         [ 7] 3462 	add	a, #0x03
   148E DD 77 FA      [19] 3463 	ld	-6 (ix),a
   1491 DD 7E FB      [19] 3464 	ld	a,-5 (ix)
   1494 CE 00         [ 7] 3465 	adc	a, #0x00
   1496 DD 77 FB      [19] 3466 	ld	-5 (ix),a
   1499 DD 34 EB      [23] 3467 	inc	-21 (ix)
   149C 20 03         [12] 3468 	jr	NZ,00228$
   149E DD 34 EC      [23] 3469 	inc	-20 (ix)
   14A1                    3470 00228$:
   14A1 DD 7E EB      [19] 3471 	ld	a,-21 (ix)
   14A4 D6 03         [ 7] 3472 	sub	a, #0x03
   14A6 DD 7E EC      [19] 3473 	ld	a,-20 (ix)
   14A9 17            [ 4] 3474 	rla
   14AA 3F            [ 4] 3475 	ccf
   14AB 1F            [ 4] 3476 	rra
   14AC DE 80         [ 7] 3477 	sbc	a, #0x80
   14AE 38 A2         [12] 3478 	jr	C,00123$
                           3479 ;main.c:534: for(i=0;i<3;i++)
   14B0 DD 7E FC      [19] 3480 	ld	a,-4 (ix)
   14B3 C6 09         [ 7] 3481 	add	a, #0x09
   14B5 DD 77 FC      [19] 3482 	ld	-4 (ix),a
   14B8 DD 7E FD      [19] 3483 	ld	a,-3 (ix)
   14BB CE 00         [ 7] 3484 	adc	a, #0x00
   14BD DD 77 FD      [19] 3485 	ld	-3 (ix),a
   14C0 DD 34 ED      [23] 3486 	inc	-19 (ix)
   14C3 20 03         [12] 3487 	jr	NZ,00229$
   14C5 DD 34 EE      [23] 3488 	inc	-18 (ix)
   14C8                    3489 00229$:
   14C8 DD 7E ED      [19] 3490 	ld	a,-19 (ix)
   14CB D6 03         [ 7] 3491 	sub	a, #0x03
   14CD DD 7E EE      [19] 3492 	ld	a,-18 (ix)
   14D0 17            [ 4] 3493 	rla
   14D1 3F            [ 4] 3494 	ccf
   14D2 1F            [ 4] 3495 	rra
   14D3 DE 80         [ 7] 3496 	sbc	a, #0x80
   14D5 DAr34r14      [10] 3497 	jp	C,00143$
                           3498 ;main.c:548: for(i=0;i<3;i++)
   14D8 DD 36 ED 00   [19] 3499 	ld	-19 (ix),#0x00
   14DC DD 36 EE 00   [19] 3500 	ld	-18 (ix),#0x00
   14E0 11 00 00      [10] 3501 	ld	de,#0x0000
                           3502 ;main.c:550: for(j=0;j<3;j++)
   14E3                    3503 00149$:
   14E3 DD 7E 04      [19] 3504 	ld	a,4 (ix)
   14E6 83            [ 4] 3505 	add	a, e
   14E7 DD 77 F8      [19] 3506 	ld	-8 (ix),a
   14EA DD 7E 05      [19] 3507 	ld	a,5 (ix)
   14ED 8A            [ 4] 3508 	adc	a, d
   14EE DD 77 F9      [19] 3509 	ld	-7 (ix),a
   14F1 21 00 00      [10] 3510 	ld	hl,#0x0000
   14F4 E3            [19] 3511 	ex	(sp), hl
   14F5 01 00 00      [10] 3512 	ld	bc,#0x0000
   14F8                    3513 00127$:
                           3514 ;main.c:552: if(f[i][j].val==1)
   14F8 DD 7E F8      [19] 3515 	ld	a,-8 (ix)
   14FB 81            [ 4] 3516 	add	a, c
   14FC DD 77 FA      [19] 3517 	ld	-6 (ix),a
   14FF DD 7E F9      [19] 3518 	ld	a,-7 (ix)
   1502 88            [ 4] 3519 	adc	a, b
   1503 DD 77 FB      [19] 3520 	ld	-5 (ix),a
   1506 DD 6E FA      [19] 3521 	ld	l,-6 (ix)
   1509 DD 66 FB      [19] 3522 	ld	h,-5 (ix)
   150C 23            [ 6] 3523 	inc	hl
   150D 23            [ 6] 3524 	inc	hl
   150E 7E            [ 7] 3525 	ld	a,(hl)
   150F 3D            [ 4] 3526 	dec	a
   1510 20 22         [12] 3527 	jr	NZ,00128$
                           3528 ;main.c:554: if(max7219ReadPixel(f[i][j].x,f[i][j].y-1) != 0)
   1512 DD 6E FA      [19] 3529 	ld	l,-6 (ix)
   1515 DD 66 FB      [19] 3530 	ld	h,-5 (ix)
   1518 23            [ 6] 3531 	inc	hl
   1519 4E            [ 7] 3532 	ld	c,(hl)
   151A 0D            [ 4] 3533 	dec	c
   151B DD 6E FA      [19] 3534 	ld	l,-6 (ix)
   151E DD 66 FB      [19] 3535 	ld	h,-5 (ix)
   1521 66            [ 7] 3536 	ld	h,(hl)
   1522 D5            [11] 3537 	push	de
   1523 79            [ 4] 3538 	ld	a,c
   1524 F5            [11] 3539 	push	af
   1525 33            [ 6] 3540 	inc	sp
   1526 E5            [11] 3541 	push	hl
   1527 33            [ 6] 3542 	inc	sp
   1528 CDr6Br05      [17] 3543 	call	_max7219ReadPixel
   152B F1            [10] 3544 	pop	af
   152C 7D            [ 4] 3545 	ld	a,l
   152D D1            [10] 3546 	pop	de
   152E B7            [ 4] 3547 	or	a, a
   152F 28 1D         [12] 3548 	jr	Z,00130$
                           3549 ;main.c:556: return;
   1531 C3r5Ar17      [10] 3550 	jp	00139$
                           3551 ;main.c:559: break;
   1534                    3552 00128$:
                           3553 ;main.c:550: for(j=0;j<3;j++)
   1534 03            [ 6] 3554 	inc	bc
   1535 03            [ 6] 3555 	inc	bc
   1536 03            [ 6] 3556 	inc	bc
   1537 DD 34 EB      [23] 3557 	inc	-21 (ix)
   153A 20 03         [12] 3558 	jr	NZ,00232$
   153C DD 34 EC      [23] 3559 	inc	-20 (ix)
   153F                    3560 00232$:
   153F DD 7E EB      [19] 3561 	ld	a,-21 (ix)
   1542 D6 03         [ 7] 3562 	sub	a, #0x03
   1544 DD 7E EC      [19] 3563 	ld	a,-20 (ix)
   1547 17            [ 4] 3564 	rla
   1548 3F            [ 4] 3565 	ccf
   1549 1F            [ 4] 3566 	rra
   154A DE 80         [ 7] 3567 	sbc	a, #0x80
   154C 38 AA         [12] 3568 	jr	C,00127$
   154E                    3569 00130$:
                           3570 ;main.c:548: for(i=0;i<3;i++)
   154E 21 09 00      [10] 3571 	ld	hl,#0x0009
   1551 19            [11] 3572 	add	hl,de
   1552 EB            [ 4] 3573 	ex	de,hl
   1553 DD 34 ED      [23] 3574 	inc	-19 (ix)
   1556 20 03         [12] 3575 	jr	NZ,00233$
   1558 DD 34 EE      [23] 3576 	inc	-18 (ix)
   155B                    3577 00233$:
   155B DD 7E ED      [19] 3578 	ld	a,-19 (ix)
   155E D6 03         [ 7] 3579 	sub	a, #0x03
   1560 DD 7E EE      [19] 3580 	ld	a,-18 (ix)
   1563 17            [ 4] 3581 	rla
   1564 3F            [ 4] 3582 	ccf
   1565 1F            [ 4] 3583 	rra
   1566 DE 80         [ 7] 3584 	sbc	a, #0x80
   1568 DArE3r14      [10] 3585 	jp	C,00149$
                           3586 ;main.c:566: for(i=0;i<3;i++)
   156B DD 36 ED 00   [19] 3587 	ld	-19 (ix),#0x00
   156F DD 36 EE 00   [19] 3588 	ld	-18 (ix),#0x00
   1573 DD 36 F8 00   [19] 3589 	ld	-8 (ix),#0x00
   1577 DD 36 F9 00   [19] 3590 	ld	-7 (ix),#0x00
                           3591 ;main.c:568: for(j=0;j<3;j++)
   157B                    3592 00152$:
   157B DD 7E 04      [19] 3593 	ld	a,4 (ix)
   157E DD 86 F8      [19] 3594 	add	a, -8 (ix)
   1581 4F            [ 4] 3595 	ld	c,a
   1582 DD 7E 05      [19] 3596 	ld	a,5 (ix)
   1585 DD 8E F9      [19] 3597 	adc	a, -7 (ix)
   1588 47            [ 4] 3598 	ld	b,a
   1589 11 00 00      [10] 3599 	ld	de,#0x0000
   158C DD 36 FA 00   [19] 3600 	ld	-6 (ix),#0x00
   1590 DD 36 FB 00   [19] 3601 	ld	-5 (ix),#0x00
   1594                    3602 00131$:
                           3603 ;main.c:570: f[i][j].y=f[i][j].y-1;
   1594 79            [ 4] 3604 	ld	a,c
   1595 DD 86 FA      [19] 3605 	add	a, -6 (ix)
   1598 DD 77 FE      [19] 3606 	ld	-2 (ix),a
   159B 78            [ 4] 3607 	ld	a,b
   159C DD 8E FB      [19] 3608 	adc	a, -5 (ix)
   159F DD 77 FF      [19] 3609 	ld	-1 (ix),a
   15A2 DD 34 FE      [23] 3610 	inc	-2 (ix)
   15A5 20 03         [12] 3611 	jr	NZ,00234$
   15A7 DD 34 FF      [23] 3612 	inc	-1 (ix)
   15AA                    3613 00234$:
   15AA DD 6E FE      [19] 3614 	ld	l,-2 (ix)
   15AD DD 66 FF      [19] 3615 	ld	h,-1 (ix)
   15B0 7E            [ 7] 3616 	ld	a,(hl)
   15B1 C6 FF         [ 7] 3617 	add	a,#0xFF
   15B3 DD 6E FE      [19] 3618 	ld	l,-2 (ix)
   15B6 DD 66 FF      [19] 3619 	ld	h,-1 (ix)
   15B9 77            [ 7] 3620 	ld	(hl),a
                           3621 ;main.c:568: for(j=0;j<3;j++)
   15BA DD 7E FA      [19] 3622 	ld	a,-6 (ix)
   15BD C6 03         [ 7] 3623 	add	a, #0x03
   15BF DD 77 FA      [19] 3624 	ld	-6 (ix),a
   15C2 DD 7E FB      [19] 3625 	ld	a,-5 (ix)
   15C5 CE 00         [ 7] 3626 	adc	a, #0x00
   15C7 DD 77 FB      [19] 3627 	ld	-5 (ix),a
   15CA 13            [ 6] 3628 	inc	de
   15CB 7B            [ 4] 3629 	ld	a,e
   15CC D6 03         [ 7] 3630 	sub	a, #0x03
   15CE 7A            [ 4] 3631 	ld	a,d
   15CF 17            [ 4] 3632 	rla
   15D0 3F            [ 4] 3633 	ccf
   15D1 1F            [ 4] 3634 	rra
   15D2 DE 80         [ 7] 3635 	sbc	a, #0x80
   15D4 38 BE         [12] 3636 	jr	C,00131$
                           3637 ;main.c:566: for(i=0;i<3;i++)
   15D6 DD 7E F8      [19] 3638 	ld	a,-8 (ix)
   15D9 C6 09         [ 7] 3639 	add	a, #0x09
   15DB DD 77 F8      [19] 3640 	ld	-8 (ix),a
   15DE DD 7E F9      [19] 3641 	ld	a,-7 (ix)
   15E1 CE 00         [ 7] 3642 	adc	a, #0x00
   15E3 DD 77 F9      [19] 3643 	ld	-7 (ix),a
   15E6 DD 34 ED      [23] 3644 	inc	-19 (ix)
   15E9 20 03         [12] 3645 	jr	NZ,00235$
   15EB DD 34 EE      [23] 3646 	inc	-18 (ix)
   15EE                    3647 00235$:
   15EE DD 7E ED      [19] 3648 	ld	a,-19 (ix)
   15F1 D6 03         [ 7] 3649 	sub	a, #0x03
   15F3 DD 7E EE      [19] 3650 	ld	a,-18 (ix)
   15F6 17            [ 4] 3651 	rla
   15F7 3F            [ 4] 3652 	ccf
   15F8 1F            [ 4] 3653 	rra
   15F9 DE 80         [ 7] 3654 	sbc	a, #0x80
   15FB DAr7Br15      [10] 3655 	jp	C,00152$
                           3656 ;main.c:574: if(f[0][0].y < 1)
   15FE DD 7E 04      [19] 3657 	ld	a,4 (ix)
   1601 DD 77 F8      [19] 3658 	ld	-8 (ix),a
   1604 DD 7E 05      [19] 3659 	ld	a,5 (ix)
   1607 DD 77 F9      [19] 3660 	ld	-7 (ix),a
   160A DD 6E F8      [19] 3661 	ld	l,-8 (ix)
   160D DD 66 F9      [19] 3662 	ld	h,-7 (ix)
   1610 23            [ 6] 3663 	inc	hl
   1611 7E            [ 7] 3664 	ld	a, (hl)
   1612 D6 01         [ 7] 3665 	sub	a, #0x01
   1614 D2r5Ar17      [10] 3666 	jp	NC,00139$
                           3667 ;main.c:577: for(i=0;i<3;i++)
   1617 DD 36 ED 00   [19] 3668 	ld	-19 (ix),#0x00
   161B DD 36 EE 00   [19] 3669 	ld	-18 (ix),#0x00
   161F DD 36 FA 00   [19] 3670 	ld	-6 (ix),#0x00
   1623 DD 36 FB 00   [19] 3671 	ld	-5 (ix),#0x00
   1627 DD 36 FE 00   [19] 3672 	ld	-2 (ix),#0x00
   162B DD 36 FF 00   [19] 3673 	ld	-1 (ix),#0x00
                           3674 ;main.c:579: for(j=0;j<3;j++)
   162F                    3675 00158$:
   162F DD 7E FA      [19] 3676 	ld	a,-6 (ix)
   1632 DD 86 F8      [19] 3677 	add	a, -8 (ix)
   1635 DD 77 FC      [19] 3678 	ld	-4 (ix),a
   1638 DD 7E FB      [19] 3679 	ld	a,-5 (ix)
   163B DD 8E F9      [19] 3680 	adc	a, -7 (ix)
   163E DD 77 FD      [19] 3681 	ld	-3 (ix),a
   1641 DD 7E FE      [19] 3682 	ld	a,-2 (ix)
   1644 DD 86 F8      [19] 3683 	add	a, -8 (ix)
   1647 DD 77 F6      [19] 3684 	ld	-10 (ix),a
   164A DD 7E FF      [19] 3685 	ld	a,-1 (ix)
   164D DD 8E F9      [19] 3686 	adc	a, -7 (ix)
   1650 DD 77 F7      [19] 3687 	ld	-9 (ix),a
   1653 21 00 00      [10] 3688 	ld	hl,#0x0000
   1656 E3            [19] 3689 	ex	(sp), hl
   1657 DD 36 F4 00   [19] 3690 	ld	-12 (ix),#0x00
   165B DD 36 F5 00   [19] 3691 	ld	-11 (ix),#0x00
   165F DD 36 F2 00   [19] 3692 	ld	-14 (ix),#0x00
   1663 DD 36 F3 00   [19] 3693 	ld	-13 (ix),#0x00
   1667                    3694 00135$:
                           3695 ;main.c:581: if(j==2)
   1667 DD 7E EB      [19] 3696 	ld	a,-21 (ix)
   166A D6 02         [ 7] 3697 	sub	a, #0x02
   166C 20 20         [12] 3698 	jr	NZ,00117$
   166E DD 7E EC      [19] 3699 	ld	a,-20 (ix)
   1671 B7            [ 4] 3700 	or	a, a
   1672 20 1A         [12] 3701 	jr	NZ,00117$
                           3702 ;main.c:583: f[i][j].x=f[i][j].x;
   1674 DD 7E F6      [19] 3703 	ld	a,-10 (ix)
   1677 DD 86 F2      [19] 3704 	add	a, -14 (ix)
   167A 5F            [ 4] 3705 	ld	e,a
   167B DD 7E F7      [19] 3706 	ld	a,-9 (ix)
   167E DD 8E F3      [19] 3707 	adc	a, -13 (ix)
   1681 57            [ 4] 3708 	ld	d,a
   1682 1A            [ 7] 3709 	ld	a,(de)
   1683 12            [ 7] 3710 	ld	(de),a
                           3711 ;main.c:584: f[i][j].y=f[i][j].y+1;
   1684 6B            [ 4] 3712 	ld	l, e
   1685 62            [ 4] 3713 	ld	h, d
   1686 23            [ 6] 3714 	inc	hl
   1687 34            [11] 3715 	inc	(hl)
                           3716 ;main.c:585: f[i][j].val=0;  
   1688 13            [ 6] 3717 	inc	de
   1689 13            [ 6] 3718 	inc	de
   168A AF            [ 4] 3719 	xor	a, a
   168B 12            [ 7] 3720 	ld	(de),a
   168C 18 5C         [12] 3721 	jr	00136$
   168E                    3722 00117$:
                           3723 ;main.c:588: f[i][j].x=f[i][j+1].x;
   168E DD 7E FC      [19] 3724 	ld	a,-4 (ix)
   1691 DD 86 F4      [19] 3725 	add	a, -12 (ix)
   1694 DD 77 F0      [19] 3726 	ld	-16 (ix),a
   1697 DD 7E FD      [19] 3727 	ld	a,-3 (ix)
   169A DD 8E F5      [19] 3728 	adc	a, -11 (ix)
   169D DD 77 F1      [19] 3729 	ld	-15 (ix),a
   16A0 DD 7E EB      [19] 3730 	ld	a,-21 (ix)
   16A3 DD 77 EF      [19] 3731 	ld	-17 (ix),a
   16A6 DD 34 EF      [23] 3732 	inc	-17 (ix)
   16A9 DD 6E EF      [19] 3733 	ld	l,-17 (ix)
   16AC 4D            [ 4] 3734 	ld	c,l
   16AD 29            [11] 3735 	add	hl, hl
   16AE 09            [11] 3736 	add	hl, bc
   16AF DD 7E FC      [19] 3737 	ld	a,-4 (ix)
   16B2 85            [ 4] 3738 	add	a, l
   16B3 5F            [ 4] 3739 	ld	e,a
   16B4 DD 7E FD      [19] 3740 	ld	a,-3 (ix)
   16B7 CE 00         [ 7] 3741 	adc	a, #0x00
   16B9 57            [ 4] 3742 	ld	d,a
   16BA 1A            [ 7] 3743 	ld	a,(de)
   16BB DD 6E F0      [19] 3744 	ld	l,-16 (ix)
   16BE DD 66 F1      [19] 3745 	ld	h,-15 (ix)
   16C1 77            [ 7] 3746 	ld	(hl),a
                           3747 ;main.c:589: f[i][j].y=f[i][j+1].y;
   16C2 DD 4E F0      [19] 3748 	ld	c,-16 (ix)
   16C5 DD 46 F1      [19] 3749 	ld	b,-15 (ix)
   16C8 03            [ 6] 3750 	inc	bc
   16C9 6B            [ 4] 3751 	ld	l, e
   16CA 62            [ 4] 3752 	ld	h, d
   16CB 23            [ 6] 3753 	inc	hl
   16CC 7E            [ 7] 3754 	ld	a,(hl)
   16CD 02            [ 7] 3755 	ld	(bc),a
                           3756 ;main.c:590: f[i][j].val=f[i][j+1].val;
   16CE DD 7E F0      [19] 3757 	ld	a,-16 (ix)
   16D1 C6 02         [ 7] 3758 	add	a, #0x02
   16D3 DD 77 F0      [19] 3759 	ld	-16 (ix),a
   16D6 DD 7E F1      [19] 3760 	ld	a,-15 (ix)
   16D9 CE 00         [ 7] 3761 	adc	a, #0x00
   16DB DD 77 F1      [19] 3762 	ld	-15 (ix),a
   16DE 6B            [ 4] 3763 	ld	l, e
   16DF 62            [ 4] 3764 	ld	h, d
   16E0 23            [ 6] 3765 	inc	hl
   16E1 23            [ 6] 3766 	inc	hl
   16E2 7E            [ 7] 3767 	ld	a,(hl)
   16E3 DD 6E F0      [19] 3768 	ld	l,-16 (ix)
   16E6 DD 66 F1      [19] 3769 	ld	h,-15 (ix)
   16E9 77            [ 7] 3770 	ld	(hl),a
   16EA                    3771 00136$:
                           3772 ;main.c:579: for(j=0;j<3;j++)
   16EA DD 7E F4      [19] 3773 	ld	a,-12 (ix)
   16ED C6 03         [ 7] 3774 	add	a, #0x03
   16EF DD 77 F4      [19] 3775 	ld	-12 (ix),a
   16F2 DD 7E F5      [19] 3776 	ld	a,-11 (ix)
   16F5 CE 00         [ 7] 3777 	adc	a, #0x00
   16F7 DD 77 F5      [19] 3778 	ld	-11 (ix),a
   16FA DD 7E F2      [19] 3779 	ld	a,-14 (ix)
   16FD C6 03         [ 7] 3780 	add	a, #0x03
   16FF DD 77 F2      [19] 3781 	ld	-14 (ix),a
   1702 DD 7E F3      [19] 3782 	ld	a,-13 (ix)
   1705 CE 00         [ 7] 3783 	adc	a, #0x00
   1707 DD 77 F3      [19] 3784 	ld	-13 (ix),a
   170A DD 34 EB      [23] 3785 	inc	-21 (ix)
   170D 20 03         [12] 3786 	jr	NZ,00238$
   170F DD 34 EC      [23] 3787 	inc	-20 (ix)
   1712                    3788 00238$:
   1712 DD 7E EB      [19] 3789 	ld	a,-21 (ix)
   1715 D6 03         [ 7] 3790 	sub	a, #0x03
   1717 DD 7E EC      [19] 3791 	ld	a,-20 (ix)
   171A 17            [ 4] 3792 	rla
   171B 3F            [ 4] 3793 	ccf
   171C 1F            [ 4] 3794 	rra
   171D DE 80         [ 7] 3795 	sbc	a, #0x80
   171F DAr67r16      [10] 3796 	jp	C,00135$
                           3797 ;main.c:577: for(i=0;i<3;i++)
   1722 DD 7E FA      [19] 3798 	ld	a,-6 (ix)
   1725 C6 09         [ 7] 3799 	add	a, #0x09
   1727 DD 77 FA      [19] 3800 	ld	-6 (ix),a
   172A DD 7E FB      [19] 3801 	ld	a,-5 (ix)
   172D CE 00         [ 7] 3802 	adc	a, #0x00
   172F DD 77 FB      [19] 3803 	ld	-5 (ix),a
   1732 DD 7E FE      [19] 3804 	ld	a,-2 (ix)
   1735 C6 09         [ 7] 3805 	add	a, #0x09
   1737 DD 77 FE      [19] 3806 	ld	-2 (ix),a
   173A DD 7E FF      [19] 3807 	ld	a,-1 (ix)
   173D CE 00         [ 7] 3808 	adc	a, #0x00
   173F DD 77 FF      [19] 3809 	ld	-1 (ix),a
   1742 DD 34 ED      [23] 3810 	inc	-19 (ix)
   1745 20 03         [12] 3811 	jr	NZ,00239$
   1747 DD 34 EE      [23] 3812 	inc	-18 (ix)
   174A                    3813 00239$:
   174A DD 7E ED      [19] 3814 	ld	a,-19 (ix)
   174D D6 03         [ 7] 3815 	sub	a, #0x03
   174F DD 7E EE      [19] 3816 	ld	a,-18 (ix)
   1752 17            [ 4] 3817 	rla
   1753 3F            [ 4] 3818 	ccf
   1754 1F            [ 4] 3819 	rra
   1755 DE 80         [ 7] 3820 	sbc	a, #0x80
   1757 DAr2Fr16      [10] 3821 	jp	C,00158$
   175A                    3822 00139$:
   175A DD F9         [10] 3823 	ld	sp, ix
   175C DD E1         [14] 3824 	pop	ix
   175E C9            [10] 3825 	ret
                           3826 ;main.c:597: void iniciaJuego(pixel f[3][3])
                           3827 ;	---------------------------------
                           3828 ; Function iniciaJuego
                           3829 ; ---------------------------------
   175F                    3830 _iniciaJuego::
   175F DD E5         [15] 3831 	push	ix
   1761 DD 21 00 00   [14] 3832 	ld	ix,#0
   1765 DD 39         [15] 3833 	add	ix,sp
   1767 3B            [ 6] 3834 	dec	sp
                           3835 ;main.c:602: dibujaCara(2);
   1768 21 02 00      [10] 3836 	ld	hl,#0x0002
   176B E5            [11] 3837 	push	hl
   176C CDrA9r09      [17] 3838 	call	_dibujaCara
                           3839 ;main.c:603: delay_ms(400);
   176F 21 90 01      [10] 3840 	ld	hl, #0x0190
   1772 E3            [19] 3841 	ex	(sp),hl
   1773 CDr0Er02      [17] 3842 	call	_delay_ms
                           3843 ;main.c:604: dibujaCara(3);
   1776 21 03 00      [10] 3844 	ld	hl, #0x0003
   1779 E3            [19] 3845 	ex	(sp),hl
   177A CDrA9r09      [17] 3846 	call	_dibujaCara
                           3847 ;main.c:605: delay_ms(400);
   177D 21 90 01      [10] 3848 	ld	hl, #0x0190
   1780 E3            [19] 3849 	ex	(sp),hl
   1781 CDr0Er02      [17] 3850 	call	_delay_ms
                           3851 ;main.c:606: dibujaCara(2);
   1784 21 02 00      [10] 3852 	ld	hl, #0x0002
   1787 E3            [19] 3853 	ex	(sp),hl
   1788 CDrA9r09      [17] 3854 	call	_dibujaCara
                           3855 ;main.c:607: delay_ms(400);
   178B 21 90 01      [10] 3856 	ld	hl, #0x0190
   178E E3            [19] 3857 	ex	(sp),hl
   178F CDr0Er02      [17] 3858 	call	_delay_ms
                           3859 ;main.c:608: dibujaCara(3);
   1792 21 03 00      [10] 3860 	ld	hl, #0x0003
   1795 E3            [19] 3861 	ex	(sp),hl
   1796 CDrA9r09      [17] 3862 	call	_dibujaCara
                           3863 ;main.c:609: delay_ms(400);
   1799 21 90 01      [10] 3864 	ld	hl, #0x0190
   179C E3            [19] 3865 	ex	(sp),hl
   179D CDr0Er02      [17] 3866 	call	_delay_ms
                           3867 ;main.c:610: dibujaCara(1);
   17A0 21 01 00      [10] 3868 	ld	hl, #0x0001
   17A3 E3            [19] 3869 	ex	(sp),hl
   17A4 CDrA9r09      [17] 3870 	call	_dibujaCara
                           3871 ;main.c:611: delay_ms(400);
   17A7 21 90 01      [10] 3872 	ld	hl, #0x0190
   17AA E3            [19] 3873 	ex	(sp),hl
   17AB CDr0Er02      [17] 3874 	call	_delay_ms
   17AE F1            [10] 3875 	pop	af
                           3876 ;main.c:612: for(i=1;i<9;i++)
   17AF 16 01         [ 7] 3877 	ld	d,#0x01
                           3878 ;main.c:614: for(j=1;j<9;j++)
   17B1                    3879 00121$:
   17B1 1E 01         [ 7] 3880 	ld	e,#0x01
   17B3                    3881 00107$:
                           3882 ;main.c:616: max7219DrawPixel(i,j,1);
   17B3 D5            [11] 3883 	push	de
   17B4 3E 01         [ 7] 3884 	ld	a,#0x01
   17B6 F5            [11] 3885 	push	af
   17B7 33            [ 6] 3886 	inc	sp
   17B8 7B            [ 4] 3887 	ld	a,e
   17B9 F5            [11] 3888 	push	af
   17BA 33            [ 6] 3889 	inc	sp
   17BB D5            [11] 3890 	push	de
   17BC 33            [ 6] 3891 	inc	sp
   17BD CDrE9r03      [17] 3892 	call	_max7219DrawPixel
   17C0 F1            [10] 3893 	pop	af
   17C1 33            [ 6] 3894 	inc	sp
   17C2 D1            [10] 3895 	pop	de
                           3896 ;main.c:614: for(j=1;j<9;j++)
   17C3 1C            [ 4] 3897 	inc	e
   17C4 7B            [ 4] 3898 	ld	a,e
   17C5 D6 09         [ 7] 3899 	sub	a, #0x09
   17C7 38 EA         [12] 3900 	jr	C,00107$
                           3901 ;main.c:612: for(i=1;i<9;i++)
   17C9 14            [ 4] 3902 	inc	d
   17CA 7A            [ 4] 3903 	ld	a,d
   17CB D6 09         [ 7] 3904 	sub	a, #0x09
   17CD 38 E2         [12] 3905 	jr	C,00121$
                           3906 ;main.c:619: for(i=1;i<9;i++)
   17CF 16 01         [ 7] 3907 	ld	d,#0x01
                           3908 ;main.c:621: for(j=1;j<9;j++)
   17D1                    3909 00125$:
   17D1 1E 01         [ 7] 3910 	ld	e,#0x01
   17D3                    3911 00111$:
                           3912 ;main.c:623: max7219DrawPixel(i,j,0);
   17D3 D5            [11] 3913 	push	de
   17D4 AF            [ 4] 3914 	xor	a, a
   17D5 F5            [11] 3915 	push	af
   17D6 33            [ 6] 3916 	inc	sp
   17D7 7B            [ 4] 3917 	ld	a,e
   17D8 F5            [11] 3918 	push	af
   17D9 33            [ 6] 3919 	inc	sp
   17DA D5            [11] 3920 	push	de
   17DB 33            [ 6] 3921 	inc	sp
   17DC CDrE9r03      [17] 3922 	call	_max7219DrawPixel
   17DF F1            [10] 3923 	pop	af
   17E0 33            [ 6] 3924 	inc	sp
   17E1 D1            [10] 3925 	pop	de
                           3926 ;main.c:621: for(j=1;j<9;j++)
   17E2 1C            [ 4] 3927 	inc	e
   17E3 7B            [ 4] 3928 	ld	a,e
   17E4 D6 09         [ 7] 3929 	sub	a, #0x09
   17E6 38 EB         [12] 3930 	jr	C,00111$
                           3931 ;main.c:619: for(i=1;i<9;i++)
   17E8 14            [ 4] 3932 	inc	d
   17E9 7A            [ 4] 3933 	ld	a,d
   17EA D6 09         [ 7] 3934 	sub	a, #0x09
   17EC 38 E3         [12] 3935 	jr	C,00125$
                           3936 ;main.c:627: for(i=0;i<3;i++)
   17EE DD 36 FF 00   [19] 3937 	ld	-1 (ix),#0x00
   17F2 11 00 00      [10] 3938 	ld	de,#0x0000
                           3939 ;main.c:629: for(j=0;j<3;j++)
   17F5                    3940 00129$:
   17F5 DD 6E 04      [19] 3941 	ld	l,4 (ix)
   17F8 DD 66 05      [19] 3942 	ld	h,5 (ix)
   17FB 19            [11] 3943 	add	hl,de
   17FC 01 00 00      [10] 3944 	ld	bc,#0x0000
   17FF                    3945 00115$:
                           3946 ;main.c:631: f[i][j].val=0;
   17FF E5            [11] 3947 	push	hl
   1800 FD E1         [14] 3948 	pop	iy
   1802 C5            [11] 3949 	push	bc
   1803 06 00         [ 7] 3950 	ld	b,#0x00
   1805 FD 09         [15] 3951 	add	iy, bc
   1807 C1            [10] 3952 	pop	bc
   1808 FD 23         [10] 3953 	inc	iy
   180A FD 23         [10] 3954 	inc	iy
   180C FD 36 00 00   [19] 3955 	ld	0 (iy), #0x00
                           3956 ;main.c:629: for(j=0;j<3;j++)
   1810 0C            [ 4] 3957 	inc	c
   1811 0C            [ 4] 3958 	inc	c
   1812 0C            [ 4] 3959 	inc	c
   1813 04            [ 4] 3960 	inc	b
   1814 78            [ 4] 3961 	ld	a,b
   1815 D6 03         [ 7] 3962 	sub	a, #0x03
   1817 38 E6         [12] 3963 	jr	C,00115$
                           3964 ;main.c:627: for(i=0;i<3;i++)
   1819 21 09 00      [10] 3965 	ld	hl,#0x0009
   181C 19            [11] 3966 	add	hl,de
   181D EB            [ 4] 3967 	ex	de,hl
   181E DD 34 FF      [23] 3968 	inc	-1 (ix)
   1821 DD 7E FF      [19] 3969 	ld	a,-1 (ix)
   1824 D6 03         [ 7] 3970 	sub	a, #0x03
   1826 38 CD         [12] 3971 	jr	C,00129$
                           3972 ;main.c:634: max7219Clear();
   1828 CDrAFr03      [17] 3973 	call	_max7219Clear
                           3974 ;main.c:635: llenaFigura(f,cont);
   182B 2Ar01r00      [16] 3975 	ld	hl,(_cont)
   182E E5            [11] 3976 	push	hl
   182F DD 6E 04      [19] 3977 	ld	l,4 (ix)
   1832 DD 66 05      [19] 3978 	ld	h,5 (ix)
   1835 E5            [11] 3979 	push	hl
   1836 CDr44r07      [17] 3980 	call	_llenaFigura
   1839 F1            [10] 3981 	pop	af
   183A F1            [10] 3982 	pop	af
                           3983 ;main.c:636: dibujaFigura(f);
   183B DD 6E 04      [19] 3984 	ld	l,4 (ix)
   183E DD 66 05      [19] 3985 	ld	h,5 (ix)
   1841 E5            [11] 3986 	push	hl
   1842 CDrFFr05      [17] 3987 	call	_dibujaFigura
   1845 F1            [10] 3988 	pop	af
   1846 33            [ 6] 3989 	inc	sp
   1847 DD E1         [14] 3990 	pop	ix
   1849 C9            [10] 3991 	ret
                           3992 ;main.c:641: void revizaPerdio(pixel f[3][3])
                           3993 ;	---------------------------------
                           3994 ; Function revizaPerdio
                           3995 ; ---------------------------------
   184A                    3996 _revizaPerdio::
                           3997 ;main.c:644: for(i=1;i<9;i++)
   184A 26 01         [ 7] 3998 	ld	h,#0x01
   184C                    3999 00104$:
                           4000 ;main.c:646: if(max7219ReadPixel(1,i) != 0)
   184C E5            [11] 4001 	push	hl
   184D E5            [11] 4002 	push	hl
   184E 33            [ 6] 4003 	inc	sp
   184F 3E 01         [ 7] 4004 	ld	a,#0x01
   1851 F5            [11] 4005 	push	af
   1852 33            [ 6] 4006 	inc	sp
   1853 CDr6Br05      [17] 4007 	call	_max7219ReadPixel
   1856 F1            [10] 4008 	pop	af
   1857 7D            [ 4] 4009 	ld	a,l
   1858 E1            [10] 4010 	pop	hl
   1859 B7            [ 4] 4011 	or	a, a
   185A 28 0A         [12] 4012 	jr	Z,00105$
                           4013 ;main.c:648: iniciaJuego(f);
   185C C1            [10] 4014 	pop	bc
   185D E1            [10] 4015 	pop	hl
   185E E5            [11] 4016 	push	hl
   185F C5            [11] 4017 	push	bc
   1860 E5            [11] 4018 	push	hl
   1861 CDr5Fr17      [17] 4019 	call	_iniciaJuego
   1864 F1            [10] 4020 	pop	af
                           4021 ;main.c:649: break;
   1865 C9            [10] 4022 	ret
   1866                    4023 00105$:
                           4024 ;main.c:644: for(i=1;i<9;i++)
   1866 24            [ 4] 4025 	inc	h
   1867 7C            [ 4] 4026 	ld	a,h
   1868 D6 09         [ 7] 4027 	sub	a, #0x09
   186A 38 E0         [12] 4028 	jr	C,00104$
   186C C9            [10] 4029 	ret
                           4030 ;main.c:707: void mueveAbajo(pixel f[3][3])
                           4031 ;	---------------------------------
                           4032 ; Function mueveAbajo
                           4033 ; ---------------------------------
   186D                    4034 _mueveAbajo::
   186D DD E5         [15] 4035 	push	ix
   186F DD 21 00 00   [14] 4036 	ld	ix,#0
   1873 DD 39         [15] 4037 	add	ix,sp
   1875 21 F0 FF      [10] 4038 	ld	hl,#-16
   1878 39            [11] 4039 	add	hl,sp
   1879 F9            [ 6] 4040 	ld	sp,hl
                           4041 ;main.c:710: borraFigura(f);
   187A DD 6E 04      [19] 4042 	ld	l,4 (ix)
   187D DD 66 05      [19] 4043 	ld	h,5 (ix)
   1880 E5            [11] 4044 	push	hl
   1881 CDrA4r06      [17] 4045 	call	_borraFigura
   1884 F1            [10] 4046 	pop	af
                           4047 ;main.c:713: for(i=0;i<3;i++)
   1885 DD 36 F2 00   [19] 4048 	ld	-14 (ix),#0x00
   1889 DD 36 F3 00   [19] 4049 	ld	-13 (ix),#0x00
   188D DD 36 FE 00   [19] 4050 	ld	-2 (ix),#0x00
   1891 DD 36 FF 00   [19] 4051 	ld	-1 (ix),#0x00
                           4052 ;main.c:715: for(j=0;j<3;j++)
   1895                    4053 00143$:
   1895 DD 7E 04      [19] 4054 	ld	a,4 (ix)
   1898 DD 86 FE      [19] 4055 	add	a, -2 (ix)
   189B DD 77 F8      [19] 4056 	ld	-8 (ix),a
   189E DD 7E 05      [19] 4057 	ld	a,5 (ix)
   18A1 DD 8E FF      [19] 4058 	adc	a, -1 (ix)
   18A4 DD 77 F9      [19] 4059 	ld	-7 (ix),a
   18A7 21 00 00      [10] 4060 	ld	hl,#0x0000
   18AA E3            [19] 4061 	ex	(sp), hl
   18AB DD 36 F6 00   [19] 4062 	ld	-10 (ix),#0x00
   18AF DD 36 F7 00   [19] 4063 	ld	-9 (ix),#0x00
   18B3                    4064 00123$:
                           4065 ;main.c:717: if(f[i][j].val==1)
   18B3 DD 7E F8      [19] 4066 	ld	a,-8 (ix)
   18B6 DD 86 F6      [19] 4067 	add	a, -10 (ix)
   18B9 DD 77 FC      [19] 4068 	ld	-4 (ix),a
   18BC DD 7E F9      [19] 4069 	ld	a,-7 (ix)
   18BF DD 8E F7      [19] 4070 	adc	a, -9 (ix)
   18C2 DD 77 FD      [19] 4071 	ld	-3 (ix),a
   18C5 DD 6E FC      [19] 4072 	ld	l,-4 (ix)
   18C8 DD 66 FD      [19] 4073 	ld	h,-3 (ix)
   18CB 23            [ 6] 4074 	inc	hl
   18CC 23            [ 6] 4075 	inc	hl
   18CD 7E            [ 7] 4076 	ld	a,(hl)
   18CE 3D            [ 4] 4077 	dec	a
   18CF 20 36         [12] 4078 	jr	NZ,00124$
                           4079 ;main.c:719: if(f[i][j].x+1 >= 9) // se sale de la malla
   18D1 DD 6E FC      [19] 4080 	ld	l,-4 (ix)
   18D4 DD 66 FD      [19] 4081 	ld	h,-3 (ix)
   18D7 5E            [ 7] 4082 	ld	e,(hl)
   18D8 16 00         [ 7] 4083 	ld	d,#0x00
   18DA 13            [ 6] 4084 	inc	de
   18DB 7B            [ 4] 4085 	ld	a, e
   18DC D6 09         [ 7] 4086 	sub	a, #0x09
   18DE 7A            [ 4] 4087 	ld	a,d
   18DF 17            [ 4] 4088 	rla
   18E0 3F            [ 4] 4089 	ccf
   18E1 1F            [ 4] 4090 	rra
   18E2 DE 80         [ 7] 4091 	sbc	a, #0x80
   18E4 38 21         [12] 4092 	jr	C,00124$
                           4093 ;main.c:721: dibujaFigura(f);
   18E6 DD 6E 04      [19] 4094 	ld	l,4 (ix)
   18E9 DD 66 05      [19] 4095 	ld	h,5 (ix)
   18EC E5            [11] 4096 	push	hl
   18ED CDrFFr05      [17] 4097 	call	_dibujaFigura
   18F0 F1            [10] 4098 	pop	af
                           4099 ;main.c:722: revizaRenglon();
   18F1 CDrD8r1B      [17] 4100 	call	_revizaRenglon
                           4101 ;main.c:724: llenaFigura(f,cont);
   18F4 2Ar01r00      [16] 4102 	ld	hl,(_cont)
   18F7 E5            [11] 4103 	push	hl
   18F8 DD 6E 04      [19] 4104 	ld	l,4 (ix)
   18FB DD 66 05      [19] 4105 	ld	h,5 (ix)
   18FE E5            [11] 4106 	push	hl
   18FF CDr44r07      [17] 4107 	call	_llenaFigura
   1902 F1            [10] 4108 	pop	af
   1903 F1            [10] 4109 	pop	af
                           4110 ;main.c:725: return; // no puede moverse la figura a abajo
   1904 C3rD3r1B      [10] 4111 	jp	00139$
   1907                    4112 00124$:
                           4113 ;main.c:715: for(j=0;j<3;j++)
   1907 DD 7E F6      [19] 4114 	ld	a,-10 (ix)
   190A C6 03         [ 7] 4115 	add	a, #0x03
   190C DD 77 F6      [19] 4116 	ld	-10 (ix),a
   190F DD 7E F7      [19] 4117 	ld	a,-9 (ix)
   1912 CE 00         [ 7] 4118 	adc	a, #0x00
   1914 DD 77 F7      [19] 4119 	ld	-9 (ix),a
   1917 DD 34 F0      [23] 4120 	inc	-16 (ix)
   191A 20 03         [12] 4121 	jr	NZ,00231$
   191C DD 34 F1      [23] 4122 	inc	-15 (ix)
   191F                    4123 00231$:
   191F DD 7E F0      [19] 4124 	ld	a,-16 (ix)
   1922 D6 03         [ 7] 4125 	sub	a, #0x03
   1924 DD 7E F1      [19] 4126 	ld	a,-15 (ix)
   1927 17            [ 4] 4127 	rla
   1928 3F            [ 4] 4128 	ccf
   1929 1F            [ 4] 4129 	rra
   192A DE 80         [ 7] 4130 	sbc	a, #0x80
   192C 38 85         [12] 4131 	jr	C,00123$
                           4132 ;main.c:713: for(i=0;i<3;i++)
   192E DD 7E FE      [19] 4133 	ld	a,-2 (ix)
   1931 C6 09         [ 7] 4134 	add	a, #0x09
   1933 DD 77 FE      [19] 4135 	ld	-2 (ix),a
   1936 DD 7E FF      [19] 4136 	ld	a,-1 (ix)
   1939 CE 00         [ 7] 4137 	adc	a, #0x00
   193B DD 77 FF      [19] 4138 	ld	-1 (ix),a
   193E DD 34 F2      [23] 4139 	inc	-14 (ix)
   1941 20 03         [12] 4140 	jr	NZ,00232$
   1943 DD 34 F3      [23] 4141 	inc	-13 (ix)
   1946                    4142 00232$:
   1946 DD 7E F2      [19] 4143 	ld	a,-14 (ix)
   1949 D6 03         [ 7] 4144 	sub	a, #0x03
   194B DD 7E F3      [19] 4145 	ld	a,-13 (ix)
   194E 17            [ 4] 4146 	rla
   194F 3F            [ 4] 4147 	ccf
   1950 1F            [ 4] 4148 	rra
   1951 DE 80         [ 7] 4149 	sbc	a, #0x80
   1953 DAr95r18      [10] 4150 	jp	C,00143$
                           4151 ;main.c:731: for(i=0;i<3;i++)
   1956 DD 36 F2 00   [19] 4152 	ld	-14 (ix),#0x00
   195A DD 36 F3 00   [19] 4153 	ld	-13 (ix),#0x00
   195E 11 00 00      [10] 4154 	ld	de,#0x0000
                           4155 ;main.c:733: for(j=2;j>0;j--)
   1961                    4156 00149$:
   1961 21 02 00      [10] 4157 	ld	hl,#0x0002
   1964 E3            [19] 4158 	ex	(sp), hl
   1965 01 12 00      [10] 4159 	ld	bc,#0x0012
   1968                    4160 00127$:
                           4161 ;main.c:735: if(f[j][i].val==1)
   1968 DD 6E 04      [19] 4162 	ld	l,4 (ix)
   196B DD 66 05      [19] 4163 	ld	h,5 (ix)
   196E 09            [11] 4164 	add	hl,bc
   196F 19            [11] 4165 	add	hl, de
   1970 E5            [11] 4166 	push	hl
   1971 FD E1         [14] 4167 	pop	iy
   1973 FD E5         [15] 4168 	push	iy
   1975 E1            [10] 4169 	pop	hl
   1976 23            [ 6] 4170 	inc	hl
   1977 23            [ 6] 4171 	inc	hl
   1978 7E            [ 7] 4172 	ld	a,(hl)
   1979 3D            [ 4] 4173 	dec	a
   197A 20 43         [12] 4174 	jr	NZ,00128$
                           4175 ;main.c:738: if(max7219ReadPixel(f[j][i].x+1,f[j][i].y) != 0)
   197C FD E5         [15] 4176 	push	iy
   197E E1            [10] 4177 	pop	hl
   197F 23            [ 6] 4178 	inc	hl
   1980 46            [ 7] 4179 	ld	b,(hl)
   1981 FD 7E 00      [19] 4180 	ld	a, 0 (iy)
   1984 3C            [ 4] 4181 	inc	a
   1985 D5            [11] 4182 	push	de
   1986 C5            [11] 4183 	push	bc
   1987 33            [ 6] 4184 	inc	sp
   1988 F5            [11] 4185 	push	af
   1989 33            [ 6] 4186 	inc	sp
   198A CDr6Br05      [17] 4187 	call	_max7219ReadPixel
   198D F1            [10] 4188 	pop	af
   198E 7D            [ 4] 4189 	ld	a,l
   198F D1            [10] 4190 	pop	de
   1990 B7            [ 4] 4191 	or	a, a
   1991 28 47         [12] 4192 	jr	Z,00130$
                           4193 ;main.c:740: dibujaFigura(f);
   1993 DD 6E 04      [19] 4194 	ld	l,4 (ix)
   1996 DD 66 05      [19] 4195 	ld	h,5 (ix)
   1999 E5            [11] 4196 	push	hl
   199A CDrFFr05      [17] 4197 	call	_dibujaFigura
   199D F1            [10] 4198 	pop	af
                           4199 ;main.c:741: revizaRenglon();
   199E CDrD8r1B      [17] 4200 	call	_revizaRenglon
                           4201 ;main.c:742: revizaPerdio(f); 
   19A1 DD 6E 04      [19] 4202 	ld	l,4 (ix)
   19A4 DD 66 05      [19] 4203 	ld	h,5 (ix)
   19A7 E5            [11] 4204 	push	hl
   19A8 CDr4Ar18      [17] 4205 	call	_revizaPerdio
   19AB F1            [10] 4206 	pop	af
                           4207 ;main.c:743: llenaFigura(f,cont);
   19AC 2Ar01r00      [16] 4208 	ld	hl,(_cont)
   19AF E5            [11] 4209 	push	hl
   19B0 DD 6E 04      [19] 4210 	ld	l,4 (ix)
   19B3 DD 66 05      [19] 4211 	ld	h,5 (ix)
   19B6 E5            [11] 4212 	push	hl
   19B7 CDr44r07      [17] 4213 	call	_llenaFigura
   19BA F1            [10] 4214 	pop	af
   19BB F1            [10] 4215 	pop	af
                           4216 ;main.c:744: return;
   19BC C3rD3r1B      [10] 4217 	jp	00139$
                           4218 ;main.c:747: break;
   19BF                    4219 00128$:
                           4220 ;main.c:733: for(j=2;j>0;j--)
   19BF 79            [ 4] 4221 	ld	a,c
   19C0 C6 F7         [ 7] 4222 	add	a,#0xF7
   19C2 4F            [ 4] 4223 	ld	c,a
   19C3 78            [ 4] 4224 	ld	a,b
   19C4 CE FF         [ 7] 4225 	adc	a,#0xFF
   19C6 47            [ 4] 4226 	ld	b,a
   19C7 E1            [10] 4227 	pop	hl
   19C8 E5            [11] 4228 	push	hl
   19C9 2B            [ 6] 4229 	dec	hl
   19CA E3            [19] 4230 	ex	(sp), hl
   19CB AF            [ 4] 4231 	xor	a, a
   19CC DD BE F0      [19] 4232 	cp	a, -16 (ix)
   19CF DD 9E F1      [19] 4233 	sbc	a, -15 (ix)
   19D2 E2rD7r19      [10] 4234 	jp	PO, 00235$
   19D5 EE 80         [ 7] 4235 	xor	a, #0x80
   19D7                    4236 00235$:
   19D7 FAr68r19      [10] 4237 	jp	M,00127$
   19DA                    4238 00130$:
                           4239 ;main.c:731: for(i=0;i<3;i++)
   19DA 13            [ 6] 4240 	inc	de
   19DB 13            [ 6] 4241 	inc	de
   19DC 13            [ 6] 4242 	inc	de
   19DD DD 34 F2      [23] 4243 	inc	-14 (ix)
   19E0 20 03         [12] 4244 	jr	NZ,00236$
   19E2 DD 34 F3      [23] 4245 	inc	-13 (ix)
   19E5                    4246 00236$:
   19E5 DD 7E F2      [19] 4247 	ld	a,-14 (ix)
   19E8 D6 03         [ 7] 4248 	sub	a, #0x03
   19EA DD 7E F3      [19] 4249 	ld	a,-13 (ix)
   19ED 17            [ 4] 4250 	rla
   19EE 3F            [ 4] 4251 	ccf
   19EF 1F            [ 4] 4252 	rra
   19F0 DE 80         [ 7] 4253 	sbc	a, #0x80
   19F2 DAr61r19      [10] 4254 	jp	C,00149$
                           4255 ;main.c:754: for(i=0;i<3;i++)
   19F5 DD 36 F2 00   [19] 4256 	ld	-14 (ix),#0x00
   19F9 DD 36 F3 00   [19] 4257 	ld	-13 (ix),#0x00
   19FD DD 36 FC 00   [19] 4258 	ld	-4 (ix),#0x00
   1A01 DD 36 FD 00   [19] 4259 	ld	-3 (ix),#0x00
                           4260 ;main.c:756: for(j=0;j<3;j++)
   1A05                    4261 00152$:
   1A05 DD 7E 04      [19] 4262 	ld	a,4 (ix)
   1A08 DD 86 FC      [19] 4263 	add	a, -4 (ix)
   1A0B DD 77 F6      [19] 4264 	ld	-10 (ix),a
   1A0E DD 7E 05      [19] 4265 	ld	a,5 (ix)
   1A11 DD 8E FD      [19] 4266 	adc	a, -3 (ix)
   1A14 DD 77 F7      [19] 4267 	ld	-9 (ix),a
   1A17 11 00 00      [10] 4268 	ld	de,#0x0000
   1A1A 01 00 00      [10] 4269 	ld	bc,#0x0000
   1A1D                    4270 00131$:
                           4271 ;main.c:758: f[i][j].x=f[i][j].x+1;
   1A1D DD 6E F6      [19] 4272 	ld	l,-10 (ix)
   1A20 DD 66 F7      [19] 4273 	ld	h,-9 (ix)
   1A23 09            [11] 4274 	add	hl,bc
   1A24 34            [11] 4275 	inc	(hl)
                           4276 ;main.c:756: for(j=0;j<3;j++)
   1A25 03            [ 6] 4277 	inc	bc
   1A26 03            [ 6] 4278 	inc	bc
   1A27 03            [ 6] 4279 	inc	bc
   1A28 13            [ 6] 4280 	inc	de
   1A29 7B            [ 4] 4281 	ld	a,e
   1A2A D6 03         [ 7] 4282 	sub	a, #0x03
   1A2C 7A            [ 4] 4283 	ld	a,d
   1A2D 17            [ 4] 4284 	rla
   1A2E 3F            [ 4] 4285 	ccf
   1A2F 1F            [ 4] 4286 	rra
   1A30 DE 80         [ 7] 4287 	sbc	a, #0x80
   1A32 38 E9         [12] 4288 	jr	C,00131$
                           4289 ;main.c:754: for(i=0;i<3;i++)
   1A34 DD 7E FC      [19] 4290 	ld	a,-4 (ix)
   1A37 C6 09         [ 7] 4291 	add	a, #0x09
   1A39 DD 77 FC      [19] 4292 	ld	-4 (ix),a
   1A3C DD 7E FD      [19] 4293 	ld	a,-3 (ix)
   1A3F CE 00         [ 7] 4294 	adc	a, #0x00
   1A41 DD 77 FD      [19] 4295 	ld	-3 (ix),a
   1A44 DD 34 F2      [23] 4296 	inc	-14 (ix)
   1A47 20 03         [12] 4297 	jr	NZ,00237$
   1A49 DD 34 F3      [23] 4298 	inc	-13 (ix)
   1A4C                    4299 00237$:
   1A4C DD 7E F2      [19] 4300 	ld	a,-14 (ix)
   1A4F D6 03         [ 7] 4301 	sub	a, #0x03
   1A51 DD 7E F3      [19] 4302 	ld	a,-13 (ix)
   1A54 17            [ 4] 4303 	rla
   1A55 3F            [ 4] 4304 	ccf
   1A56 1F            [ 4] 4305 	rra
   1A57 DE 80         [ 7] 4306 	sbc	a, #0x80
   1A59 38 AA         [12] 4307 	jr	C,00152$
                           4308 ;main.c:762: if(f[2][0].x > 8)
   1A5B DD 6E 04      [19] 4309 	ld	l,4 (ix)
   1A5E DD 66 05      [19] 4310 	ld	h,5 (ix)
   1A61 11 12 00      [10] 4311 	ld	de, #0x0012
   1A64 19            [11] 4312 	add	hl, de
   1A65 66            [ 7] 4313 	ld	h,(hl)
   1A66 3E 08         [ 7] 4314 	ld	a,#0x08
   1A68 94            [ 4] 4315 	sub	a, h
   1A69 D2rD3r1B      [10] 4316 	jp	NC,00139$
                           4317 ;main.c:765: for(i=0;i<3;i++)
   1A6C 01 00 00      [10] 4318 	ld	bc,#0x0000
   1A6F 11 00 00      [10] 4319 	ld	de,#0x0000
   1A72 DD 36 FC 00   [19] 4320 	ld	-4 (ix),#0x00
   1A76 DD 36 FD 00   [19] 4321 	ld	-3 (ix),#0x00
                           4322 ;main.c:767: for(j=2;j>=0;j--)
   1A7A                    4323 00158$:
   1A7A 21 02 00      [10] 4324 	ld	hl,#0x0002
   1A7D E3            [19] 4325 	ex	(sp), hl
   1A7E DD 36 F6 12   [19] 4326 	ld	-10 (ix),#0x12
   1A82 DD 36 F7 00   [19] 4327 	ld	-9 (ix),#0x00
   1A86 DD 36 F8 12   [19] 4328 	ld	-8 (ix),#0x12
   1A8A DD 36 F9 00   [19] 4329 	ld	-7 (ix),#0x00
   1A8E                    4330 00135$:
                           4331 ;main.c:776: f[j][i].x=f[j-1][i].x;
   1A8E DD 7E F0      [19] 4332 	ld	a,-16 (ix)
   1A91 C6 FF         [ 7] 4333 	add	a,#0xFF
   1A93 DD 77 FE      [19] 4334 	ld	-2 (ix),a
   1A96 DD 7E F1      [19] 4335 	ld	a,-15 (ix)
   1A99 CE FF         [ 7] 4336 	adc	a,#0xFF
   1A9B DD 77 FF      [19] 4337 	ld	-1 (ix),a
                           4338 ;main.c:769: if(j==0)
   1A9E DD 7E F1      [19] 4339 	ld	a,-15 (ix)
   1AA1 DD B6 F0      [19] 4340 	or	a,-16 (ix)
   1AA4 20 41         [12] 4341 	jr	NZ,00117$
                           4342 ;main.c:771: f[j][i].x=f[j][i].x-1;
   1AA6 DD 7E 04      [19] 4343 	ld	a,4 (ix)
   1AA9 DD 86 F8      [19] 4344 	add	a, -8 (ix)
   1AAC 67            [ 4] 4345 	ld	h,a
   1AAD DD 7E 05      [19] 4346 	ld	a,5 (ix)
   1AB0 DD 8E F9      [19] 4347 	adc	a, -7 (ix)
   1AB3 6F            [ 4] 4348 	ld	l,a
   1AB4 7C            [ 4] 4349 	ld	a,h
   1AB5 DD 86 FC      [19] 4350 	add	a, -4 (ix)
   1AB8 DD 77 FA      [19] 4351 	ld	-6 (ix),a
   1ABB 7D            [ 4] 4352 	ld	a,l
   1ABC DD 8E FD      [19] 4353 	adc	a, -3 (ix)
   1ABF DD 77 FB      [19] 4354 	ld	-5 (ix),a
   1AC2 DD 6E FA      [19] 4355 	ld	l,-6 (ix)
   1AC5 DD 66 FB      [19] 4356 	ld	h,-5 (ix)
   1AC8 7E            [ 7] 4357 	ld	a,(hl)
   1AC9 C6 FF         [ 7] 4358 	add	a,#0xFF
   1ACB DD 6E FA      [19] 4359 	ld	l,-6 (ix)
   1ACE DD 66 FB      [19] 4360 	ld	h,-5 (ix)
   1AD1 77            [ 7] 4361 	ld	(hl),a
                           4362 ;main.c:772: f[j][i].y=f[j][i].y;
   1AD2 DD 6E FA      [19] 4363 	ld	l,-6 (ix)
   1AD5 DD 66 FB      [19] 4364 	ld	h,-5 (ix)
   1AD8 23            [ 6] 4365 	inc	hl
   1AD9 7E            [ 7] 4366 	ld	a,(hl)
   1ADA 77            [ 7] 4367 	ld	(hl),a
                           4368 ;main.c:773: f[j][i].val=0;  
   1ADB DD 6E FA      [19] 4369 	ld	l,-6 (ix)
   1ADE DD 66 FB      [19] 4370 	ld	h,-5 (ix)
   1AE1 23            [ 6] 4371 	inc	hl
   1AE2 23            [ 6] 4372 	inc	hl
   1AE3 36 00         [10] 4373 	ld	(hl),#0x00
   1AE5 18 7B         [12] 4374 	jr	00136$
   1AE7                    4375 00117$:
                           4376 ;main.c:776: f[j][i].x=f[j-1][i].x;
   1AE7 DD 7E 04      [19] 4377 	ld	a,4 (ix)
   1AEA DD 86 F6      [19] 4378 	add	a, -10 (ix)
   1AED 6F            [ 4] 4379 	ld	l,a
   1AEE DD 7E 05      [19] 4380 	ld	a,5 (ix)
   1AF1 DD 8E F7      [19] 4381 	adc	a, -9 (ix)
   1AF4 67            [ 4] 4382 	ld	h,a
   1AF5 19            [11] 4383 	add	hl,de
   1AF6 DD 75 FA      [19] 4384 	ld	-6 (ix),l
   1AF9 DD 74 FB      [19] 4385 	ld	-5 (ix),h
   1AFC D5            [11] 4386 	push	de
   1AFD DD 5E FE      [19] 4387 	ld	e,-2 (ix)
   1B00 DD 56 FF      [19] 4388 	ld	d,-1 (ix)
   1B03 6B            [ 4] 4389 	ld	l, e
   1B04 62            [ 4] 4390 	ld	h, d
   1B05 29            [11] 4391 	add	hl, hl
   1B06 29            [11] 4392 	add	hl, hl
   1B07 29            [11] 4393 	add	hl, hl
   1B08 19            [11] 4394 	add	hl, de
   1B09 D1            [10] 4395 	pop	de
   1B0A DD 75 F4      [19] 4396 	ld	-12 (ix),l
   1B0D DD 74 F5      [19] 4397 	ld	-11 (ix),h
   1B10 DD 7E 04      [19] 4398 	ld	a,4 (ix)
   1B13 DD 86 F4      [19] 4399 	add	a, -12 (ix)
   1B16 6F            [ 4] 4400 	ld	l,a
   1B17 DD 7E 05      [19] 4401 	ld	a,5 (ix)
   1B1A DD 8E F5      [19] 4402 	adc	a, -11 (ix)
   1B1D 67            [ 4] 4403 	ld	h,a
   1B1E 19            [11] 4404 	add	hl, de
   1B1F E5            [11] 4405 	push	hl
   1B20 FD E1         [14] 4406 	pop	iy
   1B22 FD 7E 00      [19] 4407 	ld	a, 0 (iy)
   1B25 DD 6E FA      [19] 4408 	ld	l,-6 (ix)
   1B28 DD 66 FB      [19] 4409 	ld	h,-5 (ix)
   1B2B 77            [ 7] 4410 	ld	(hl),a
                           4411 ;main.c:777: f[j][i].y=f[j-1][i].y;
   1B2C DD 7E FA      [19] 4412 	ld	a,-6 (ix)
   1B2F C6 01         [ 7] 4413 	add	a, #0x01
   1B31 DD 77 F4      [19] 4414 	ld	-12 (ix),a
   1B34 DD 7E FB      [19] 4415 	ld	a,-5 (ix)
   1B37 CE 00         [ 7] 4416 	adc	a, #0x00
   1B39 DD 77 F5      [19] 4417 	ld	-11 (ix),a
   1B3C FD E5         [15] 4418 	push	iy
   1B3E E1            [10] 4419 	pop	hl
   1B3F 23            [ 6] 4420 	inc	hl
   1B40 7E            [ 7] 4421 	ld	a,(hl)
   1B41 DD 6E F4      [19] 4422 	ld	l,-12 (ix)
   1B44 DD 66 F5      [19] 4423 	ld	h,-11 (ix)
   1B47 77            [ 7] 4424 	ld	(hl),a
                           4425 ;main.c:778: f[j][i].val=f[j-1][i].val;
   1B48 DD 7E FA      [19] 4426 	ld	a,-6 (ix)
   1B4B C6 02         [ 7] 4427 	add	a, #0x02
   1B4D DD 77 F4      [19] 4428 	ld	-12 (ix),a
   1B50 DD 7E FB      [19] 4429 	ld	a,-5 (ix)
   1B53 CE 00         [ 7] 4430 	adc	a, #0x00
   1B55 DD 77 F5      [19] 4431 	ld	-11 (ix),a
   1B58 FD 7E 02      [19] 4432 	ld	a,2 (iy)
   1B5B DD 6E F4      [19] 4433 	ld	l,-12 (ix)
   1B5E DD 66 F5      [19] 4434 	ld	h,-11 (ix)
   1B61 77            [ 7] 4435 	ld	(hl),a
   1B62                    4436 00136$:
                           4437 ;main.c:767: for(j=2;j>=0;j--)
   1B62 DD 7E F6      [19] 4438 	ld	a,-10 (ix)
   1B65 C6 F7         [ 7] 4439 	add	a,#0xF7
   1B67 DD 77 F6      [19] 4440 	ld	-10 (ix),a
   1B6A DD 7E F7      [19] 4441 	ld	a,-9 (ix)
   1B6D CE FF         [ 7] 4442 	adc	a,#0xFF
   1B6F DD 77 F7      [19] 4443 	ld	-9 (ix),a
   1B72 DD 7E F8      [19] 4444 	ld	a,-8 (ix)
   1B75 C6 F7         [ 7] 4445 	add	a,#0xF7
   1B77 DD 77 F8      [19] 4446 	ld	-8 (ix),a
   1B7A DD 7E F9      [19] 4447 	ld	a,-7 (ix)
   1B7D CE FF         [ 7] 4448 	adc	a,#0xFF
   1B7F DD 77 F9      [19] 4449 	ld	-7 (ix),a
   1B82 DD 7E FE      [19] 4450 	ld	a,-2 (ix)
   1B85 DD 77 F0      [19] 4451 	ld	-16 (ix),a
   1B88 DD 7E FF      [19] 4452 	ld	a,-1 (ix)
   1B8B DD 77 F1      [19] 4453 	ld	-15 (ix),a
   1B8E DD CB FF 7E   [20] 4454 	bit	7, -1 (ix)
   1B92 CAr8Er1A      [10] 4455 	jp	Z,00135$
                           4456 ;main.c:765: for(i=0;i<3;i++)
   1B95 13            [ 6] 4457 	inc	de
   1B96 13            [ 6] 4458 	inc	de
   1B97 13            [ 6] 4459 	inc	de
   1B98 DD 7E FC      [19] 4460 	ld	a,-4 (ix)
   1B9B C6 03         [ 7] 4461 	add	a, #0x03
   1B9D DD 77 FC      [19] 4462 	ld	-4 (ix),a
   1BA0 DD 7E FD      [19] 4463 	ld	a,-3 (ix)
   1BA3 CE 00         [ 7] 4464 	adc	a, #0x00
   1BA5 DD 77 FD      [19] 4465 	ld	-3 (ix),a
   1BA8 03            [ 6] 4466 	inc	bc
   1BA9 79            [ 4] 4467 	ld	a,c
   1BAA D6 03         [ 7] 4468 	sub	a, #0x03
   1BAC 78            [ 4] 4469 	ld	a,b
   1BAD 17            [ 4] 4470 	rla
   1BAE 3F            [ 4] 4471 	ccf
   1BAF 1F            [ 4] 4472 	rra
   1BB0 DE 80         [ 7] 4473 	sbc	a, #0x80
   1BB2 DAr7Ar1A      [10] 4474 	jp	C,00158$
                           4475 ;main.c:782: dibujaFigura(f);
   1BB5 DD 6E 04      [19] 4476 	ld	l,4 (ix)
   1BB8 DD 66 05      [19] 4477 	ld	h,5 (ix)
   1BBB E5            [11] 4478 	push	hl
   1BBC CDrFFr05      [17] 4479 	call	_dibujaFigura
   1BBF F1            [10] 4480 	pop	af
                           4481 ;main.c:783: revizaRenglon();
   1BC0 CDrD8r1B      [17] 4482 	call	_revizaRenglon
                           4483 ;main.c:784: llenaFigura(f,cont);
   1BC3 2Ar01r00      [16] 4484 	ld	hl,(_cont)
   1BC6 E5            [11] 4485 	push	hl
   1BC7 DD 6E 04      [19] 4486 	ld	l,4 (ix)
   1BCA DD 66 05      [19] 4487 	ld	h,5 (ix)
   1BCD E5            [11] 4488 	push	hl
   1BCE CDr44r07      [17] 4489 	call	_llenaFigura
   1BD1 F1            [10] 4490 	pop	af
   1BD2 F1            [10] 4491 	pop	af
   1BD3                    4492 00139$:
   1BD3 DD F9         [10] 4493 	ld	sp, ix
   1BD5 DD E1         [14] 4494 	pop	ix
   1BD7 C9            [10] 4495 	ret
                           4496 ;main.c:791: void revizaRenglon()
                           4497 ;	---------------------------------
                           4498 ; Function revizaRenglon
                           4499 ; ---------------------------------
   1BD8                    4500 _revizaRenglon::
   1BD8 DD E5         [15] 4501 	push	ix
   1BDA DD 21 00 00   [14] 4502 	ld	ix,#0
   1BDE DD 39         [15] 4503 	add	ix,sp
   1BE0 3B            [ 6] 4504 	dec	sp
                           4505 ;main.c:799: for(i=1;i<9;i++)
   1BE1 16 01         [ 7] 4506 	ld	d,#0x01
   1BE3                    4507 00119$:
                           4508 ;main.c:801: comp=1;
                           4509 ;main.c:802: for(j=1;j<9;j++)
   1BE3 21 01 01      [10] 4510 	ld	hl,#0x0101
   1BE6                    4511 00112$:
                           4512 ;main.c:804: if(max7219ReadPixel(i,j) == 0)
   1BE6 E5            [11] 4513 	push	hl
   1BE7 D5            [11] 4514 	push	de
   1BE8 E5            [11] 4515 	push	hl
   1BE9 33            [ 6] 4516 	inc	sp
   1BEA D5            [11] 4517 	push	de
   1BEB 33            [ 6] 4518 	inc	sp
   1BEC CDr6Br05      [17] 4519 	call	_max7219ReadPixel
   1BEF F1            [10] 4520 	pop	af
   1BF0 7D            [ 4] 4521 	ld	a,l
   1BF1 D1            [10] 4522 	pop	de
   1BF2 E1            [10] 4523 	pop	hl
                           4524 ;main.c:806: comp=0;
   1BF3 B7            [ 4] 4525 	or	a,a
   1BF4 20 03         [12] 4526 	jr	NZ,00113$
   1BF6 6F            [ 4] 4527 	ld	l,a
                           4528 ;main.c:807: break;
   1BF7 18 06         [12] 4529 	jr	00103$
   1BF9                    4530 00113$:
                           4531 ;main.c:802: for(j=1;j<9;j++)
   1BF9 24            [ 4] 4532 	inc	h
   1BFA 7C            [ 4] 4533 	ld	a,h
   1BFB D6 09         [ 7] 4534 	sub	a, #0x09
   1BFD 38 E7         [12] 4535 	jr	C,00112$
   1BFF                    4536 00103$:
                           4537 ;main.c:810: if(comp==1)
   1BFF 2D            [ 4] 4538 	dec	l
   1C00 20 51         [12] 4539 	jr	NZ,00120$
                           4540 ;main.c:812: max7219DrawColumn(i,0x00);
   1C02 D5            [11] 4541 	push	de
   1C03 AF            [ 4] 4542 	xor	a, a
   1C04 F5            [11] 4543 	push	af
   1C05 33            [ 6] 4544 	inc	sp
   1C06 D5            [11] 4545 	push	de
   1C07 33            [ 6] 4546 	inc	sp
   1C08 CDr32r05      [17] 4547 	call	_max7219DrawColumn
   1C0B F1            [10] 4548 	pop	af
   1C0C D1            [10] 4549 	pop	de
                           4550 ;main.c:813: for(k=i;k>1;k--)
   1C0D 4A            [ 4] 4551 	ld	c,d
   1C0E                    4552 00117$:
   1C0E 3E 01         [ 7] 4553 	ld	a,#0x01
   1C10 91            [ 4] 4554 	sub	a, c
   1C11 30 40         [12] 4555 	jr	NC,00120$
                           4556 ;main.c:815: for(l=1;l<9;l++)
   1C13 59            [ 4] 4557 	ld	e,c
   1C14 1D            [ 4] 4558 	dec	e
   1C15 DD 73 FF      [19] 4559 	ld	-1 (ix),e
   1C18 06 01         [ 7] 4560 	ld	b,#0x01
   1C1A                    4561 00114$:
                           4562 ;main.c:817: if(max7219ReadPixel(k-1,l) != 0)
   1C1A C5            [11] 4563 	push	bc
   1C1B D5            [11] 4564 	push	de
   1C1C C5            [11] 4565 	push	bc
   1C1D 33            [ 6] 4566 	inc	sp
   1C1E DD 7E FF      [19] 4567 	ld	a,-1 (ix)
   1C21 F5            [11] 4568 	push	af
   1C22 33            [ 6] 4569 	inc	sp
   1C23 CDr6Br05      [17] 4570 	call	_max7219ReadPixel
   1C26 F1            [10] 4571 	pop	af
   1C27 7D            [ 4] 4572 	ld	a,l
   1C28 D1            [10] 4573 	pop	de
   1C29 C1            [10] 4574 	pop	bc
   1C2A B7            [ 4] 4575 	or	a, a
   1C2B 28 10         [12] 4576 	jr	Z,00105$
                           4577 ;main.c:819: max7219DrawPixel(k,l,1);
   1C2D C5            [11] 4578 	push	bc
   1C2E D5            [11] 4579 	push	de
   1C2F 3E 01         [ 7] 4580 	ld	a,#0x01
   1C31 F5            [11] 4581 	push	af
   1C32 33            [ 6] 4582 	inc	sp
   1C33 C5            [11] 4583 	push	bc
   1C34 CDrE9r03      [17] 4584 	call	_max7219DrawPixel
   1C37 F1            [10] 4585 	pop	af
   1C38 33            [ 6] 4586 	inc	sp
   1C39 D1            [10] 4587 	pop	de
   1C3A C1            [10] 4588 	pop	bc
   1C3B 18 0D         [12] 4589 	jr	00115$
   1C3D                    4590 00105$:
                           4591 ;main.c:823: max7219DrawPixel(k,l,0);
   1C3D C5            [11] 4592 	push	bc
   1C3E D5            [11] 4593 	push	de
   1C3F AF            [ 4] 4594 	xor	a, a
   1C40 F5            [11] 4595 	push	af
   1C41 33            [ 6] 4596 	inc	sp
   1C42 C5            [11] 4597 	push	bc
   1C43 CDrE9r03      [17] 4598 	call	_max7219DrawPixel
   1C46 F1            [10] 4599 	pop	af
   1C47 33            [ 6] 4600 	inc	sp
   1C48 D1            [10] 4601 	pop	de
   1C49 C1            [10] 4602 	pop	bc
   1C4A                    4603 00115$:
                           4604 ;main.c:815: for(l=1;l<9;l++)
   1C4A 04            [ 4] 4605 	inc	b
   1C4B 78            [ 4] 4606 	ld	a,b
   1C4C D6 09         [ 7] 4607 	sub	a, #0x09
   1C4E 38 CA         [12] 4608 	jr	C,00114$
                           4609 ;main.c:813: for(k=i;k>1;k--)
   1C50 4B            [ 4] 4610 	ld	c,e
   1C51 18 BB         [12] 4611 	jr	00117$
   1C53                    4612 00120$:
                           4613 ;main.c:799: for(i=1;i<9;i++)
   1C53 14            [ 4] 4614 	inc	d
   1C54 7A            [ 4] 4615 	ld	a,d
   1C55 D6 09         [ 7] 4616 	sub	a, #0x09
   1C57 38 8A         [12] 4617 	jr	C,00119$
   1C59 33            [ 6] 4618 	inc	sp
   1C5A DD E1         [14] 4619 	pop	ix
   1C5C C9            [10] 4620 	ret
                           4621 ;main.c:834: int main(){
                           4622 ;	---------------------------------
                           4623 ; Function main
                           4624 ; ---------------------------------
   1C5D                    4625 _main::
   1C5D DD E5         [15] 4626 	push	ix
   1C5F DD 21 00 00   [14] 4627 	ld	ix,#0
   1C63 DD 39         [15] 4628 	add	ix,sp
   1C65 21 D3 FF      [10] 4629 	ld	hl,#-45
   1C68 39            [11] 4630 	add	hl,sp
   1C69 F9            [ 6] 4631 	ld	sp,hl
                           4632 ;main.c:840: system_init(); 
   1C6A CDrF1r05      [17] 4633 	call	_system_init
                           4634 ;main.c:841: iniciaJuego(_figura);
   1C6D 21 00 00      [10] 4635 	ld	hl,#0x0000
   1C70 39            [11] 4636 	add	hl,sp
   1C71 DD 75 F2      [19] 4637 	ld	-14 (ix),l
   1C74 DD 74 F3      [19] 4638 	ld	-13 (ix),h
   1C77 DD 6E F2      [19] 4639 	ld	l,-14 (ix)
   1C7A DD 66 F3      [19] 4640 	ld	h,-13 (ix)
   1C7D E5            [11] 4641 	push	hl
   1C7E CDr5Fr17      [17] 4642 	call	_iniciaJuego
   1C81 F1            [10] 4643 	pop	af
                           4644 ;main.c:846: for(i=0;i<10;i++)
   1C82                    4645 00124$:
   1C82 DD 7E F2      [19] 4646 	ld	a,-14 (ix)
   1C85 DD 77 F0      [19] 4647 	ld	-16 (ix),a
   1C88 DD 7E F3      [19] 4648 	ld	a,-13 (ix)
   1C8B DD 77 F1      [19] 4649 	ld	-15 (ix),a
   1C8E DD 7E F2      [19] 4650 	ld	a,-14 (ix)
   1C91 DD 77 F4      [19] 4651 	ld	-12 (ix),a
   1C94 DD 7E F3      [19] 4652 	ld	a,-13 (ix)
   1C97 DD 77 F5      [19] 4653 	ld	-11 (ix),a
   1C9A DD 7E F2      [19] 4654 	ld	a,-14 (ix)
   1C9D DD 77 F6      [19] 4655 	ld	-10 (ix),a
   1CA0 DD 7E F3      [19] 4656 	ld	a,-13 (ix)
   1CA3 DD 77 F7      [19] 4657 	ld	-9 (ix),a
   1CA6 DD 7E F2      [19] 4658 	ld	a,-14 (ix)
   1CA9 DD 77 F8      [19] 4659 	ld	-8 (ix),a
   1CAC DD 7E F3      [19] 4660 	ld	a,-13 (ix)
   1CAF DD 77 F9      [19] 4661 	ld	-7 (ix),a
   1CB2 DD 7E F2      [19] 4662 	ld	a,-14 (ix)
   1CB5 DD 77 FA      [19] 4663 	ld	-6 (ix),a
   1CB8 DD 7E F3      [19] 4664 	ld	a,-13 (ix)
   1CBB DD 77 FB      [19] 4665 	ld	-5 (ix),a
   1CBE DD 7E F2      [19] 4666 	ld	a,-14 (ix)
   1CC1 DD 77 FC      [19] 4667 	ld	-4 (ix),a
   1CC4 DD 7E F3      [19] 4668 	ld	a,-13 (ix)
   1CC7 DD 77 FD      [19] 4669 	ld	-3 (ix),a
   1CCA DD 36 EE 00   [19] 4670 	ld	-18 (ix),#0x00
   1CCE                    4671 00115$:
                           4672 ;main.c:848: botones=PPI_PORTC ;
   1CCE DB 02         [11] 4673 	in	a,(_PPI_PORTC)
   1CD0 DD 77 EF      [19] 4674 	ld	-17 (ix),a
                           4675 ;main.c:851: if(botones & 0x01 > 0)
   1CD3 DD CB EF 46   [20] 4676 	bit	0, -17 (ix)
   1CD7 28 17         [12] 4677 	jr	Z,00102$
                           4678 ;main.c:853: mueveIzquierda(_figura);
   1CD9 DD 7E F0      [19] 4679 	ld	a,-16 (ix)
   1CDC DD 77 FE      [19] 4680 	ld	-2 (ix),a
   1CDF DD 7E F1      [19] 4681 	ld	a,-15 (ix)
   1CE2 DD 77 FF      [19] 4682 	ld	-1 (ix),a
   1CE5 DD 6E FE      [19] 4683 	ld	l,-2 (ix)
   1CE8 DD 66 FF      [19] 4684 	ld	h,-1 (ix)
   1CEB E5            [11] 4685 	push	hl
   1CEC CDr0Cr14      [17] 4686 	call	_mueveIzquierda
   1CEF F1            [10] 4687 	pop	af
   1CF0                    4688 00102$:
                           4689 ;main.c:855: if(botones & 0x02 > 0)
   1CF0 DD CB EF 4E   [20] 4690 	bit	1, -17 (ix)
   1CF4 28 17         [12] 4691 	jr	Z,00104$
                           4692 ;main.c:857: giraIzquierda(_figura);
   1CF6 DD 7E F4      [19] 4693 	ld	a,-12 (ix)
   1CF9 DD 77 FE      [19] 4694 	ld	-2 (ix),a
   1CFC DD 7E F5      [19] 4695 	ld	a,-11 (ix)
   1CFF DD 77 FF      [19] 4696 	ld	-1 (ix),a
   1D02 DD 6E FE      [19] 4697 	ld	l,-2 (ix)
   1D05 DD 66 FF      [19] 4698 	ld	h,-1 (ix)
   1D08 E5            [11] 4699 	push	hl
   1D09 CDr31r0E      [17] 4700 	call	_giraIzquierda
   1D0C F1            [10] 4701 	pop	af
   1D0D                    4702 00104$:
                           4703 ;main.c:859: if(botones & 0x04 > 0)
   1D0D DD CB EF 56   [20] 4704 	bit	2, -17 (ix)
   1D11 28 17         [12] 4705 	jr	Z,00106$
                           4706 ;main.c:861: giraDerecha(_figura);
   1D13 DD 7E F6      [19] 4707 	ld	a,-10 (ix)
   1D16 DD 77 FE      [19] 4708 	ld	-2 (ix),a
   1D19 DD 7E F7      [19] 4709 	ld	a,-9 (ix)
   1D1C DD 77 FF      [19] 4710 	ld	-1 (ix),a
   1D1F DD 6E FE      [19] 4711 	ld	l,-2 (ix)
   1D22 DD 66 FF      [19] 4712 	ld	h,-1 (ix)
   1D25 E5            [11] 4713 	push	hl
   1D26 CDr90r0B      [17] 4714 	call	_giraDerecha
   1D29 F1            [10] 4715 	pop	af
   1D2A                    4716 00106$:
                           4717 ;main.c:863: if(botones & 0x08 > 0)
   1D2A DD CB EF 5E   [20] 4718 	bit	3, -17 (ix)
   1D2E 28 0B         [12] 4719 	jr	Z,00108$
                           4720 ;main.c:865: mueveDerecha(_figura);
   1D30 DD 6E F8      [19] 4721 	ld	l,-8 (ix)
   1D33 DD 66 F9      [19] 4722 	ld	h,-7 (ix)
   1D36 E5            [11] 4723 	push	hl
   1D37 CDrCEr10      [17] 4724 	call	_mueveDerecha
   1D3A F1            [10] 4725 	pop	af
   1D3B                    4726 00108$:
                           4727 ;main.c:867: if(botones & 0x10 > 0)
   1D3B DD CB EF 66   [20] 4728 	bit	4, -17 (ix)
   1D3F 28 17         [12] 4729 	jr	Z,00110$
                           4730 ;main.c:869: mueveAbajo(_figura);
   1D41 DD 7E FA      [19] 4731 	ld	a,-6 (ix)
   1D44 DD 77 FE      [19] 4732 	ld	-2 (ix),a
   1D47 DD 7E FB      [19] 4733 	ld	a,-5 (ix)
   1D4A DD 77 FF      [19] 4734 	ld	-1 (ix),a
   1D4D DD 6E FE      [19] 4735 	ld	l,-2 (ix)
   1D50 DD 66 FF      [19] 4736 	ld	h,-1 (ix)
   1D53 E5            [11] 4737 	push	hl
   1D54 CDr6Dr18      [17] 4738 	call	_mueveAbajo
   1D57 F1            [10] 4739 	pop	af
   1D58                    4740 00110$:
                           4741 ;main.c:872: dibujaFigura(_figura);
   1D58 DD 6E FC      [19] 4742 	ld	l,-4 (ix)
   1D5B DD 66 FD      [19] 4743 	ld	h,-3 (ix)
   1D5E E5            [11] 4744 	push	hl
   1D5F CDrFFr05      [17] 4745 	call	_dibujaFigura
                           4746 ;main.c:873: delay_ms(100);
   1D62 21 64 00      [10] 4747 	ld	hl, #0x0064
   1D65 E3            [19] 4748 	ex	(sp),hl
   1D66 CDr0Er02      [17] 4749 	call	_delay_ms
   1D69 F1            [10] 4750 	pop	af
                           4751 ;main.c:846: for(i=0;i<10;i++)
   1D6A DD 34 EE      [23] 4752 	inc	-18 (ix)
   1D6D DD 7E EE      [19] 4753 	ld	a,-18 (ix)
   1D70 D6 0A         [ 7] 4754 	sub	a, #0x0A
   1D72 DArCEr1C      [10] 4755 	jp	C,00115$
                           4756 ;main.c:875: delay_ms(200);
   1D75 21 C8 00      [10] 4757 	ld	hl,#0x00C8
   1D78 E5            [11] 4758 	push	hl
   1D79 CDr0Er02      [17] 4759 	call	_delay_ms
   1D7C F1            [10] 4760 	pop	af
                           4761 ;main.c:876: mueveAbajo(_figura);
   1D7D DD 7E F2      [19] 4762 	ld	a,-14 (ix)
   1D80 DD 77 FE      [19] 4763 	ld	-2 (ix),a
   1D83 DD 7E F3      [19] 4764 	ld	a,-13 (ix)
   1D86 DD 77 FF      [19] 4765 	ld	-1 (ix),a
   1D89 DD 6E FE      [19] 4766 	ld	l,-2 (ix)
   1D8C DD 66 FF      [19] 4767 	ld	h,-1 (ix)
   1D8F E5            [11] 4768 	push	hl
   1D90 CDr6Dr18      [17] 4769 	call	_mueveAbajo
   1D93 F1            [10] 4770 	pop	af
                           4771 ;main.c:877: dibujaFigura(_figura);
   1D94 DD 7E F2      [19] 4772 	ld	a,-14 (ix)
   1D97 DD 77 FE      [19] 4773 	ld	-2 (ix),a
   1D9A DD 7E F3      [19] 4774 	ld	a,-13 (ix)
   1D9D DD 77 FF      [19] 4775 	ld	-1 (ix),a
   1DA0 DD 6E FE      [19] 4776 	ld	l,-2 (ix)
   1DA3 DD 66 FF      [19] 4777 	ld	h,-1 (ix)
   1DA6 E5            [11] 4778 	push	hl
   1DA7 CDrFFr05      [17] 4779 	call	_dibujaFigura
                           4780 ;main.c:878: delay_ms(400);
   1DAA 21 90 01      [10] 4781 	ld	hl, #0x0190
   1DAD E3            [19] 4782 	ex	(sp),hl
   1DAE CDr0Er02      [17] 4783 	call	_delay_ms
   1DB1 F1            [10] 4784 	pop	af
   1DB2 C3r82r1C      [10] 4785 	jp	00124$
                           4786 	.area _CODE
                           4787 	.area _INITIALIZER
   0000                    4788 __xinit___displayBuffer:
   0000 00                 4789 	.db #0x00	; 0
   0001 00                 4790 	.db #0x00	; 0
   0002 00                 4791 	.db #0x00	; 0
   0003 00                 4792 	.db #0x00	; 0
   0004 00                 4793 	.db #0x00	; 0
   0005 00                 4794 	.db #0x00	; 0
   0006 00                 4795 	.db #0x00	; 0
   0007 00                 4796 	.db #0x00	; 0
                           4797 	.area _CABS (ABS)
